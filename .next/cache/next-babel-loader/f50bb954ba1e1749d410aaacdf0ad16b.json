{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useRouter } from \"next/router\";\nimport { useEffect, useState } from \"react\";\nimport useLocalState from \"../../../../../../custom-hooks/useLocalState\";\nimport getQuizInfo from \"../../../../../../repository/QuizInfo/getQuizInfo\";\nexport default function useQuizInfo(quizId) {\n  var _useState = useState(false),\n      isLoading = _useState[0],\n      setIsLoading = _useState[1];\n\n  var _useState2 = useState(\"unknown\"),\n      testStatus = _useState2[0],\n      setTestStatus = _useState2[1];\n\n  var _useState3 = useState({}),\n      quizInfo = _useState3[0],\n      setQuizInfo = _useState3[1];\n\n  var _useState4 = useState({}),\n      userInfo = _useState4[0],\n      setUserInfo = _useState4[1];\n\n  var _useLocalState = useLocalState(\"user\", \"\"),\n      _useLocalState2 = _slicedToArray(_useLocalState, 1),\n      user = _useLocalState2[0];\n\n  var router = useRouter();\n  useEffect(function () {\n    fetchQuizInfo();\n  }, []);\n\n  var fetchQuizInfo = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response, _testStatus;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setIsLoading(true);\n              _context.next = 3;\n              return getQuizInfo(quizId, user === null || user === void 0 ? void 0 : user.token);\n\n            case 3:\n              response = _context.sent;\n\n              if (!((response === null || response === void 0 ? void 0 : response.test_status) === \"ongoing\")) {\n                _context.next = 7;\n                break;\n              }\n\n              router.push(\"/test/quiz/\".concat(quizId));\n              return _context.abrupt(\"return\");\n\n            case 7:\n              setIsLoading(false);\n              _testStatus = response === null || response === void 0 ? void 0 : response.test_status;\n\n              if (!(_testStatus !== \"new_test\" && _testStatus !== \"retake\" && _testStatus !== \"highest_attempt_count_reached\" && _testStatus !== \"ongoing\")) {\n                _context.next = 12;\n                break;\n              }\n\n              setTestStatus(\"unknown\");\n              return _context.abrupt(\"return\");\n\n            case 12:\n              setTestStatus(response === null || response === void 0 ? void 0 : response.test_status);\n              setQuizInfo(response === null || response === void 0 ? void 0 : response.quiz_info);\n              setUserInfo(response === null || response === void 0 ? void 0 : response.user_info);\n              console.log(response);\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetchQuizInfo() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return {\n    testStatus: testStatus,\n    quizInfo: quizInfo,\n    userInfo: userInfo,\n    isLoading: isLoading\n  };\n}","map":null,"metadata":{},"sourceType":"module"}