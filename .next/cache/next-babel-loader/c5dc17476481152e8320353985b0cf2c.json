{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Box, withStyles } from \"@material-ui/core\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { CommentContext } from \"../Comment\";\nimport Reply from \"./Reply/Reply\";\nimport ReplyBox from \"./ReplyBox/ReplyBox\";\n\nvar RepliesSection = function RepliesSection(_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  var _useContext = useContext(CommentContext),\n      comment = _useContext.comment,\n      setComment = _useContext.setComment,\n      setRepliesCount = _useContext.setRepliesCount;\n\n  var _useState = useState((comment === null || comment === void 0 ? void 0 : comment.replies) ? comment === null || comment === void 0 ? void 0 : comment.replies : []),\n      replies = _useState[0],\n      setReplies = _useState[1];\n\n  useEffect(function () {\n    setComment(function (state) {\n      var comment = _objectSpread({}, state);\n\n      comment.replies = [];\n      comment.replies = _toConsumableArray(replies);\n      return comment;\n    });\n    setRepliesCount(replies.length);\n  }, [replies]);\n  return /*#__PURE__*/_jsxs(Container, {\n    children: [/*#__PURE__*/_jsx(ReplyBox, {\n      commentId: comment === null || comment === void 0 ? void 0 : comment.id,\n      setReplies: setReplies,\n      setComment: setComment\n    }), replies && replies.map(function (reply) {\n      return /*#__PURE__*/_jsx(Reply, {\n        reply: reply\n      }, reply.id);\n    })]\n  });\n};\n\nexport default RepliesSection;\nvar Container = withStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    borderBottom: \"1px solid grey\",\n    paddingBottom: \"0.5rem\",\n    paddingLeft: \"5rem\"\n  }\n})(Box);","map":null,"metadata":{},"sourceType":"module"}