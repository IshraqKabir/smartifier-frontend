{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ishraqkabir/workspace/smartifier-frontend/Components/Question/Question.tsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _root;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Box, withStyles } from \"@material-ui/core\";\nimport React, { createContext, useContext } from \"react\";\nimport useLocalState from \"../../custom-hooks/useLocalState\";\nimport { QuizIDContext } from \"../QuizTest/QuizTest\";\nimport Style1 from \"./Style1/Style1\";\nimport Style2 from \"./Style2/Style2\";\nimport Style3 from \"./Style3/Style3\";\nvar AnswerContext = /*#__PURE__*/createContext(null);\n\nvar Question = function Question(_ref) {\n  _s();\n\n  var question = _ref.question,\n      position = _ref.position;\n\n  var _useLocalState = useLocalState(\"user\", \"\"),\n      _useLocalState2 = _slicedToArray(_useLocalState, 1),\n      user = _useLocalState2[0];\n\n  var _useContext = useContext(QuizIDContext),\n      quizID = _useContext.quizID;\n\n  var _useLocalState3 = useLocalState(\"\".concat(user.email, \"-quiz\").concat(quizID, \"-answers\"), {}),\n      _useLocalState4 = _slicedToArray(_useLocalState3, 2),\n      answers = _useLocalState4[0],\n      setAnswersState = _useLocalState4[1];\n\n  var setAnswers = function setAnswers() {\n    setAnswersState(function (state) {\n      var tempAnswers = _objectSpread({}, state);\n\n      if (question.answer_type === \"multiple_choice\") {\n        tempAnswers = _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, \"\".concat(questionID), [optionID]));\n      } else if (question.answer_type === \"checkboxes\") {\n        tempAnswers = _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, \"\".concat(questionID), [].concat(_toConsumableArray(tempAnswers[\"\".concat(questionID)]), [optionID])));\n      }\n\n      return _objectSpread({}, tempAnswers);\n    });\n  };\n\n  var style = null;\n\n  switch (question.style) {\n    case 1:\n      style = /*#__PURE__*/_jsxDEV(Style1, {\n        question: question,\n        position: position\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }, _this);\n      break;\n\n    case 2:\n      style = /*#__PURE__*/_jsxDEV(Style2, {\n        question: question,\n        position: position\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }, _this);\n      break;\n\n    case 3:\n      style = /*#__PURE__*/_jsxDEV(Style3, {\n        question: question,\n        position: position\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }, _this);\n      break;\n\n    default:\n      style = /*#__PURE__*/_jsxDEV(Style1, {\n        question: question,\n        position: position\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }, _this);\n      break;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: style\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 10\n  }, _this);\n};\n\n_s(Question, \"iJetKLyJQQOdY9gLzR0Uf9ybI/M=\", false, function () {\n  return [useLocalState, useLocalState];\n});\n\n_c = Question;\nexport default Question;\nvar Container = withStyles({\n  root: (_root = {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: \"2rem 5rem\",\n    background: \"transparent linear-gradient(180deg, #966BC2 0%, #437BBE6E 100%) 0% 0% no-repeat padding-box\",\n    borderRadius: 20,\n    minHeight: 150,\n    marginBottom: \"2rem\",\n    width: \"80%\"\n  }, _defineProperty(_root, \"@media (max-width: 1000px)\", {\n    width: \"90%\",\n    padding: \"2rem 3rem\"\n  }), _defineProperty(_root, \"@media (max-width: 800px)\", {\n    width: \"100%\",\n    padding: \"2rem 1rem\"\n  }), _root)\n})(Box);\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/Question/Question.tsx"],"names":["Box","withStyles","React","createContext","useContext","useLocalState","QuizIDContext","Style1","Style2","Style3","AnswerContext","Question","question","position","user","quizID","email","answers","setAnswersState","setAnswers","state","tempAnswers","answer_type","questionID","optionID","style","Container","root","display","flexDirection","padding","background","borderRadius","minHeight","marginBottom","width"],"mappings":";;;;;;;;;;;;;;AAAA,SAASA,GAAT,EAAcC,UAAd,QAAgC,mBAAhC;AACA,OAAOC,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AAEA,SAASC,aAAT,QAA8B,sBAA9B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAOA,IAAMC,aAAa,gBAAGP,aAAa,CAAC,IAAD,CAAnC;;AAEA,IAAMQ,QAA0B,GAAG,SAA7BA,QAA6B,OAA4B;AAAA;;AAAA,MAAzBC,QAAyB,QAAzBA,QAAyB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,uBAC9CR,aAAa,CAAC,MAAD,EAAS,EAAT,CADiC;AAAA;AAAA,MACtDS,IADsD;;AAAA,oBAE1CV,UAAU,CAACE,aAAD,CAFgC;AAAA,MAErDS,MAFqD,eAErDA,MAFqD;;AAAA,wBAI1BV,aAAa,WAC3CS,IAAI,CAACE,KADsC,kBACzBD,MADyB,eAE9C,EAF8C,CAJa;AAAA;AAAA,MAItDE,OAJsD;AAAA,MAI7CC,eAJ6C;;AAS7D,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvBD,IAAAA,eAAe,CAAC,UAACE,KAAD,EAAgB;AAC9B,UAAIC,WAAW,qBAAQD,KAAR,CAAf;;AAEA,UAAIR,QAAQ,CAACU,WAAT,KAAyB,iBAA7B,EAAgD;AAC9CD,QAAAA,WAAW,mCAAQD,KAAR,qCAAmBG,UAAnB,GAAkC,CAACC,QAAD,CAAlC,EAAX;AACD,OAFD,MAEO,IAAIZ,QAAQ,CAACU,WAAT,KAAyB,YAA7B,EAA2C;AAChDD,QAAAA,WAAW,mCACND,KADM,qCAELG,UAFK,gCAEcF,WAAW,WAAIE,UAAJ,EAFzB,IAE4CC,QAF5C,IAAX;AAID;;AAED,+BAAYH,WAAZ;AACD,KAbc,CAAf;AAcD,GAfD;;AAiBA,MAAII,KAAK,GAAG,IAAZ;;AACA,UAAQb,QAAQ,CAACa,KAAjB;AACE,SAAK,CAAL;AACEA,MAAAA,KAAK,gBAAG,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAEb,QAAlB;AAA4B,QAAA,QAAQ,EAAEC;AAAtC;AAAA;AAAA;AAAA;AAAA,eAAR;AACA;;AACF,SAAK,CAAL;AACEY,MAAAA,KAAK,gBAAG,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAEb,QAAlB;AAA4B,QAAA,QAAQ,EAAEC;AAAtC;AAAA;AAAA;AAAA;AAAA,eAAR;AACA;;AACF,SAAK,CAAL;AACEY,MAAAA,KAAK,gBAAG,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAEb,QAAlB;AAA4B,QAAA,QAAQ,EAAEC;AAAtC;AAAA;AAAA;AAAA;AAAA,eAAR;AACA;;AACF;AACEY,MAAAA,KAAK,gBAAG,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAEb,QAAlB;AAA4B,QAAA,QAAQ,EAAEC;AAAtC;AAAA;AAAA;AAAA;AAAA,eAAR;AACA;AAZJ;;AAeA,sBAAO,QAAC,SAAD;AAAA,cAAYY;AAAZ;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CA3CD;;GAAMd,Q;UACWN,a,EAGoBA,a;;;KAJ/BM,Q;AA6CN,eAAeA,QAAf;AAEA,IAAMe,SAAS,GAAGzB,UAAU,CAAC;AAC3B0B,EAAAA,IAAI;AACFC,IAAAA,OAAO,EAAE,MADP;AAEFC,IAAAA,aAAa,EAAE,QAFb;AAGFC,IAAAA,OAAO,EAAE,WAHP;AAIFC,IAAAA,UAAU,EACR,6FALA;AAMFC,IAAAA,YAAY,EAAE,EANZ;AAOFC,IAAAA,SAAS,EAAE,GAPT;AAQFC,IAAAA,YAAY,EAAE,MARZ;AASFC,IAAAA,KAAK,EAAE;AATL,4BAUD,4BAVC,EAU8B;AAC9BA,IAAAA,KAAK,EAAE,KADuB;AAE9BL,IAAAA,OAAO,EAAE;AAFqB,GAV9B,0BAcD,2BAdC,EAc6B;AAC7BK,IAAAA,KAAK,EAAE,MADsB;AAE7BL,IAAAA,OAAO,EAAE;AAFoB,GAd7B;AADuB,CAAD,CAAV,CAoBf9B,GApBe,CAAlB","sourcesContent":["import { Box, withStyles } from \"@material-ui/core\";\nimport React, { createContext, useContext } from \"react\";\nimport useLocalState from \"../../custom-hooks/useLocalState\";\nimport IQuestion from \"../../Models/IQuestion\";\nimport { QuizIDContext } from \"../QuizTest/QuizTest\";\nimport Style1 from \"./Style1/Style1\";\nimport Style2 from \"./Style2/Style2\";\nimport Style3 from \"./Style3/Style3\";\n\ninterface IProps {\n  question: IQuestion;\n  position: number;\n}\n\nconst AnswerContext = createContext(null);\n\nconst Question: React.FC<IProps> = ({ question, position }) => {\n  const [user] = useLocalState(\"user\", \"\");\n  const { quizID } = useContext(QuizIDContext);\n\n  const [answers, setAnswersState] = useLocalState(\n    `${user.email}-quiz${quizID}-answers`,\n    {}\n  );\n\n  const setAnswers = () => {\n    setAnswersState((state: any) => {\n      let tempAnswers = { ...state };\n\n      if (question.answer_type === \"multiple_choice\") {\n        tempAnswers = { ...state, [`${questionID}`]: [optionID] };\n      } else if (question.answer_type === \"checkboxes\") {\n        tempAnswers = {\n          ...state,\n          [`${questionID}`]: [...tempAnswers[`${questionID}`], optionID],\n        };\n      }\n\n      return { ...tempAnswers };\n    });\n  };\n\n  let style = null;\n  switch (question.style) {\n    case 1:\n      style = <Style1 question={question} position={position} />;\n      break;\n    case 2:\n      style = <Style2 question={question} position={position} />;\n      break;\n    case 3:\n      style = <Style3 question={question} position={position} />;\n      break;\n    default:\n      style = <Style1 question={question} position={position} />;\n      break;\n  }\n\n  return <Container>{style}</Container>;\n};\n\nexport default Question;\n\nconst Container = withStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: \"2rem 5rem\",\n    background:\n      \"transparent linear-gradient(180deg, #966BC2 0%, #437BBE6E 100%) 0% 0% no-repeat padding-box\",\n    borderRadius: 20,\n    minHeight: 150,\n    marginBottom: \"2rem\",\n    width: \"80%\",\n    [\"@media (max-width: 1000px)\"]: {\n      width: \"90%\",\n      padding: \"2rem 3rem\",\n    },\n    [\"@media (max-width: 800px)\"]: {\n      width: \"100%\",\n      padding: \"2rem 1rem\",\n    },\n  },\n})(Box);\n"]},"metadata":{},"sourceType":"module"}