{"ast":null,"code":"import { google } from \"googleapis\";\nconst googleConfig = {\n  clientId: process.env.GOOGLE_CLIENT_ID,\n  clientSecret: process.env.GOOGLE_CLIENT_SECRET,\n  redirect: process.env.GOOGLE_REDIRECT_URL\n};\nconst scopes = [\"https://www.googleapis.com/auth/blogger\", \"https://www.googleapis.com/auth/calendar\"];\n\nfunction createConnection() {\n  return new google.auth.OAuth2(googleConfig.clientId, googleConfig.clientSecret, googleConfig.redirect);\n}\n\nfunction getConnectionUrl(auth) {\n  return auth.generateAuthUrl({\n    access_type: \"offline\",\n    prompt: \"consent\",\n    scope: scopes\n  });\n}\n\nfunction urlGoogle() {\n  const auth = createConnection();\n  const url = getConnectionUrl(auth);\n  return url;\n}\n\nfunction getGoogleAccountFromCode(code) {}\n\nexport default ((req, res) => {\n  const {\n    get\n  } = req.query;\n\n  if (get === \"link\") {\n    res.statusCode = 200;\n    const url = urlGoogle();\n    res.json({\n      url\n    });\n  } else if (get === \"user\") {\n    if (!req.query.code) {\n      res.statusCode = 500;\n    } else {\n      const {\n        code\n      } = req.query;\n      return getGoogleAccountFromCode(code);\n    }\n  } else {\n    res.statusCode = 500;\n  }\n});","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/pages/api/auth/google.ts"],"names":["google","googleConfig","clientId","process","env","GOOGLE_CLIENT_ID","clientSecret","GOOGLE_CLIENT_SECRET","redirect","GOOGLE_REDIRECT_URL","scopes","createConnection","auth","OAuth2","getConnectionUrl","generateAuthUrl","access_type","prompt","scope","urlGoogle","url","getGoogleAccountFromCode","code","req","res","get","query","statusCode","json"],"mappings":"AAAA,SAASA,MAAT,QAAuB,YAAvB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,gBADH;AAEnBC,EAAAA,YAAY,EAAEH,OAAO,CAACC,GAAR,CAAYG,oBAFP;AAGnBC,EAAAA,QAAQ,EAAEL,OAAO,CAACC,GAAR,CAAYK;AAHH,CAArB;AAMA,MAAMC,MAAM,GAAG,CACb,yCADa,EAEb,0CAFa,CAAf;;AAKA,SAASC,gBAAT,GAA4B;AAC1B,SAAO,IAAIX,MAAM,CAACY,IAAP,CAAYC,MAAhB,CACLZ,YAAY,CAACC,QADR,EAELD,YAAY,CAACK,YAFR,EAGLL,YAAY,CAACO,QAHR,CAAP;AAKD;;AAED,SAASM,gBAAT,CAA0BF,IAA1B,EAAqC;AACnC,SAAOA,IAAI,CAACG,eAAL,CAAqB;AAC1BC,IAAAA,WAAW,EAAE,SADa;AAE1BC,IAAAA,MAAM,EAAE,SAFkB;AAG1BC,IAAAA,KAAK,EAAER;AAHmB,GAArB,CAAP;AAKD;;AAED,SAASS,SAAT,GAAqB;AACnB,QAAMP,IAAI,GAAGD,gBAAgB,EAA7B;AACA,QAAMS,GAAG,GAAGN,gBAAgB,CAACF,IAAD,CAA5B;AAEA,SAAOQ,GAAP;AACD;;AAED,SAASC,wBAAT,CAAkCC,IAAlC,EAAwC,CAAE;;AAE1C,gBAAe,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC3B,QAAM;AAAEC,IAAAA;AAAF,MAAUF,GAAG,CAACG,KAApB;;AAEA,MAAID,GAAG,KAAK,MAAZ,EAAoB;AAClBD,IAAAA,GAAG,CAACG,UAAJ,GAAiB,GAAjB;AACA,UAAMP,GAAG,GAAGD,SAAS,EAArB;AACAK,IAAAA,GAAG,CAACI,IAAJ,CAAS;AAAER,MAAAA;AAAF,KAAT;AACD,GAJD,MAIO,IAAIK,GAAG,KAAK,MAAZ,EAAoB;AACzB,QAAI,CAACF,GAAG,CAACG,KAAJ,CAAUJ,IAAf,EAAqB;AACnBE,MAAAA,GAAG,CAACG,UAAJ,GAAiB,GAAjB;AACD,KAFD,MAEO;AACL,YAAM;AAAEL,QAAAA;AAAF,UAAWC,GAAG,CAACG,KAArB;AAEA,aAAOL,wBAAwB,CAACC,IAAD,CAA/B;AACD;AACF,GARM,MAQA;AACLE,IAAAA,GAAG,CAACG,UAAJ,GAAiB,GAAjB;AACD;AACF,CAlBD","sourcesContent":["import { google } from \"googleapis\";\n\nconst googleConfig = {\n  clientId: process.env.GOOGLE_CLIENT_ID,\n  clientSecret: process.env.GOOGLE_CLIENT_SECRET,\n  redirect: process.env.GOOGLE_REDIRECT_URL,\n};\n\nconst scopes = [\n  \"https://www.googleapis.com/auth/blogger\",\n  \"https://www.googleapis.com/auth/calendar\",\n];\n\nfunction createConnection() {\n  return new google.auth.OAuth2(\n    googleConfig.clientId,\n    googleConfig.clientSecret,\n    googleConfig.redirect\n  );\n}\n\nfunction getConnectionUrl(auth: any) {\n  return auth.generateAuthUrl({\n    access_type: \"offline\",\n    prompt: \"consent\",\n    scope: scopes,\n  });\n}\n\nfunction urlGoogle() {\n  const auth = createConnection();\n  const url = getConnectionUrl(auth);\n\n  return url;\n}\n\nfunction getGoogleAccountFromCode(code) {}\n\nexport default (req, res) => {\n  const { get } = req.query;\n\n  if (get === \"link\") {\n    res.statusCode = 200;\n    const url = urlGoogle();\n    res.json({ url });\n  } else if (get === \"user\") {\n    if (!req.query.code) {\n      res.statusCode = 500;\n    } else {\n      const { code } = req.query;\n\n      return getGoogleAccountFromCode(code);\n    }\n  } else {\n    res.statusCode = 500;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}