{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { local_backend_url } from \"../url\";\n\nfunction useSearch(url, query) {\n  _s();\n\n  var _useState = useState([]),\n      data = _useState[0],\n      setData = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(false),\n      error = _useState3[0],\n      setError = _useState3[1];\n\n  useEffect(function () {\n    setData([]);\n  }, [query]);\n  useEffect(function () {\n    setLoading(true);\n    setError(false);\n    var source = axios.CancelToken.source();\n\n    var fetchData = function fetchData() {\n      axios({\n        method: \"GET\",\n        url: \"\".concat(local_backend_url).concat(url),\n        params: {\n          query: query\n        },\n        cancelToken: source.token,\n        headers: {\n          Accept: \"application/json\"\n        }\n      }).then(function (res) {\n        setData(_toConsumableArray(res.data));\n        console.log(data);\n        setLoading(false);\n        setError(false);\n      })[\"catch\"](function (error) {\n        if (axios.isCancel(error)) return;\n        setError(true);\n      });\n    };\n\n    fetchData();\n    return function () {\n      console.log(\"canceell\");\n      source.cancel();\n    };\n  }, [query]);\n  return {\n    data: data,\n    loading: loading,\n    error: error\n  };\n}\n\n_s(useSearch, \"4mpjQtfMd7RZZUsnH4USIg2VrEg=\");\n\nexport default useSearch;","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/custom-hooks/useSearch.tsx"],"names":["axios","useEffect","useState","local_backend_url","useSearch","url","query","data","setData","loading","setLoading","error","setError","source","CancelToken","fetchData","method","params","cancelToken","token","headers","Accept","then","res","console","log","isCancel","cancel"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,iBAAT,QAAkC,QAAlC;;AAEA,SAASC,SAAT,CAAmBC,GAAnB,EAAgCC,KAAhC,EAA+C;AAAA;;AAAA,kBACrBJ,QAAQ,CAAC,EAAD,CADa;AAAA,MACtCK,IADsC;AAAA,MAChCC,OADgC;;AAAA,mBAEfN,QAAQ,CAAU,KAAV,CAFO;AAAA,MAEtCO,OAFsC;AAAA,MAE7BC,UAF6B;;AAAA,mBAGnBR,QAAQ,CAAU,KAAV,CAHW;AAAA,MAGtCS,KAHsC;AAAA,MAG/BC,QAH+B;;AAK7CX,EAAAA,SAAS,CAAC,YAAM;AACdO,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD,GAFQ,EAEN,CAACF,KAAD,CAFM,CAAT;AAIAL,EAAAA,SAAS,CAAC,YAAM;AAEdS,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,IAAAA,QAAQ,CAAC,KAAD,CAAR;AAEA,QAAMC,MAAM,GAAGb,KAAK,CAACc,WAAN,CAAkBD,MAAlB,EAAf;;AAEA,QAAME,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtBf,MAAAA,KAAK,CAAC;AACJgB,QAAAA,MAAM,EAAE,KADJ;AAEJX,QAAAA,GAAG,YAAKF,iBAAL,SAAyBE,GAAzB,CAFC;AAGJY,QAAAA,MAAM,EAAE;AAAEX,UAAAA,KAAK,EAAEA;AAAT,SAHJ;AAIJY,QAAAA,WAAW,EAAEL,MAAM,CAACM,KAJhB;AAKJC,QAAAA,OAAO,EAAE;AACPC,UAAAA,MAAM,EAAE;AADD;AALL,OAAD,CAAL,CASGC,IATH,CASQ,UAACC,GAAD,EAAS;AACbf,QAAAA,OAAO,oBAAKe,GAAG,CAAChB,IAAT,EAAP;AAEAiB,QAAAA,OAAO,CAACC,GAAR,CAAYlB,IAAZ;AAEAG,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,QAAAA,QAAQ,CAAC,KAAD,CAAR;AACD,OAhBH,WAiBS,UAACD,KAAD,EAAW;AAChB,YAAIX,KAAK,CAAC0B,QAAN,CAAef,KAAf,CAAJ,EAA2B;AAC3BC,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,OApBH;AAqBD,KAtBD;;AAwBAG,IAAAA,SAAS;AAET,WAAO,YAAM;AACTS,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACFZ,MAAAA,MAAM,CAACc,MAAP;AACD,KAHD;AAID,GArCQ,EAqCN,CAACrB,KAAD,CArCM,CAAT;AAuCA,SAAO;AAAEC,IAAAA,IAAI,EAAJA,IAAF;AAAQE,IAAAA,OAAO,EAAPA,OAAR;AAAiBE,IAAAA,KAAK,EAALA;AAAjB,GAAP;AACD;;GAjDQP,S;;AAmDT,eAAeA,SAAf","sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { local_backend_url } from \"../url\";\n\nfunction useSearch(url: String, query: String) {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState<boolean>(false);\n\n  useEffect(() => {\n    setData([]);\n  }, [query]);\n\n  useEffect(() => {\n\n    setLoading(true);\n    setError(false);\n\n    const source = axios.CancelToken.source();\n\n    const fetchData = () => {\n      axios({\n        method: \"GET\",\n        url: `${local_backend_url}${url}`,\n        params: { query: query },\n        cancelToken: source.token,\n        headers: {\n          Accept: \"application/json\",\n        },\n      })\n        .then((res) => {\n          setData([...res.data]);\n\n          console.log(data);\n\n          setLoading(false);\n          setError(false);\n        })\n        .catch((error) => {\n          if (axios.isCancel(error)) return;\n          setError(true);\n        });\n    };\n\n    fetchData();\n\n    return () => {\n        console.log(\"canceell\")\n      source.cancel();\n    };\n  }, [query]);\n\n  return { data, loading, error };\n}\n\nexport default useSearch;\n"]},"metadata":{},"sourceType":"module"}