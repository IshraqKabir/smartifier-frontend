{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n\nfunction useLocalState(key, defaultValue) {\n  _s();\n\n  var _useState = useState(function () {\n    if (true) {\n      var storedValue = JSON.parse(localStorage.getItem(key));\n\n      if (!storedValue) {\n        return defaultValue;\n      }\n\n      return storedValue === null ? defaultValue : storedValue;\n    } else {\n      return defaultValue;\n    }\n  }),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  useEffect(function () {\n    var listener = function listener(e) {\n      if (e.storageArea === localStorage && e.key === key) {\n        setValue(JSON.parse(e.newValue));\n      }\n    };\n\n    window.addEventListener(\"storage\", listener);\n    return function () {\n      window.removeEventListener(\"storage\", listener);\n    };\n  }, [key]);\n\n  var setValueInLocalStorage = function setValueInLocalStorage(newValue) {\n    setValue(function (currentValue) {\n      var result = typeof newValue === \"function\" ? newValue(currentValue) : newValue;\n      localStorage.setItem(key, JSON.stringify(result));\n      return result;\n    });\n  };\n\n  useEffect(function () {\n    var storedValue = JSON.parse(localStorage.getItem(key));\n\n    if (storedValue) {\n      setValueInLocalStorage(storedValue);\n    } else {\n      setValueInLocalStorage(value);\n    }\n  }, []);\n  return [value, setValueInLocalStorage];\n}\n\n_s(useLocalState, \"O+A5e9eaL797InZ/I+u068RXzG4=\");\n\nexport default useLocalState;","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/custom-hooks/useLocalState.ts"],"names":["useState","useEffect","useLocalState","key","defaultValue","storedValue","JSON","parse","localStorage","getItem","value","setValue","listener","e","storageArea","newValue","window","addEventListener","removeEventListener","setValueInLocalStorage","currentValue","result","setItem","stringify"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAGA,SAASC,aAAT,CAA0BC,GAA1B,EAAuCC,YAAvC,EAAwD;AAAA;;AAAA,kBAC5BJ,QAAQ,CAAC,YAAM;AACvC,cAAqB;AACnB,UAAMK,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBN,GAArB,CAAX,CAApB;;AACA,UAAI,CAACE,WAAL,EAAkB;AAChB,eAAOD,YAAP;AACD;;AACD,aAAOC,WAAW,KAAK,IAAhB,GAAuBD,YAAvB,GAAsCC,WAA7C;AACD,KAND,MAMO;AACL,aAAOD,YAAP;AACD;AACF,GAViC,CADoB;AAAA,MAC/CM,KAD+C;AAAA,MACxCC,QADwC;;AAatDV,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMW,QAAQ,GAAG,SAAXA,QAAW,CAACC,CAAD,EAAO;AACtB,UAAIA,CAAC,CAACC,WAAF,KAAkBN,YAAlB,IAAkCK,CAAC,CAACV,GAAF,KAAUA,GAAhD,EAAqD;AACnDQ,QAAAA,QAAQ,CAACL,IAAI,CAACC,KAAL,CAAWM,CAAC,CAACE,QAAb,CAAD,CAAR;AACD;AACF,KAJD;;AAKAC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmCL,QAAnC;AAEA,WAAO,YAAM;AACXI,MAAAA,MAAM,CAACE,mBAAP,CAA2B,SAA3B,EAAsCN,QAAtC;AACD,KAFD;AAGD,GAXQ,EAWN,CAACT,GAAD,CAXM,CAAT;;AAaA,MAAMgB,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACJ,QAAD,EAAc;AAE3CJ,IAAAA,QAAQ,CAAC,UAACS,YAAD,EAAkB;AACzB,UAAMC,MAAM,GACV,OAAON,QAAP,KAAoB,UAApB,GAAiCA,QAAQ,CAACK,YAAD,CAAzC,GAA0DL,QAD5D;AAGAP,MAAAA,YAAY,CAACc,OAAb,CAAqBnB,GAArB,EAA0BG,IAAI,CAACiB,SAAL,CAAeF,MAAf,CAA1B;AACA,aAAOA,MAAP;AACD,KANO,CAAR;AAOD,GATD;;AAWApB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMI,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBN,GAArB,CAAX,CAApB;;AACA,QAAIE,WAAJ,EAAiB;AACfc,MAAAA,sBAAsB,CAACd,WAAD,CAAtB;AACD,KAFD,MAEO;AACLc,MAAAA,sBAAsB,CAACT,KAAD,CAAtB;AACD;AACF,GAPQ,EAON,EAPM,CAAT;AASA,SAAO,CAACA,KAAD,EAAQS,sBAAR,CAAP;AACD;;GA/CQjB,a;;AAiDT,eAAeA,aAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport Cookies from \"js-cookie\";\n\nfunction useLocalState<T>(key: string, defaultValue: T) {\n  const [value, setValue] = useState(() => {\n    if (process.browser) {\n      const storedValue = JSON.parse(localStorage.getItem(key));\n      if (!storedValue) {\n        return defaultValue;\n      }\n      return storedValue === null ? defaultValue : storedValue;\n    } else {\n      return defaultValue;\n    }\n  });\n\n  useEffect(() => {\n    const listener = (e) => {\n      if (e.storageArea === localStorage && e.key === key) {\n        setValue(JSON.parse(e.newValue));\n      }\n    };\n    window.addEventListener(\"storage\", listener);\n\n    return () => {\n      window.removeEventListener(\"storage\", listener);\n    };\n  }, [key]);\n\n  const setValueInLocalStorage = (newValue) => {\n\n    setValue((currentValue) => {\n      const result =\n        typeof newValue === \"function\" ? newValue(currentValue) : newValue;\n\n      localStorage.setItem(key, JSON.stringify(result));\n      return result;\n    });\n  };\n\n  useEffect(() => {\n    const storedValue = JSON.parse(localStorage.getItem(key));\n    if (storedValue) {\n      setValueInLocalStorage(storedValue);\n    } else {\n      setValueInLocalStorage(value);\n    }\n  }, []);\n\n  return [value, setValueInLocalStorage];\n}\n\nexport default useLocalState;\n"]},"metadata":{},"sourceType":"module"}