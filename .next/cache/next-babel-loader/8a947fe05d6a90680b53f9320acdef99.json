{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ishraqkabir/workspace/smartifier-frontend/Components/Post/SinglePost/CommentBox/CommentBox.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Avatar, Box, CircularProgress, makeStyles, Snackbar, withStyles } from \"@material-ui/core\";\nimport React, { useContext, useState } from \"react\";\nimport useLocalState from \"../../../../custom-hooks/useLocalState\";\nimport Image from \"next/image\";\nimport axios from \"axios\";\nimport { backend_url } from \"../../../../url\";\nimport { CommentsContext, CommentsCountContext } from \"../SinglePost\";\nimport useLoginAlert from \"../../../../custom-hooks/useLoginAlert\";\nvar MAX_CHARACTER_COUNT = 200;\n\nvar CommentBox = function CommentBox(_ref) {\n  _s();\n\n  var postId = _ref.postId;\n\n  var _useLocalState = useLocalState(\"user\", \"\"),\n      _useLocalState2 = _slicedToArray(_useLocalState, 1),\n      user = _useLocalState2[0];\n\n  var _useState = useState(\"\"),\n      comment = _useState[0],\n      setComment = _useState[1];\n\n  var _useState2 = useState(false),\n      isSending = _useState2[0],\n      setIsSending = _useState2[1];\n\n  var _useLoginAlert = useLoginAlert(),\n      showLoginAlert = _useLoginAlert.showLoginAlert,\n      handleClickWhenLoggedOut = _useLoginAlert.handleClickWhenLoggedOut;\n\n  var _useContext = useContext(CommentsCountContext),\n      setCommentsCount = _useContext.setCommentsCount;\n\n  var _useContext2 = useContext(CommentsContext),\n      setComments = _useContext2.setComments;\n\n  var classes = useStyles({\n    comment: comment\n  });\n\n  var handleSubmit = function handleSubmit() {\n    if (!(user === null || user === void 0 ? void 0 : user.token)) {\n      showAlert();\n      return;\n    }\n\n    if (comment.length > MAX_CHARACTER_COUNT) return;\n\n    if (comment.length == 0) {\n      showAlert();\n      return;\n    }\n\n    postComment();\n  };\n\n  var handleChange = function handleChange(e) {\n    setComment(e.target.value);\n  };\n\n  var handleEnter = function handleEnter(e) {\n    if (e.key === \"Enter\" && comment.length > 0) {\n      handleSubmit();\n    }\n  };\n\n  var postComment = function postComment() {\n    setIsSending(true);\n    axios.post(\"\".concat(backend_url, \"/api/post/comment/store\"), {\n      post_id: postId,\n      comment: comment\n    }, {\n      headers: {\n        Accept: \"application/json\",\n        Authorization: \"Bearer \".concat(user === null || user === void 0 ? void 0 : user.token)\n      }\n    }).then(function (response) {\n      setIsSending(false);\n      setCommentsCount(function (count) {\n        return count + 1;\n      });\n      setComments(function (comments) {\n        return [response.data].concat(_toConsumableArray(comments));\n      });\n      setComment(\"\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Avatar, {\n      src: user === null || user === void 0 ? void 0 : user.picture,\n      style: {\n        width: 35,\n        height: 35,\n        borderRadius: \"50%\",\n        marginRight: \"16px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(InputContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: user ? \"Tell us what you think about this post!\" : \"Login to post a comment!\",\n        value: comment,\n        onChange: handleChange,\n        onKeyDown: handleEnter,\n        style: {\n          width: \"100%\",\n          padding: \"12px\",\n          marginRight: \"16px\",\n          border: \"1px solid black\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.charactersCount,\n        children: \"\".concat(comment.length, \"/\").concat(MAX_CHARACTER_COUNT)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(ImageContainer, {\n      children: isSending ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 25,\n        color: \"inherit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, _this) : /*#__PURE__*/_jsxDEV(Image, {\n        src: \"/assets/send_icon.svg\",\n        width: 25,\n        height: 25,\n        onClick: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(LoginAlert, {\n      anchorOrigin: {\n        vertical: \"top\",\n        horizontal: \"center\"\n      },\n      open: showLoginAlert,\n      message: !(user === null || user === void 0 ? void 0 : user.token) ? \"Login To Post A Comment!\" : comment.length == 0 ? \"Comment Cannot Be Empty\" : \"Some Error Occurred\"\n    }, postId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(CommentBox, \"8jHqm/wwHpAyRahV90O6R/W83uQ=\", false, function () {\n  return [useLocalState, useLoginAlert, useStyles];\n});\n\n_c = CommentBox;\nexport default CommentBox;\nvar Container = withStyles({\n  root: {\n    width: \"100%\",\n    display: \"flex\",\n    marginTop: \"1.5rem\",\n    alignItems: \"center\"\n  }\n})(Box);\nvar ImageContainer = withStyles({\n  root: {\n    display: \"inline-flex\",\n    width: 35,\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    cursor: \"pointer\"\n  }\n})(Box);\nvar InputContainer = withStyles({\n  root: {\n    position: \"relative\",\n    display: \"flex\",\n    alignItems: \"center\",\n    width: \"100%\"\n  }\n})(Box);\nvar useStyles = makeStyles({\n  charactersCount: {\n    position: \"absolute\",\n    bottom: -22,\n    right: 20,\n    fontSize: \"0.8rem\",\n    fontWeight: 700,\n    color: function color(props) {\n      var comment = props.comment;\n\n      if (comment.length > MAX_CHARACTER_COUNT) {\n        return \"red\";\n      }\n\n      return \"grey\";\n    }\n  }\n});\nvar LoginAlert = withStyles({\n  root: {\n    zIndex: 20000\n  }\n})(Snackbar);\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentBox\");","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/Post/SinglePost/CommentBox/CommentBox.tsx"],"names":["Avatar","Box","CircularProgress","makeStyles","Snackbar","withStyles","React","useContext","useState","useLocalState","Image","axios","backend_url","CommentsContext","CommentsCountContext","useLoginAlert","MAX_CHARACTER_COUNT","CommentBox","postId","user","comment","setComment","isSending","setIsSending","showLoginAlert","handleClickWhenLoggedOut","setCommentsCount","setComments","classes","useStyles","handleSubmit","token","showAlert","length","postComment","handleChange","e","target","value","handleEnter","key","post","post_id","headers","Accept","Authorization","then","response","count","comments","data","picture","width","height","borderRadius","marginRight","padding","border","charactersCount","vertical","horizontal","Container","root","display","marginTop","alignItems","ImageContainer","justifyContent","cursor","InputContainer","position","bottom","right","fontSize","fontWeight","color","props","LoginAlert","zIndex"],"mappings":"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","sourcesContent":["import {\n  Avatar,\n  Box,\n  CircularProgress,\n  makeStyles,\n  Snackbar,\n  withStyles,\n} from \"@material-ui/core\";\nimport React, { useContext, useState } from \"react\";\nimport useLocalState from \"../../../../custom-hooks/useLocalState\";\n\nimport Image from \"next/image\";\nimport axios from \"axios\";\nimport { backend_url } from \"../../../../url\";\nimport { CommentsContext, CommentsCountContext } from \"../SinglePost\";\nimport useLoginAlert from \"../../../../custom-hooks/useLoginAlert\";\n\ninterface IProps {\n  postId: string;\n}\n\nconst MAX_CHARACTER_COUNT = 200;\n\nconst CommentBox: React.FC<IProps> = ({ postId }) => {\n  const [user] = useLocalState(\"user\", \"\");\n  const [comment, setComment] = useState<string>(\"\");\n  const [isSending, setIsSending] = useState<boolean>(false);\n  const { showLoginAlert, handleClickWhenLoggedOut } = useLoginAlert();\n\n  const { setCommentsCount } = useContext(CommentsCountContext);\n  const { setComments } = useContext(CommentsContext);\n\n  const classes = useStyles({ comment });\n\n  const handleSubmit = () => {\n    if (!user?.token) {\n      showAlert();\n      return;\n    }\n\n    if (comment.length > MAX_CHARACTER_COUNT) return;\n    if (comment.length == 0) {\n      showAlert();\n      return;\n    }\n\n    postComment();\n  };\n\n  const handleChange = (e: any) => {\n    setComment(e.target.value);\n  };\n\n  const handleEnter = (e: any) => {\n    if (e.key === \"Enter\" && comment.length > 0) {\n      handleSubmit();\n    }\n  };\n\n  const postComment = () => {\n    setIsSending(true);\n    axios\n      .post(\n        `${backend_url}/api/post/comment/store`,\n        {\n          post_id: postId,\n          comment: comment,\n        },\n        {\n          headers: {\n            Accept: \"application/json\",\n            Authorization: `Bearer ${user?.token}`,\n          },\n        }\n      )\n      .then((response) => {\n        setIsSending(false);\n        setCommentsCount((count: number) => count + 1);\n\n        setComments((comments) => {\n          return [response.data, ...comments];\n        });\n\n        setComment(\"\");\n      });\n  };\n\n  return (\n    <Container>\n      <Avatar\n        src={user?.picture}\n        style={{\n          width: 35,\n          height: 35,\n          borderRadius: \"50%\",\n          marginRight: \"16px\",\n        }}\n      />\n      <InputContainer>\n        <input\n          type=\"text\"\n          placeholder={\n            user\n              ? \"Tell us what you think about this post!\"\n              : \"Login to post a comment!\"\n          }\n          value={comment}\n          onChange={handleChange}\n          onKeyDown={handleEnter}\n          style={{\n            width: \"100%\",\n            padding: \"12px\",\n            marginRight: \"16px\",\n            border: \"1px solid black\",\n          }}\n        />\n        <div\n          className={classes.charactersCount}\n        >{`${comment.length}/${MAX_CHARACTER_COUNT}`}</div>\n      </InputContainer>\n      <ImageContainer>\n        {isSending ? (\n          <CircularProgress size={25} color=\"inherit\" />\n        ) : (\n          <Image\n            src={`/assets/send_icon.svg`}\n            width={25}\n            height={25}\n            onClick={handleSubmit}\n          />\n        )}\n      </ImageContainer>\n\n      <LoginAlert\n        key={postId}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n        open={showLoginAlert}\n        message={\n          !user?.token\n            ? \"Login To Post A Comment!\"\n            : comment.length == 0\n            ? \"Comment Cannot Be Empty\"\n            : \"Some Error Occurred\"\n        }\n      />\n    </Container>\n  );\n};\n\nexport default CommentBox;\n\nconst Container = withStyles({\n  root: {\n    width: \"100%\",\n    display: \"flex\",\n    marginTop: \"1.5rem\",\n    alignItems: \"center\",\n  },\n})(Box);\n\nconst ImageContainer = withStyles({\n  root: {\n    display: \"inline-flex\",\n    width: 35,\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    cursor: \"pointer\",\n  },\n})(Box);\n\nconst InputContainer = withStyles({\n  root: {\n    position: \"relative\",\n    display: \"flex\",\n    alignItems: \"center\",\n    width: \"100%\",\n  },\n})(Box);\n\nconst useStyles = makeStyles({\n  charactersCount: {\n    position: \"absolute\",\n    bottom: -22,\n    right: 20,\n    fontSize: \"0.8rem\",\n    fontWeight: 700,\n    color: (props: { comment: string }) => {\n      const { comment } = props;\n      if (comment.length > MAX_CHARACTER_COUNT) {\n        return \"red\";\n      }\n\n      return \"grey\";\n    },\n  },\n});\n\nconst LoginAlert = withStyles({\n  root: {\n    zIndex: 20000,\n  },\n})(Snackbar);\n"]},"metadata":{},"sourceType":"module"}