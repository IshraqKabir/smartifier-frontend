{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ishraqkabir/workspace/smartifier-frontend/Components/Question/OptionContainer/OptionContainer.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Box, withStyles } from \"@material-ui/core\";\nimport { cloneElement, useContext, useEffect, useState } from \"react\";\nimport { AnswersContext } from \"../../QuizTest/QuizTest\";\nimport getIsChecked from \"../../../UtilFunctions/getIsChecked\";\n\nvar OptionContainer = function OptionContainer(props) {\n  _s();\n\n  var _useContext = useContext(AnswersContext),\n      answers = _useContext.answers,\n      setAnswers = _useContext.setAnswers;\n\n  var _useState = useState(getIsChecked(props.option.id)),\n      isChecked = _useState[0],\n      setIsChecked = _useState[1];\n\n  useEffect(function () {\n    console.log(\"\".concat(props.option.title, \":\").concat(props.option.id, \" is \").concat(getIsChecked(props.option.id) ? \"checked\" : \"unchecked\"));\n    setIsChecked(getIsChecked(props.option.id));\n  }, [answers]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    onClick: function onClick() {\n      return setAnswers(props.option.id);\n    },\n    children: /*#__PURE__*/cloneElement(props.children, _objectSpread(_objectSpread({}, props), {}, {\n      isChecked: isChecked\n    }))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(OptionContainer, \"TPMFkf/EZWjb8TczA/E0L1+Et38=\");\n\n_c = OptionContainer;\nexport default OptionContainer;\nvar Container = withStyles({\n  root: {\n    margin: 0,\n    padding: 0,\n    height: \"100%\"\n  }\n})(Box);\n\nvar _c;\n\n$RefreshReg$(_c, \"OptionContainer\");","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/Question/OptionContainer/OptionContainer.tsx"],"names":["Box","withStyles","cloneElement","useContext","useEffect","useState","AnswersContext","getIsChecked","OptionContainer","props","answers","setAnswers","option","id","isChecked","setIsChecked","console","log","title","children","Container","root","margin","padding","height"],"mappings":";;;;;;;;;;;AAAA,SAASA,GAAT,EAAcC,UAAd,QAAgC,mBAAhC;AACA,SAASC,YAAT,EAAiCC,UAAjC,EAA6CC,SAA7C,EAAwDC,QAAxD,QAAwE,OAAxE;AACA,SAASC,cAAT,QAA+B,yBAA/B;AAEA,OAAOC,YAAP,MAAyB,qCAAzB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAAA;;AAAA,oBACDN,UAAU,CAACG,cAAD,CADT;AAAA,MACzBI,OADyB,eACzBA,OADyB;AAAA,MAChBC,UADgB,eAChBA,UADgB;;AAAA,kBAGCN,QAAQ,CACxCE,YAAY,CAACE,KAAK,CAACG,MAAN,CAAaC,EAAd,CAD4B,CAHT;AAAA,MAG1BC,SAH0B;AAAA,MAGfC,YAHe;;AAOjCX,EAAAA,SAAS,CAAC,YAAM;AACdY,IAAAA,OAAO,CAACC,GAAR,WACKR,KAAK,CAACG,MAAN,CAAaM,KADlB,cAC2BT,KAAK,CAACG,MAAN,CAAaC,EADxC,iBAEIN,YAAY,CAACE,KAAK,CAACG,MAAN,CAAaC,EAAd,CAAZ,GAAgC,SAAhC,GAA4C,WAFhD;AAKAE,IAAAA,YAAY,CAACR,YAAY,CAACE,KAAK,CAACG,MAAN,CAAaC,EAAd,CAAb,CAAZ;AACD,GAPQ,EAON,CAACH,OAAD,CAPM,CAAT;AASA,sBACE,QAAC,SAAD;AAAW,IAAA,OAAO,EAAE;AAAA,aAAMC,UAAU,CAACF,KAAK,CAACG,MAAN,CAAaC,EAAd,CAAhB;AAAA,KAApB;AAAA,2BACGX,YAAY,CAACO,KAAK,CAACU,QAAP,kCAAsBV,KAAtB;AAA6BK,MAAAA,SAAS,EAATA;AAA7B;AADf;AAAA;AAAA;AAAA;AAAA,WADF;AAKD,CArBD;;GAAMN,e;;KAAAA,e;AAuBN,eAAeA,eAAf;AAEA,IAAMY,SAAS,GAAGnB,UAAU,CAAC;AAC3BoB,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAE,CADJ;AAEJC,IAAAA,OAAO,EAAE,CAFL;AAGJC,IAAAA,MAAM,EAAE;AAHJ;AADqB,CAAD,CAAV,CAMfxB,GANe,CAAlB","sourcesContent":["import { Box, withStyles } from \"@material-ui/core\";\nimport { cloneElement, Fragment, useContext, useEffect, useState } from \"react\";\nimport { AnswersContext } from \"../../QuizTest/QuizTest\";\n\nimport getIsChecked from \"../../../UtilFunctions/getIsChecked\";\n\nconst OptionContainer = (props) => {\n  const { answers, setAnswers } = useContext(AnswersContext);\n\n  const [isChecked, setIsChecked] = useState<boolean>(\n    getIsChecked(props.option.id, )\n  );\n\n  useEffect(() => {\n    console.log(\n      `${props.option.title}:${props.option.id} is ${\n        getIsChecked(props.option.id) ? \"checked\" : \"unchecked\"\n      }`\n    );\n    setIsChecked(getIsChecked(props.option.id));\n  }, [answers]);\n\n  return (\n    <Container onClick={() => setAnswers(props.option.id)}>\n      {cloneElement(props.children, { ...props, isChecked })}\n    </Container>\n  );\n};\n\nexport default OptionContainer;\n\nconst Container = withStyles({\n  root: {\n    margin: 0,\n    padding: 0,\n    height: \"100%\",\n  },\n})(Box);\n"]},"metadata":{},"sourceType":"module"}