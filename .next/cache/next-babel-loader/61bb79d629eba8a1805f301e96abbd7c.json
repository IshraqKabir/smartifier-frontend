{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useEffect, useState } from \"react\";\nimport useLocalState from \"../../../custom-hooks/useLocalState\";\nimport submitTest from \"../../../repository/QuizTest/submitTest\";\nexport default function useTestState(quizId, questions, test, duration) {\n  _s();\n\n  var _useLocalState = useLocalState(\"user\", \"\"),\n      _useLocalState2 = _slicedToArray(_useLocalState, 1),\n      user = _useLocalState2[0];\n\n  var _useLocalState3 = useLocalState(\"\".concat(user === null || user === void 0 ? void 0 : user.email, \"-quiz\").concat(quizId, \"-answers\"), {}),\n      _useLocalState4 = _slicedToArray(_useLocalState3, 2),\n      answers = _useLocalState4[0],\n      setAnswersState = _useLocalState4[1];\n\n  var _useState = useState(0),\n      currentQuestionIndex = _useState[0],\n      setCurrentQuestionIndex = _useState[1];\n\n  var _useState2 = useState(getProgress()),\n      progress = _useState2[0],\n      setProgress = _useState2[1];\n\n  var _useState3 = useState(function () {\n    if (!test) return 600;\n    return getTimeRemainingInSeconds(test === null || test === void 0 ? void 0 : test.created_at, duration.toString());\n  }),\n      secondsRemaining = _useState3[0],\n      setSecondsRemaining = _useState3[1];\n\n  var _useState4 = useState(\"\"),\n      timeRemaining = _useState4[0],\n      setTimeRemaing = _useState4[1];\n\n  var _useState5 = useState(false),\n      showSubmitButton = _useState5[0],\n      setShowSubmitButton = _useState5[1];\n\n  var _useState6 = useState(false),\n      isSubmitting = _useState6[0],\n      setIsSubmitting = _useState6[1];\n\n  useEffect(function () {\n    setInterval(function () {\n      setSecondsRemaining(getTimeRemainingInSeconds(test === null || test === void 0 ? void 0 : test.created_at, duration));\n    }, 500);\n  }, []);\n  useEffect(function () {\n    if (secondsRemaining <= 0) {\n      handleSubmit();\n      setTimeRemaing(\"Test Finished\");\n    } else {\n      setTimeRemaing(parseSecondsToClock(secondsRemaining));\n    }\n  }, [secondsRemaining]);\n  useEffect(function () {\n    setProgress(getProgress());\n\n    if (currentQuestionIndex == (questions === null || questions === void 0 ? void 0 : questions.length) - 1) {\n      setShowSubmitButton(true);\n    } else {\n      setShowSubmitButton(false);\n    }\n  }, [currentQuestionIndex]);\n\n  var setAnswers = function setAnswers(optionID, question, text) {\n    setAnswersState(function (state) {\n      var tempAnswers = _objectSpread({}, state);\n\n      if (question.answer_type === \"multiple_choice\") {\n        var options = tempAnswers[\"\".concat(question === null || question === void 0 ? void 0 : question.id)];\n\n        if (options && options.includes(optionID)) {\n          tempAnswers = _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, \"\".concat(question === null || question === void 0 ? void 0 : question.id), []));\n        } else {\n          tempAnswers = _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, \"\".concat(question === null || question === void 0 ? void 0 : question.id), [optionID]));\n        }\n      } else if ((question === null || question === void 0 ? void 0 : question.answer_type) === \"checkboxes\") {\n        var _options = tempAnswers[\"\".concat(question === null || question === void 0 ? void 0 : question.id)];\n\n        if (_options && _options.includes(optionID)) {\n          tempAnswers = _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, \"\".concat(question === null || question === void 0 ? void 0 : question.id), _options.filter(function (option) {\n            return option != optionID;\n          })));\n        } else if (_options && !_options.includes(optionID)) {\n          tempAnswers = _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, \"\".concat(question === null || question === void 0 ? void 0 : question.id), [].concat(_toConsumableArray(_options), [optionID])));\n        } else {\n          tempAnswers = _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, \"\".concat(question === null || question === void 0 ? void 0 : question.id), [optionID]));\n        }\n      } else if ((question === null || question === void 0 ? void 0 : question.answer_type) === \"short_paragraph\") {\n        if (!text) return _objectSpread({}, tempAnswers);\n        tempAnswers = _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, \"\".concat(question === null || question === void 0 ? void 0 : question.id), text));\n      }\n\n      return _objectSpread({}, tempAnswers);\n    });\n  };\n\n  var goToNextQuestion = function goToNextQuestion() {\n    if (currentQuestionIndex >= (questions === null || questions === void 0 ? void 0 : questions.length) - 1) return;\n    setCurrentQuestionIndex(currentQuestionIndex + 1);\n  };\n\n  var goToPreviousQuestion = function goToPreviousQuestion() {\n    if (currentQuestionIndex <= 0) return;\n    setCurrentQuestionIndex(currentQuestionIndex - 1);\n  };\n\n  var showPrevious = currentQuestionIndex != 0;\n  var showNext = currentQuestionIndex < (questions === null || questions === void 0 ? void 0 : questions.length) - 1;\n\n  function getProgress() {\n    if ((questions === null || questions === void 0 ? void 0 : questions.length) == 0) return 100;\n    return (currentQuestionIndex + 1) * 100 / (questions === null || questions === void 0 ? void 0 : questions.length);\n  }\n\n  function handleSubmit() {\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  function _handleSubmit() {\n    _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setIsSubmitting(true);\n              setIsSub;\n              _context.next = 4;\n              return submitTest(test === null || test === void 0 ? void 0 : test.id, answers, user === null || user === void 0 ? void 0 : user.token);\n\n            case 4:\n              response = _context.sent;\n\n              if (!response.error) {\n                _context.next = 8;\n                break;\n              }\n\n              alert(\"Something went wrong. Please refresh and submit the test.\");\n              return _context.abrupt(\"return\");\n\n            case 8:\n              setAnswersState({});\n              window.location.href = \"/user/profile\";\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  return {\n    answers: answers,\n    setAnswers: setAnswers,\n    progress: progress,\n    currentQuestionIndex: currentQuestionIndex,\n    goToNextQuestion: goToNextQuestion,\n    goToPreviousQuestion: goToPreviousQuestion,\n    showPrevious: showPrevious,\n    showNext: showNext,\n    timeRemaining: timeRemaining,\n    secondsRemaining: secondsRemaining,\n    showSubmitButton: showSubmitButton,\n    isSubmitting: isSubmitting,\n    handleSubmit: handleSubmit\n  };\n}\n\n_s(useTestState, \"2thUIP9GDkQfCNLEbIgrsSY+EqA=\", false, function () {\n  return [useLocalState, useLocalState];\n});\n\nfunction getTimeRemainingInSeconds(start_time, duration) {\n  var totalDurationInSeconds = getSecondsFromDuration(duration);\n  var start = new Date(\"\".concat(start_time));\n  var now = new Date();\n  var end = new Date(\"\".concat(start_time));\n  end.setTime(start.getTime() + totalDurationInSeconds * 1000);\n  var secondsLeft = (end.getTime() - now.getTime()) / 1000;\n  return Math.floor(secondsLeft);\n}\n\nfunction getSecondsFromDuration(duration) {\n  var _duration$split = duration.split(\":\"),\n      _duration$split2 = _slicedToArray(_duration$split, 3),\n      hours = _duration$split2[0],\n      mins = _duration$split2[1],\n      seconds = _duration$split2[2];\n\n  var totalSeconds = 0;\n  totalSeconds += parseInt(hours) * 60 * 60;\n  totalSeconds += parseInt(mins) * 60;\n  totalSeconds += parseInt(seconds);\n  return totalSeconds;\n}\n\nfunction parseSecondsToClock(secondsRemaining) {\n  var mins = Math.floor(secondsRemaining / 60);\n  var seconds = Math.floor(secondsRemaining % 60);\n  return \"\".concat(mins < 10 ? \"0\".concat(mins) : mins, \":\").concat(seconds < 10 ? \"0\".concat(seconds) : seconds);\n}","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/QuizTest/Questions/useTestState.tsx"],"names":["useEffect","useState","useLocalState","submitTest","useTestState","quizId","questions","test","duration","user","email","answers","setAnswersState","currentQuestionIndex","setCurrentQuestionIndex","getProgress","progress","setProgress","getTimeRemainingInSeconds","created_at","toString","secondsRemaining","setSecondsRemaining","timeRemaining","setTimeRemaing","showSubmitButton","setShowSubmitButton","isSubmitting","setIsSubmitting","setInterval","handleSubmit","parseSecondsToClock","length","setAnswers","optionID","question","text","state","tempAnswers","answer_type","options","id","includes","filter","option","goToNextQuestion","goToPreviousQuestion","showPrevious","showNext","setIsSub","token","response","error","alert","window","location","href","start_time","totalDurationInSeconds","getSecondsFromDuration","start","Date","now","end","setTime","getTime","secondsLeft","Math","floor","split","hours","mins","seconds","totalSeconds","parseInt"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport useLocalState from \"../../../custom-hooks/useLocalState\";\nimport IQuestion from \"../../../Models/IQuestion\";\nimport submitTest from \"../../../repository/QuizTest/submitTest\";\n\nexport default function useTestState(\n  quizId: number,\n  questions: IQuestion[],\n  test: any,\n  duration: string\n) {\n  const [user] = useLocalState(\"user\", \"\");\n  const [answers, setAnswersState] = useLocalState(\n    `${user?.email}-quiz${quizId}-answers`,\n    {}\n  );\n\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState<number>(0);\n  const [progress, setProgress] = useState(getProgress());\n\n  const [secondsRemaining, setSecondsRemaining] = useState<number>(() => {\n    if (!test) return 600;\n\n    return getTimeRemainingInSeconds(test?.created_at, duration.toString());\n  });\n  const [timeRemaining, setTimeRemaing] = useState<string>(\"\");\n\n  const [showSubmitButton, setShowSubmitButton] = useState<boolean>(false);\n\n  const [isSubmitting, setIsSubmitting] = useState<boolean>(false);\n\n  useEffect(() => {\n    setInterval(() => {\n      setSecondsRemaining(\n        getTimeRemainingInSeconds(test?.created_at, duration)\n      );\n    }, 500);\n  }, []);\n\n  useEffect(() => {\n    if (secondsRemaining <= 0) {\n      handleSubmit();\n      setTimeRemaing(\"Test Finished\");\n    } else {\n      setTimeRemaing(parseSecondsToClock(secondsRemaining));\n    }\n  }, [secondsRemaining]);\n\n  useEffect(() => {\n    setProgress(getProgress());\n    if (currentQuestionIndex == questions?.length - 1) {\n      setShowSubmitButton(true);\n    } else {\n      setShowSubmitButton(false);\n    }\n  }, [currentQuestionIndex]);\n\n  const setAnswers = (optionID: number, question: IQuestion, text?: string) => {\n    setAnswersState((state: any) => {\n      let tempAnswers = { ...state };\n\n      if (question.answer_type === \"multiple_choice\") {\n        const options = tempAnswers[`${question?.id}`];\n\n        if (options && options.includes(optionID)) {\n          tempAnswers = { ...state, [`${question?.id}`]: [] };\n        } else {\n          tempAnswers = { ...state, [`${question?.id}`]: [optionID] };\n        }\n      } else if (question?.answer_type === \"checkboxes\") {\n        const options = tempAnswers[`${question?.id}`];\n\n        if (options && options.includes(optionID)) {\n          tempAnswers = {\n            ...state,\n            [`${question?.id}`]: options.filter(\n              (option: number) => option != optionID\n            ),\n          };\n        } else if (options && !options.includes(optionID)) {\n          tempAnswers = {\n            ...state,\n            [`${question?.id}`]: [...options, optionID],\n          };\n        } else {\n          tempAnswers = {\n            ...state,\n            [`${question?.id}`]: [optionID],\n          };\n        }\n      } else if (question?.answer_type === \"short_paragraph\") {\n        if (!text) return { ...tempAnswers };\n        tempAnswers = {\n          ...state,\n          [`${question?.id}`]: text,\n        };\n      }\n\n      return { ...tempAnswers };\n    });\n  };\n\n  const goToNextQuestion = () => {\n    if (currentQuestionIndex >= questions?.length - 1) return;\n    setCurrentQuestionIndex(currentQuestionIndex + 1);\n  };\n\n  const goToPreviousQuestion = () => {\n    if (currentQuestionIndex <= 0) return;\n    setCurrentQuestionIndex(currentQuestionIndex - 1);\n  };\n\n  const showPrevious: boolean = currentQuestionIndex != 0;\n  const showNext: boolean = currentQuestionIndex < questions?.length - 1;\n\n  function getProgress() {\n    if (questions?.length == 0) return 100;\n\n    return ((currentQuestionIndex + 1) * 100) / questions?.length;\n  }\n\n  async function handleSubmit() {\n    setIsSubmitting(true);\n    setIsSub\n    const response = await submitTest(test?.id, answers, user?.token);\n    if (response.error) {\n      alert(\"Something went wrong. Please refresh and submit the test.\");\n      return;\n    }\n\n    setAnswersState({});\n    window.location.href = \"/user/profile\";\n  }\n\n  return {\n    answers,\n    setAnswers,\n    progress,\n    currentQuestionIndex,\n    goToNextQuestion,\n    goToPreviousQuestion,\n    showPrevious,\n    showNext,\n    timeRemaining,\n    secondsRemaining,\n    showSubmitButton,\n    isSubmitting,\n    handleSubmit,\n  };\n}\n\nfunction getTimeRemainingInSeconds(\n  start_time: string,\n  duration: string\n): number {\n  const totalDurationInSeconds: number = getSecondsFromDuration(duration);\n\n  const start = new Date(`${start_time}`);\n  const now = new Date();\n  const end = new Date(`${start_time}`);\n  end.setTime(start.getTime() + totalDurationInSeconds * 1000);\n\n  const secondsLeft: number = (end.getTime() - now.getTime()) / 1000;\n\n  return Math.floor(secondsLeft);\n}\n\nfunction getSecondsFromDuration(duration: string): number {\n  const [hours, mins, seconds] = duration.split(\":\");\n\n  let totalSeconds: number = 0;\n  totalSeconds += parseInt(hours) * 60 * 60;\n  totalSeconds += parseInt(mins) * 60;\n  totalSeconds += parseInt(seconds);\n\n  return totalSeconds;\n}\n\nfunction parseSecondsToClock(secondsRemaining: number): string {\n  const mins = Math.floor(secondsRemaining / 60);\n  const seconds = Math.floor(secondsRemaining % 60);\n\n  return `${mins < 10 ? `0${mins}` : mins}:${\n    seconds < 10 ? `0${seconds}` : seconds\n  }`;\n}\n"]},"metadata":{},"sourceType":"module"}