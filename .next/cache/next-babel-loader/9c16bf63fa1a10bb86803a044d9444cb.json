{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Box, Typography, withStyles } from \"@material-ui/core\";\nexport default function TestInfo(_ref) {\n  var test = _ref.test,\n      quiz = _ref.quiz;\n  var assessmentOrQuiz = (quiz === null || quiz === void 0 ? void 0 : quiz.is_assessment) ? \"assessment\" : \"quiz\"; // const passedText = `Congratulations! You have passed the quiz on\n  // ‘______________’. Do remember to share your badge on social\n  // media for personal branding.`;\n\n  var passedText = \"Congratulations! You have passed the \".concat(assessmentOrQuiz, \" on\\n  \\u2018\").concat(quiz === null || quiz === void 0 ? void 0 : quiz.title, \"\\u2019.\");\n  var failedText = \"Thank you for participating in the quiz on\\n  \\u2018\".concat(quiz === null || quiz === void 0 ? void 0 : quiz.title, \"\\u2019! Please retake the quiz and try to get your\\n  badge by scoring more than \").concat(quiz === null || quiz === void 0 ? void 0 : quiz.passing_percentage, \"% marks.\");\n\n  var handleClick = function handleClick() {\n    window.location.href = \"/test/quiz/\".concat(quiz === null || quiz === void 0 ? void 0 : quiz.id);\n  };\n\n  return /*#__PURE__*/_jsxs(Container, {\n    children: [/*#__PURE__*/_jsx(Title, {\n      variant: \"h5\",\n      children: \"\".concat(quiz === null || quiz === void 0 ? void 0 : quiz.title, \" \").concat(assessmentOrQuiz)\n    }), /*#__PURE__*/_jsx(Divider, {}), /*#__PURE__*/_jsxs(ScoreContainer, {\n      children: [/*#__PURE__*/_jsxs(Typography, {\n        variant: \"subtitle1\",\n        children: [\"Score: \", /*#__PURE__*/_jsx(\"b\", {\n          children: \"\".concat(test === null || test === void 0 ? void 0 : test.percentage, \"%\")\n        })]\n      }), /*#__PURE__*/_jsxs(Typography, {\n        variant: \"subtitle1\",\n        children: [\"Total Questions: \", /*#__PURE__*/_jsx(\"b\", {\n          children: \"\".concat(quiz === null || quiz === void 0 ? void 0 : quiz.total_questions_count)\n        })]\n      }), /*#__PURE__*/_jsxs(Typography, {\n        variant: \"subtitle1\",\n        children: [\"Right Answers: \", /*#__PURE__*/_jsx(\"b\", {\n          children: \"\".concat(test === null || test === void 0 ? void 0 : test.correct_answers_count)\n        })]\n      })]\n    }), /*#__PURE__*/_jsx(HasPassedText, {\n      variant: \"subtitle1\",\n      children: (test === null || test === void 0 ? void 0 : test.has_passed) ? passedText : failedText\n    }), /*#__PURE__*/_jsx(RetakeButton, {\n      onClick: handleClick,\n      children: /*#__PURE__*/_jsx(RetakeButtonText, {\n        children: \"Retake\"\n      })\n    })]\n  });\n}\nvar Container = withStyles({\n  root: {\n    width: \"100%\",\n    border: \"1px solid #e6e6e4\",\n    borderRadius: \"7px 7px 0px 0px\",\n    backgroundColor: \"white\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  }\n})(Box);\nvar Title = withStyles({\n  root: {\n    padding: \"0.7rem\",\n    textTransform: \"capitalize\"\n  }\n})(Typography);\nvar Divider = withStyles({\n  root: {\n    width: \"100%\",\n    height: 2,\n    backgroundColor: \"#e6e6e4\"\n  }\n})(Box);\nvar HasPassedText = withStyles({\n  root: {\n    fontWeight: 500,\n    margin: \"1rem 0\",\n    textAlign: \"center\"\n  }\n})(Typography);\nvar ScoreContainer = withStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    margin: \"1rem 0\",\n    padding: \"1rem\",\n    border: \"1px solid lightgray\",\n    borderRadius: 7,\n    width: \"min(600px, 97%)\"\n  }\n})(Box);\nvar RetakeButton = withStyles({\n  root: {\n    \"float\": \"right\",\n    margin: \"0rem 0.5rem 0.5rem auto\",\n    right: 10,\n    color: \"white\",\n    backgroundColor: \"#0e62cb\",\n    padding: \"0.4rem 1rem\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      backgroundColor: \"#09448e\"\n    }\n  }\n})(Box);\nvar RetakeButtonText = withStyles({\n  root: {\n    fontWeight: 600,\n    textTransform: \"capitalize\"\n  }\n})(Typography);","map":null,"metadata":{},"sourceType":"module"}