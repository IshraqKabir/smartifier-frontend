{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ishraqkabir/workspace/smartifier-frontend/Components/Post/SinglePost/CommentsSection/Comment/CommentReact/Likes/Likes.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Avatar, Box, Snackbar, withStyles } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport useLocalState from \"../../../../../../../custom-hooks/useLocalState\";\nimport { backend_url } from \"../../../../../../../url\";\nimport { CommentContext } from \"../../Comment\";\n\nvar Likes = function Likes() {\n  _s();\n\n  var _useContext = useContext(CommentContext),\n      comment = _useContext.comment;\n\n  var _useLocalState = useLocalState(\"user\", \"\"),\n      _useLocalState2 = _slicedToArray(_useLocalState, 1),\n      user = _useLocalState2[0];\n\n  var _useState = useState(false),\n      showLoginAlert = _useState[0],\n      setShowLoginAlert = _useState[1];\n\n  var _useState2 = useState(false),\n      isLikedByUser = _useState2[0],\n      setIsLikedByUser = _useState2[1];\n\n  var _useState3 = useState(comment.likes_count ? comment.likes_count : 0),\n      likesCount = _useState3[0],\n      setLikesCount = _useState3[1];\n\n  var handleClick = function handleClick() {\n    if (!user.token) {\n      setShowLoginAlert(true);\n      setTimeout(function () {\n        setShowLoginAlert(false);\n      }, 3000);\n      return;\n    }\n\n    if (isLikedByUser) {\n      unLikeComment();\n    } else {\n      likeComment();\n    }\n  };\n\n  useEffect(function () {// getHasUserLikedThePost();\n  }, []);\n  useEffect(function () {// getHasUserLikedThePost();\n    // if (!user.token) setIsLikedByUser(false);\n  }, [user]);\n\n  var getHasUserLikedThePost = function getHasUserLikedThePost() {// if (user.token) {\n    //   axios\n    //     .get(`${backend_url}/api/posts/${post?.slug}/is-liked-by-user`, {\n    //       headers: {\n    //         Accept: \"application/json\",\n    //         Authorization: `Bearer ${user.token}`,\n    //       },\n    //     })\n    //     .then((response) => {\n    //       setIsLikedByUser(response.data.is_liked_by_user);\n    //     });\n    // }\n  };\n\n  var likeComment = function likeComment() {\n    if (user.token) {\n      axios.post(\"\".concat(backend_url, \"/api/post/like\"), {\n        comment_id: comment === null || comment === void 0 ? void 0 : comment.id\n      }, {\n        headers: {\n          Accept: \"application/json\",\n          Authorization: \"Bearer \".concat(user.token)\n        }\n      }).then(function (response) {\n        setIsLikedByUser(true);\n        setLikesCount(function (count) {\n          return count + 1;\n        });\n      });\n    }\n  };\n\n  var unLikeComment = function unLikeComment() {\n    if (user.token) {\n      axios.post(\"\".concat(backend_url, \"/api/comment/unlike\"), {\n        comment_id: comment === null || comment === void 0 ? void 0 : comment.id\n      }, {\n        headers: {\n          Accept: \"application/json\",\n          Authorization: \"Bearer \".concat(user.token)\n        }\n      }).then(function (response) {\n        setIsLikedByUser(false);\n        setLikesCount(function (count) {\n          return count - 1;\n        });\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Button, {\n    onClick: handleClick,\n    children: [/*#__PURE__*/_jsxDEV(Avatar, {\n      src: \"https://img.icons8.com/pastel-glyph/34/000000/facebook-like--v1.png\",\n      style: {\n        width: \"23px\",\n        height: \"23px\",\n        marginRight: \"16px\",\n        alignSelf: \"center\",\n        backgroundColor: isLikedByUser ? \"#2d95b5\" : \"lightgrey\",\n        borderRadius: \"50%\",\n        padding: \"5px\",\n        cursor: \"pointer\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Number, {\n        children: likesCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Like\", likesCount > 1 ? \"s\" : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(LoginAlert // key={post.id}\n    , {\n      anchorOrigin: {\n        vertical: \"top\",\n        horizontal: \"center\"\n      },\n      open: showLoginAlert,\n      message: \"Please Login To Like The Post.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Likes, \"zdf3dAqEx5G6Q/SFcCSH7c5323M=\", false, function () {\n  return [useLocalState];\n});\n\n_c = Likes;\nexport default Likes;\nvar Button = withStyles({\n  root: {\n    maxWidth: \"240px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    marginRight: \"4rem\",\n    cursor: \"pointer\",\n    margin: \"1rem 0rem 0.3rem 0rem\"\n  }\n})(Box);\nvar Number = withStyles({\n  root: {\n    display: \"inline-block\",\n    marginRight: 8\n  }\n})(Box);\nvar LoginAlert = withStyles({\n  root: {\n    zIndex: 20000\n  }\n})(Snackbar);\n\nvar _c;\n\n$RefreshReg$(_c, \"Likes\");","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/Post/SinglePost/CommentsSection/Comment/CommentReact/Likes/Likes.tsx"],"names":["Avatar","Box","Snackbar","withStyles","axios","React","useContext","useEffect","useState","useLocalState","backend_url","CommentContext","Likes","comment","user","showLoginAlert","setShowLoginAlert","isLikedByUser","setIsLikedByUser","likes_count","likesCount","setLikesCount","handleClick","token","setTimeout","unLikeComment","likeComment","getHasUserLikedThePost","post","comment_id","id","headers","Accept","Authorization","then","response","count","width","height","marginRight","alignSelf","backgroundColor","borderRadius","padding","cursor","vertical","horizontal","Button","root","maxWidth","display","alignItems","margin","Number","LoginAlert","zIndex"],"mappings":"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","sourcesContent":["import { Avatar, Box, Snackbar, withStyles } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport useLocalState from \"../../../../../../../custom-hooks/useLocalState\";\nimport { backend_url } from \"../../../../../../../url\";\n\nimport { CommentContext } from \"../../Comment\";\n\ninterface IProps {}\n\nconst Likes: React.FC<IProps> = () => {\n  const { comment } = useContext(CommentContext);\n\n  const [user] = useLocalState(\"user\", \"\");\n  const [showLoginAlert, setShowLoginAlert] = useState<boolean>(false);\n  const [isLikedByUser, setIsLikedByUser] = useState<boolean>(false);\n  const [likesCount, setLikesCount] = useState<number>(\n    comment.likes_count ? comment.likes_count : 0\n  );\n\n  const handleClick = () => {\n    if (!user.token) {\n      setShowLoginAlert(true);\n      setTimeout(() => {\n        setShowLoginAlert(false);\n      }, 3000);\n      return;\n    }\n\n    if (isLikedByUser) {\n      unLikeComment();\n    } else {\n      likeComment();\n    }\n  };\n\n  useEffect(() => {\n    // getHasUserLikedThePost();\n  }, []);\n\n  useEffect(() => {\n    // getHasUserLikedThePost();\n    // if (!user.token) setIsLikedByUser(false);\n  }, [user]);\n\n  const getHasUserLikedThePost = () => {\n    // if (user.token) {\n    //   axios\n    //     .get(`${backend_url}/api/posts/${post?.slug}/is-liked-by-user`, {\n    //       headers: {\n    //         Accept: \"application/json\",\n    //         Authorization: `Bearer ${user.token}`,\n    //       },\n    //     })\n    //     .then((response) => {\n    //       setIsLikedByUser(response.data.is_liked_by_user);\n    //     });\n    // }\n  };\n\n  const likeComment = () => {\n    if (user.token) {\n      axios\n        .post(\n          `${backend_url}/api/post/like`,\n          {\n            comment_id: comment?.id,\n          },\n          {\n            headers: {\n              Accept: \"application/json\",\n              Authorization: `Bearer ${user.token}`,\n            },\n          }\n        )\n        .then((response) => {\n          setIsLikedByUser(true);\n          setLikesCount((count) => count + 1);\n        });\n    }\n  };\n\n  const unLikeComment = () => {\n    if (user.token) {\n      axios\n        .post(\n          `${backend_url}/api/comment/unlike`,\n          {\n            comment_id: comment?.id,\n          },\n          {\n            headers: {\n              Accept: \"application/json\",\n              Authorization: `Bearer ${user.token}`,\n            },\n          }\n        )\n        .then((response) => {\n          setIsLikedByUser(false);\n          setLikesCount((count) => count - 1);\n        });\n    }\n  };\n\n  return (\n    <Button onClick={handleClick}>\n      <Avatar\n        src={`https://img.icons8.com/pastel-glyph/34/000000/facebook-like--v1.png`}\n        style={{\n          width: \"23px\",\n          height: \"23px\",\n          marginRight: \"16px\",\n          alignSelf: \"center\",\n          backgroundColor: isLikedByUser ? \"#2d95b5\" : \"lightgrey\",\n          borderRadius: \"50%\",\n          padding: \"5px\",\n          cursor: \"pointer\",\n        }}\n      />\n\n      <>\n        <Number>{likesCount}</Number>\n        <p>Like{likesCount > 1 ? \"s\" : \"\"}</p>\n      </>\n      <LoginAlert\n        // key={post.id}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n        open={showLoginAlert}\n        message=\"Please Login To Like The Post.\"\n      />\n    </Button>\n  );\n};\n\nexport default Likes;\n\nconst Button = withStyles({\n  root: {\n    maxWidth: \"240px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    marginRight: \"4rem\",\n    cursor: \"pointer\",\n    margin: \"1rem 0rem 0.3rem 0rem\",\n  },\n})(Box);\n\nconst Number = withStyles({\n  root: {\n    display: \"inline-block\",\n    marginRight: 8,\n  },\n})(Box);\n\nconst LoginAlert = withStyles({\n  root: {\n    zIndex: 20000,\n  },\n})(Snackbar);\n"]},"metadata":{},"sourceType":"module"}