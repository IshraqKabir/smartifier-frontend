{"ast":null,"code":"import _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ishraqkabir/workspace/smartifier-frontend/Components/QuizTest/Questions/SingleQuestion/Question/Options/TextAnswer/TextAnswer.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, TextField, withStyles } from \"@material-ui/core\";\nimport React, { useContext } from \"react\";\nimport { QuestionContext } from \"../../../../../../Questions/Questions\";\nimport { QuizTestStateContext } from \"../../../../Questions\";\nimport useTextAnswer from \"./useTextAnswer\";\nexport default function TextAnswer(_ref) {\n  _s();\n\n  _objectDestructuringEmpty(_ref);\n\n  var _useContext = useContext(QuizTestStateContext),\n      answers = _useContext.answers,\n      setAnswers = _useContext.setAnswers;\n\n  var _useContext2 = useContext(QuestionContext),\n      question = _useContext2.question;\n\n  var _useTextAnswer = useTextAnswer(question, answers, setAnswers),\n      text = _useTextAnswer.text,\n      handleChange = _useTextAnswer.handleChange;\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(TextField, {\n      id: \"\".concat(question === null || question === void 0 ? void 0 : question.id, \"-value\"),\n      label: \"\".concat(question === null || question === void 0 ? void 0 : question.id, \"-value\"),\n      variant: \"outlined\",\n      value: text,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TextAnswer, \"xjNRj7D/a0qqLl06sdzxWFzrN5M=\", false, function () {\n  return [useTextAnswer];\n});\n\n_c = TextAnswer;\nvar Container = withStyles({\n  root: {\n    width: \"100%\"\n  }\n})(Box);\n\nvar _c;\n\n$RefreshReg$(_c, \"TextAnswer\");","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/QuizTest/Questions/SingleQuestion/Question/Options/TextAnswer/TextAnswer.tsx"],"names":["Box","TextField","withStyles","React","useContext","QuestionContext","QuizTestStateContext","useTextAnswer","TextAnswer","answers","setAnswers","question","text","handleChange","id","Container","root","width"],"mappings":";;;;;;AAAA,SAASA,GAAT,EAAcC,SAAd,EAAyBC,UAAzB,QAA2C,mBAA3C;AACA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,eAAT,QAAgC,uCAAhC;AACA,SAASC,oBAAT,QAAqC,uBAArC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAIA,eAAe,SAASC,UAAT,OAAgC;AAAA;;AAAA;;AAAA,oBACbJ,UAAU,CAACE,oBAAD,CADG;AAAA,MACrCG,OADqC,eACrCA,OADqC;AAAA,MAC5BC,UAD4B,eAC5BA,UAD4B;;AAAA,qBAExBN,UAAU,CAACC,eAAD,CAFc;AAAA,MAErCM,QAFqC,gBAErCA,QAFqC;;AAAA,uBAIdJ,aAAa,CAACI,QAAD,EAAWF,OAAX,EAAoBC,UAApB,CAJC;AAAA,MAIrCE,IAJqC,kBAIrCA,IAJqC;AAAA,MAI/BC,YAJ+B,kBAI/BA,YAJ+B;;AAM7C,sBACE,QAAC,SAAD;AAAA,2BACE,QAAC,SAAD;AACE,MAAA,EAAE,YAAKF,QAAL,aAAKA,QAAL,uBAAKA,QAAQ,CAAEG,EAAf,WADJ;AAEE,MAAA,KAAK,YAAKH,QAAL,aAAKA,QAAL,uBAAKA,QAAQ,CAAEG,EAAf,WAFP;AAGE,MAAA,OAAO,EAAC,UAHV;AAIE,MAAA,KAAK,EAAEF,IAJT;AAKE,MAAA,QAAQ,EAAEC;AALZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAjBuBL,U;UAISD,a;;;KAJTC,U;AAmBxB,IAAMO,SAAS,GAAGb,UAAU,CAAC;AAC3Bc,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE;AADH;AADqB,CAAD,CAAV,CAIfjB,GAJe,CAAlB","sourcesContent":["import { Box, TextField, withStyles } from \"@material-ui/core\";\nimport React, { useContext } from \"react\";\nimport { QuestionContext } from \"../../../../../../Questions/Questions\";\nimport { QuizTestStateContext } from \"../../../../Questions\";\nimport useTextAnswer from \"./useTextAnswer\";\n\ninterface IProps {}\n\nexport default function TextAnswer({}: IProps) {\n  const { answers, setAnswers } = useContext(QuizTestStateContext);\n  const { question } = useContext(QuestionContext);\n\n  const { text, handleChange } = useTextAnswer(question, answers, setAnswers);\n\n  return (\n    <Container>\n      <TextField\n        id={`${question?.id}-value`}\n        label={`${question?.id}-value`}\n        variant=\"outlined\"\n        value={text}\n        onChange={handleChange}\n      />\n    </Container>\n  );\n}\n\nconst Container = withStyles({\n  root: {\n    width: \"100%\",\n  },\n})(Box);\n"]},"metadata":{},"sourceType":"module"}