{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ishraqkabir/workspace/smartifier-frontend/Components/Post/SinglePost/CommentsSection/Comment/CommentReact/Likes/Likes.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Avatar, Box, Snackbar, withStyles } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport React, { useContext, useState } from \"react\";\nimport useLocalState from \"../../../../../../../custom-hooks/useLocalState\";\nimport { backend_url } from \"../../../../../../../url\";\nimport { CommentsContext } from \"../../../../SinglePost\";\nimport { CommentContext } from \"../../Comment\";\n\nvar Likes = function Likes() {\n  _s();\n\n  var _useContext = useContext(CommentContext),\n      comment = _useContext.comment;\n\n  var _useLocalState = useLocalState(\"user\", \"\"),\n      _useLocalState2 = _slicedToArray(_useLocalState, 1),\n      user = _useLocalState2[0];\n\n  var _useState = useState(false),\n      showLoginAlert = _useState[0],\n      setShowLoginAlert = _useState[1];\n\n  var _useState2 = useState(comment.likes_count ? comment.likes_count : 0),\n      likesCount = _useState2[0],\n      setLikesCount = _useState2[1];\n\n  var _useContext2 = useContext(CommentsContext),\n      likedCommentsIdsByUser = _useContext2.likedCommentsIdsByUser,\n      setLikedCommentsIdsByUser = _useContext2.setLikedCommentsIdsByUser;\n\n  var handleClick = function handleClick() {\n    if (!user.token) {\n      setShowLoginAlert(true);\n      setTimeout(function () {\n        setShowLoginAlert(false);\n      }, 3000);\n      return;\n    }\n\n    if (likedCommentsIdsByUser == \"empty\") {\n      unLikeComment();\n      return;\n    }\n\n    if (likedCommentsIdsByUser.includes(comment.id)) {\n      unLikeComment();\n    } else {\n      likeComment();\n    }\n  };\n\n  var likeComment = function likeComment() {\n    if (user.token) {\n      axios.post(\"\".concat(backend_url, \"/api/comment/like\"), {\n        comment_id: comment === null || comment === void 0 ? void 0 : comment.id\n      }, {\n        headers: {\n          Accept: \"application/json\",\n          Authorization: \"Bearer \".concat(user.token)\n        }\n      }).then(function (response) {\n        setLikedCommentsIdsByUser(function (ids) {\n          return [comment.id].concat(_toConsumableArray(ids));\n        });\n        setLikesCount(function (count) {\n          return count + 1;\n        });\n      });\n    }\n  };\n\n  var unLikeComment = function unLikeComment() {\n    if (user.token) {\n      axios.post(\"\".concat(backend_url, \"/api/comment/unlike\"), {\n        comment_id: comment === null || comment === void 0 ? void 0 : comment.id\n      }, {\n        headers: {\n          Accept: \"application/json\",\n          Authorization: \"Bearer \".concat(user.token)\n        }\n      }).then(function (response) {\n        setLikedCommentsIdsByUser(function (ids) {\n          return ids.filter(function (id) {\n            return id != comment.id;\n          });\n        });\n        setLikesCount(function (count) {\n          return count - 1;\n        });\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Button, {\n    onClick: handleClick,\n    children: [/*#__PURE__*/_jsxDEV(Avatar, {\n      src: \"https://img.icons8.com/pastel-glyph/34/000000/facebook-like--v1.png\",\n      style: {\n        width: \"23px\",\n        height: \"23px\",\n        marginRight: \"16px\",\n        alignSelf: \"center\",\n        backgroundColor: likedCommentsIdsByUser == \"empty\" ? \"lightgrey\" : likedCommentsIdsByUser.includes(comment.id) ? \"#2d95b5\" : \"lightgrey\",\n        borderRadius: \"50%\",\n        padding: \"5px\",\n        cursor: \"pointer\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Number, {\n      children: likesCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Like\", likesCount > 1 ? \"s\" : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(LoginAlert // key={post.id}\n    , {\n      anchorOrigin: {\n        vertical: \"top\",\n        horizontal: \"center\"\n      },\n      open: showLoginAlert,\n      message: \"Please Login To Like The Post.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Likes, \"7gHJr8Ws4SNST6lMBtr6aZP2eRk=\", false, function () {\n  return [useLocalState];\n});\n\n_c = Likes;\nexport default Likes;\nvar Button = withStyles({\n  root: {\n    maxWidth: \"240px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    marginRight: \"4rem\",\n    cursor: \"pointer\",\n    margin: \"1rem 0rem 0.3rem 0rem\"\n  }\n})(Box);\nvar Number = withStyles({\n  root: {\n    display: \"inline-block\",\n    marginRight: 8\n  }\n})(Box);\nvar LoginAlert = withStyles({\n  root: {\n    zIndex: 20000\n  }\n})(Snackbar);\n\nvar _c;\n\n$RefreshReg$(_c, \"Likes\");","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/Post/SinglePost/CommentsSection/Comment/CommentReact/Likes/Likes.tsx"],"names":["Avatar","Box","Snackbar","withStyles","axios","React","useContext","useState","useLocalState","backend_url","CommentsContext","CommentContext","Likes","comment","user","showLoginAlert","setShowLoginAlert","likes_count","likesCount","setLikesCount","likedCommentsIdsByUser","setLikedCommentsIdsByUser","handleClick","token","setTimeout","unLikeComment","includes","id","likeComment","post","comment_id","headers","Accept","Authorization","then","response","ids","count","filter","width","height","marginRight","alignSelf","backgroundColor","borderRadius","padding","cursor","vertical","horizontal","Button","root","maxWidth","display","alignItems","margin","Number","LoginAlert","zIndex"],"mappings":"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","sourcesContent":["import { Avatar, Box, Snackbar, withStyles } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport useLocalState from \"../../../../../../../custom-hooks/useLocalState\";\nimport { backend_url } from \"../../../../../../../url\";\nimport { CommentsContext } from \"../../../../SinglePost\";\n\nimport { CommentContext } from \"../../Comment\";\nimport CommentReact from \"../CommentReact\";\n\ninterface IProps {}\n\nconst Likes: React.FC<IProps> = () => {\n  const { comment } = useContext(CommentContext);\n\n  const [user] = useLocalState(\"user\", \"\");\n  const [showLoginAlert, setShowLoginAlert] = useState<boolean>(false);\n  const [likesCount, setLikesCount] = useState<number>(\n    comment.likes_count ? comment.likes_count : 0\n  );\n\n  const { likedCommentsIdsByUser, setLikedCommentsIdsByUser } = useContext(\n    CommentsContext\n  );\n\n  const handleClick = () => {\n    if (!user.token) {\n      setShowLoginAlert(true);\n      setTimeout(() => {\n        setShowLoginAlert(false);\n      }, 3000);\n      return;\n    }\n\n    if (likedCommentsIdsByUser == \"empty\") {\n      unLikeComment();\n      return;\n    }\n\n    if (likedCommentsIdsByUser.includes(comment.id)) {\n      unLikeComment();\n    } else {\n      likeComment();\n    }\n  };\n\n  const likeComment = () => {\n    if (user.token) {\n      axios\n        .post(\n          `${backend_url}/api/comment/like`,\n          {\n            comment_id: comment?.id,\n          },\n          {\n            headers: {\n              Accept: \"application/json\",\n              Authorization: `Bearer ${user.token}`,\n            },\n          }\n        )\n        .then((response) => {\n          setLikedCommentsIdsByUser((ids) => {\n            return [comment.id, ...ids];\n          });\n          setLikesCount((count) => count + 1);\n        });\n    }\n  };\n\n  const unLikeComment = () => {\n    if (user.token) {\n      axios\n        .post(\n          `${backend_url}/api/comment/unlike`,\n          {\n            comment_id: comment?.id,\n          },\n          {\n            headers: {\n              Accept: \"application/json\",\n              Authorization: `Bearer ${user.token}`,\n            },\n          }\n        )\n        .then((response) => {\n          setLikedCommentsIdsByUser((ids) =>\n            ids.filter((id) => id != comment.id)\n          );\n          setLikesCount((count) => count - 1);\n        });\n    }\n  };\n\n  return (\n    <Button onClick={handleClick}>\n      <Avatar\n        src={`https://img.icons8.com/pastel-glyph/34/000000/facebook-like--v1.png`}\n        style={{\n          width: \"23px\",\n          height: \"23px\",\n          marginRight: \"16px\",\n          alignSelf: \"center\",\n          backgroundColor:\n            likedCommentsIdsByUser == \"empty\"\n              ? \"lightgrey\"\n              : likedCommentsIdsByUser.includes(comment.id)\n              ? \"#2d95b5\"\n              : \"lightgrey\",\n          borderRadius: \"50%\",\n          padding: \"5px\",\n          cursor: \"pointer\",\n        }}\n      />\n\n      <Number>{likesCount}</Number>\n      <p>Like{likesCount > 1 ? \"s\" : \"\"}</p>\n      <LoginAlert\n        // key={post.id}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n        open={showLoginAlert}\n        message=\"Please Login To Like The Post.\"\n      />\n    </Button>\n  );\n};\n\nexport default Likes;\n\nconst Button = withStyles({\n  root: {\n    maxWidth: \"240px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    marginRight: \"4rem\",\n    cursor: \"pointer\",\n    margin: \"1rem 0rem 0.3rem 0rem\",\n  },\n})(Box);\n\nconst Number = withStyles({\n  root: {\n    display: \"inline-block\",\n    marginRight: 8,\n  },\n})(Box);\n\nconst LoginAlert = withStyles({\n  root: {\n    zIndex: 20000,\n  },\n})(Snackbar);\n"]},"metadata":{},"sourceType":"module"}