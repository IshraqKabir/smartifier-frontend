{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ishraqkabir/workspace/smartifier-frontend/Components/QuizTest/Questions/SingleQuestion/SingleQuestion.tsx\";\nimport { Box, Slide, withStyles } from \"@material-ui/core\";\nimport { createContext, useContext } from \"react\";\nimport { QuizTestStateContext } from \"../Questions\";\nimport Question from \"./Question/Question\";\nimport useSingleQuestion from \"./useSingleQuestion\";\nexport const QuestionContext = /*#__PURE__*/createContext(null);\nexport default function SingleQuestion({\n  question,\n  index\n}) {\n  const {\n    currentQuestionIndex\n  } = useContext(QuizTestStateContext);\n  const {\n    isVisible,\n    direction\n  } = useSingleQuestion(index, currentQuestionIndex);\n  return /*#__PURE__*/_jsxDEV(Slide, {\n    in: isVisible,\n    direction: !isVisible ? \"down\" : direction,\n    timeout: {\n      enter: 1000,\n      exit: 100\n    },\n    mountOnEnter: true,\n    unmountOnExit: true,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(QuestionContext.Provider, {\n        value: {\n          question\n        },\n        children: /*#__PURE__*/_jsxDEV(Question, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\nconst Container = withStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: \"0.5rem 0rem\"\n  }\n})(Box);","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/QuizTest/Questions/SingleQuestion/SingleQuestion.tsx"],"names":["Box","Slide","withStyles","createContext","useContext","QuizTestStateContext","Question","useSingleQuestion","QuestionContext","SingleQuestion","question","index","currentQuestionIndex","isVisible","direction","enter","exit","Container","root","display","flexDirection","padding"],"mappings":";;AAAA,SAASA,GAAT,EAAcC,KAAd,EAAqBC,UAArB,QAAuC,mBAAvC;AACA,SAASC,aAAT,EAAwBC,UAAxB,QAA+D,OAA/D;AAEA,SAASC,oBAAT,QAAqC,cAArC;AAEA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AAOA,OAAO,MAAMC,eAAe,gBAAGL,aAAa,CAAC,IAAD,CAArC;AAEP,eAAe,SAASM,cAAT,CAAwB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAxB,EAAqD;AAClE,QAAM;AAAEC,IAAAA;AAAF,MAA2BR,UAAU,CAACC,oBAAD,CAA3C;AACA,QAAM;AAAEQ,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA2BP,iBAAiB,CAChDI,KADgD,EAEhDC,oBAFgD,CAAlD;AAKA,sBACE,QAAC,KAAD;AACE,IAAA,EAAE,EAAEC,SADN;AAEE,IAAA,SAAS,EAAE,CAACA,SAAD,GAAa,MAAb,GAAsBC,SAFnC;AAGE,IAAA,OAAO,EAAE;AAAEC,MAAAA,KAAK,EAAE,IAAT;AAAeC,MAAAA,IAAI,EAAE;AAArB,KAHX;AAIE,IAAA,YAAY,MAJd;AAKE,IAAA,aAAa,MALf;AAAA,2BAOE,QAAC,SAAD;AAAA,6BACE,QAAC,eAAD,CAAiB,QAAjB;AAA0B,QAAA,KAAK,EAAE;AAAEN,UAAAA;AAAF,SAAjC;AAAA,+BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;AAED,MAAMO,SAAS,GAAGf,UAAU,CAAC;AAC3BgB,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,aAAa,EAAE,QAFX;AAGJC,IAAAA,OAAO,EAAE;AAHL;AADqB,CAAD,CAAV,CAMfrB,GANe,CAAlB","sourcesContent":["import { Box, Slide, withStyles } from \"@material-ui/core\";\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport IQuestion from \"../../../../Models/IQuestion\";\nimport { QuizTestStateContext } from \"../Questions\";\n\nimport Question from \"./Question/Question\";\nimport useSingleQuestion from \"./useSingleQuestion\";\n\ninterface IProps {\n  index: number;\n  question: IQuestion;\n}\n\nexport const QuestionContext = createContext(null);\n\nexport default function SingleQuestion({ question, index }: IProps) {\n  const { currentQuestionIndex } = useContext(QuizTestStateContext);\n  const { isVisible, direction } = useSingleQuestion(\n    index,\n    currentQuestionIndex\n  );\n\n  return (\n    <Slide\n      in={isVisible}\n      direction={!isVisible ? \"down\" : direction}\n      timeout={{ enter: 1000, exit: 100 }}\n      mountOnEnter\n      unmountOnExit\n    >\n      <Container>\n        <QuestionContext.Provider value={{ question }}>\n          <Question />\n        </QuestionContext.Provider>\n      </Container>\n    </Slide>\n  );\n}\n\nconst Container = withStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: \"0.5rem 0rem\",\n  },\n})(Box);\n"]},"metadata":{},"sourceType":"module"}