{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { Box, withStyles } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport useLocalState from \"../../../custom-hooks/useLocalState\";\nimport { local_backend_url } from \"../../../url\";\nimport Topbar from \"../../Layout/Topbar/Topbar\";\nimport QuizTest from \"../QuizTest\";\nimport RetakePrompt from \"./RetakePrompt/RetakePrompt\";\n\nvar CheckTestStatus = function CheckTestStatus(_ref) {\n  var quizID = _ref.quizID;\n\n  var _useState = useState(\"unknown\"),\n      status = _useState[0],\n      setStatus = _useState[1];\n\n  var _useState2 = useState(0),\n      percentage = _useState2[0],\n      setPercentage = _useState2[1];\n\n  var _useState3 = useState(null),\n      quiz = _useState3[0],\n      setQuiz = _useState3[1];\n\n  var _useState4 = useState(true),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  var _useLocalState = useLocalState(\"user\", \"\"),\n      _useLocalState2 = _slicedToArray(_useLocalState, 1),\n      user = _useLocalState2[0];\n\n  var _useState5 = useState(false),\n      showTest = _useState5[0],\n      _setShowTest = _useState5[1];\n\n  useEffect(function () {\n    axios.get(\"\".concat(local_backend_url, \"/api/quiz-test/\").concat(quizID, \"/check-status\"), {\n      headers: {\n        Accept: \"Application/json\",\n        Authorization: \"Bearer \".concat(user.token)\n      }\n    }).then(function (response) {\n      setStatus(response.data.status);\n\n      if (response.data.status == \"retake\") {\n        setPercentage(response.data.percentage);\n        setQuiz(response.data.quiz);\n      } else if (response.data.status == \"ongoing\") {\n        setStatus(\"ongoing\");\n\n        _setShowTest(true);\n      } else if (response.data.status == \"new_test\") {\n        setStatus(\"new_test\");\n\n        _setShowTest(true);\n      }\n\n      setIsLoading(false);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Topbar, {}), /*#__PURE__*/_jsxs(Container, {\n      children: [status == \"unknown\" && !isLoading && /*#__PURE__*/_jsx(\"p\", {\n        children: \"Some Error Occured. Please Refresh or Go Back.\"\n      }), status == \"retake\" && !isLoading && !showTest && /*#__PURE__*/_jsx(RetakePrompt, {\n        quizID: quizID,\n        percentage: percentage,\n        quiz: quiz,\n        setShowTest: function setShowTest() {\n          return _setShowTest(true);\n        }\n      }), showTest && !isLoading && /*#__PURE__*/_jsx(QuizTest, {\n        id: quizID,\n        status: status\n      })]\n    })]\n  });\n};\n\nexport default CheckTestStatus;\nvar Container = withStyles({\n  root: {\n    width: \"100vw\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    backgroundColor: \"#5D00A5\",\n    minHeight: \"100vh\",\n    color: \"white\"\n  }\n})(Box);","map":null,"metadata":{},"sourceType":"module"}