{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ishraqkabir/workspace/smartifier-frontend/Components/Post/SinglePost/CommentsSection/Comment/CommentReact/Likes/Likes.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Avatar, Box, Snackbar, withStyles } from \"@material-ui/core\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport useLocalState from \"../../../../../../../custom-hooks/useLocalState\";\nimport { CommentContext } from \"../../Comment\";\n\nvar Likes = function Likes() {\n  _s();\n\n  var _useContext = useContext(CommentContext),\n      comment = _useContext.comment;\n\n  var _useLocalState = useLocalState(\"user\", \"\"),\n      _useLocalState2 = _slicedToArray(_useLocalState, 1),\n      user = _useLocalState2[0];\n\n  var _useState = useState(false),\n      showLoginAlert = _useState[0],\n      setShowLoginAlert = _useState[1];\n\n  var _useState2 = useState(false),\n      isLikedByUser = _useState2[0],\n      setIsLikedByUser = _useState2[1];\n\n  var _useState3 = useState(comment === null || comment === void 0 ? void 0 : comment.likes_count),\n      likesCount = _useState3[0],\n      setLikesCount = _useState3[1];\n\n  var handleClick = function handleClick() {// if (!user.token) {\n    //   setShowLoginAlert(true);\n    //   setTimeout(() => {\n    //     setShowLoginAlert(false);\n    //   }, 3000);\n    //   return;\n    // }\n    // if (isLikedByUser) {\n    //   unLikePost();\n    // } else {\n    //   likePost();\n    // }\n  };\n\n  useEffect(function () {// getHasUserLikedThePost();\n  }, []);\n  useEffect(function () {// getHasUserLikedThePost();\n    // if (!user.token) setIsLikedByUser(false);\n  }, [user]);\n\n  var getHasUserLikedThePost = function getHasUserLikedThePost() {// if (user.token) {\n    //   axios\n    //     .get(`${backend_url}/api/posts/${post?.slug}/is-liked-by-user`, {\n    //       headers: {\n    //         Accept: \"application/json\",\n    //         Authorization: `Bearer ${user.token}`,\n    //       },\n    //     })\n    //     .then((response) => {\n    //       setIsLikedByUser(response.data.is_liked_by_user);\n    //     });\n    // }\n  };\n\n  var likePost = function likePost() {// if (user.token) {\n    //   axios\n    //     .post(\n    //       `${backend_url}/api/post/like`,\n    //       {\n    //         post_id: post?.id,\n    //       },\n    //       {\n    //         headers: {\n    //           Accept: \"application/json\",\n    //           Authorization: `Bearer ${user.token}`,\n    //         },\n    //       }\n    //     )\n    //     .then((response) => {\n    //       setIsLikedByUser(true);\n    //       setLikesCount((count) => count + 1);\n    //     });\n    // }\n  };\n\n  var unLikePost = function unLikePost() {// if (user.token) {\n    //   axios\n    //     .post(\n    //       `${backend_url}/api/post/unlike`,\n    //       {\n    //         post_id: post?.id,\n    //       },\n    //       {\n    //         headers: {\n    //           Accept: \"application/json\",\n    //           Authorization: `Bearer ${user.token}`,\n    //         },\n    //       }\n    //     )\n    //     .then((response) => {\n    //       setIsLikedByUser(false);\n    //       setLikesCount((count) => count - 1);\n    //     });\n    // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Button, {\n    onClick: handleClick,\n    children: [/*#__PURE__*/_jsxDEV(Avatar, {\n      src: \"https://img.icons8.com/pastel-glyph/34/000000/facebook-like--v1.png\",\n      style: {\n        width: \"23px\",\n        height: \"23px\",\n        marginRight: \"16px\",\n        alignSelf: \"center\",\n        backgroundColor: isLikedByUser ? \"#2d95b5\" : \"lightgrey\",\n        borderRadius: \"50%\",\n        padding: \"5px\",\n        cursor: \"pointer\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, _this), likesCount && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Number, {\n        children: likesCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Like\", likesCount > 1 ? \"s\" : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(LoginAlert // key={post.id}\n    , {\n      anchorOrigin: {\n        vertical: \"top\",\n        horizontal: \"center\"\n      },\n      open: showLoginAlert,\n      message: \"Please Login To Like The Post.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Likes, \"HhweTwLaCxsMXXhbgdGP1GEo5j8=\", false, function () {\n  return [useLocalState];\n});\n\n_c = Likes;\nexport default Likes;\nvar Button = withStyles({\n  root: {\n    maxWidth: \"240px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    marginRight: \"4rem\",\n    cursor: \"pointer\",\n    margin: \"1rem 0rem 0.3rem 0rem\"\n  }\n})(Box);\nvar Number = withStyles({\n  root: {\n    display: \"inline-block\",\n    marginRight: 8\n  }\n})(Box);\nvar LoginAlert = withStyles({\n  root: {\n    zIndex: 20000\n  }\n})(Snackbar);\n\nvar _c;\n\n$RefreshReg$(_c, \"Likes\");","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/Post/SinglePost/CommentsSection/Comment/CommentReact/Likes/Likes.tsx"],"names":["Avatar","Box","Snackbar","withStyles","React","useContext","useEffect","useState","useLocalState","CommentContext","Likes","comment","user","showLoginAlert","setShowLoginAlert","isLikedByUser","setIsLikedByUser","likes_count","likesCount","setLikesCount","handleClick","getHasUserLikedThePost","likePost","unLikePost","width","height","marginRight","alignSelf","backgroundColor","borderRadius","padding","cursor","vertical","horizontal","Button","root","maxWidth","display","alignItems","margin","Number","LoginAlert","zIndex"],"mappings":"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","sourcesContent":["import { Avatar, Box, Snackbar, withStyles } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport useLocalState from \"../../../../../../../custom-hooks/useLocalState\";\n\nimport { CommentContext } from \"../../Comment\";\n\ninterface IProps {}\n\nconst Likes: React.FC<IProps> = () => {\n  const { comment } = useContext(CommentContext);\n\n  const [user] = useLocalState(\"user\", \"\");\n  const [showLoginAlert, setShowLoginAlert] = useState<boolean>(false);\n  const [isLikedByUser, setIsLikedByUser] = useState<boolean>(false);\n  const [likesCount, setLikesCount] = useState<number>(comment?.likes_count);\n\n  const handleClick = () => {\n    // if (!user.token) {\n    //   setShowLoginAlert(true);\n    //   setTimeout(() => {\n    //     setShowLoginAlert(false);\n    //   }, 3000);\n    //   return;\n    // }\n    // if (isLikedByUser) {\n    //   unLikePost();\n    // } else {\n    //   likePost();\n    // }\n  };\n\n  useEffect(() => {\n    // getHasUserLikedThePost();\n  }, []);\n\n  useEffect(() => {\n    // getHasUserLikedThePost();\n    // if (!user.token) setIsLikedByUser(false);\n  }, [user]);\n\n  const getHasUserLikedThePost = () => {\n    // if (user.token) {\n    //   axios\n    //     .get(`${backend_url}/api/posts/${post?.slug}/is-liked-by-user`, {\n    //       headers: {\n    //         Accept: \"application/json\",\n    //         Authorization: `Bearer ${user.token}`,\n    //       },\n    //     })\n    //     .then((response) => {\n    //       setIsLikedByUser(response.data.is_liked_by_user);\n    //     });\n    // }\n  };\n\n  const likePost = () => {\n    // if (user.token) {\n    //   axios\n    //     .post(\n    //       `${backend_url}/api/post/like`,\n    //       {\n    //         post_id: post?.id,\n    //       },\n    //       {\n    //         headers: {\n    //           Accept: \"application/json\",\n    //           Authorization: `Bearer ${user.token}`,\n    //         },\n    //       }\n    //     )\n    //     .then((response) => {\n    //       setIsLikedByUser(true);\n    //       setLikesCount((count) => count + 1);\n    //     });\n    // }\n  };\n\n  const unLikePost = () => {\n    // if (user.token) {\n    //   axios\n    //     .post(\n    //       `${backend_url}/api/post/unlike`,\n    //       {\n    //         post_id: post?.id,\n    //       },\n    //       {\n    //         headers: {\n    //           Accept: \"application/json\",\n    //           Authorization: `Bearer ${user.token}`,\n    //         },\n    //       }\n    //     )\n    //     .then((response) => {\n    //       setIsLikedByUser(false);\n    //       setLikesCount((count) => count - 1);\n    //     });\n    // }\n  };\n\n  return (\n    <Button onClick={handleClick}>\n      <Avatar\n        src={`https://img.icons8.com/pastel-glyph/34/000000/facebook-like--v1.png`}\n        style={{\n          width: \"23px\",\n          height: \"23px\",\n          marginRight: \"16px\",\n          alignSelf: \"center\",\n          backgroundColor: isLikedByUser ? \"#2d95b5\" : \"lightgrey\",\n          borderRadius: \"50%\",\n          padding: \"5px\",\n          cursor: \"pointer\",\n        }}\n      />\n\n      {likesCount && (\n        <>\n          <Number>{likesCount}</Number>\n          <p>Like{likesCount > 1 ? \"s\" : \"\"}</p>\n        </>\n      )}\n      <LoginAlert\n        // key={post.id}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n        open={showLoginAlert}\n        message=\"Please Login To Like The Post.\"\n      />\n    </Button>\n  );\n};\n\nexport default Likes;\n\nconst Button = withStyles({\n  root: {\n    maxWidth: \"240px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    marginRight: \"4rem\",\n    cursor: \"pointer\",\n    margin: \"1rem 0rem 0.3rem 0rem\",\n  },\n})(Box);\n\nconst Number = withStyles({\n  root: {\n    display: \"inline-block\",\n    marginRight: 8,\n  },\n})(Box);\n\nconst LoginAlert = withStyles({\n  root: {\n    zIndex: 20000,\n  },\n})(Snackbar);\n"]},"metadata":{},"sourceType":"module"}