{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ishraqkabir/workspace/smartifier-frontend/Components/QuizTest/Questions/Questions.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Typography, withStyles } from \"@material-ui/core\";\nimport { createContext } from \"react\";\nimport SingleQuestion from \"./SingleQuestion/SingleQuestion\";\nimport QuestionBottomBar from \"./QuestionBottomBar/QuestionBottomBar\";\nimport useTestState from \"./useTestState\";\nexport var QuizTestStateContext = /*#__PURE__*/createContext(null);\nexport default function Questions(_ref) {\n  _s();\n\n  var _this = this;\n\n  var quizTitle = _ref.quizTitle,\n      questions = _ref.questions,\n      isAssessment = _ref.isAssessment,\n      quizId = _ref.quizId;\n\n  var _useTestState = useTestState(quizId, questions),\n      answers = _useTestState.answers,\n      setAnswers = _useTestState.setAnswers,\n      currentQuestionIndex = _useTestState.currentQuestionIndex,\n      goToNextQuestion = _useTestState.goToNextQuestion,\n      goToPreviousQuestion = _useTestState.goToPreviousQuestion,\n      showPrevious = _useTestState.showPrevious,\n      showNext = _useTestState.showNext;\n\n  return /*#__PURE__*/_jsxDEV(QuizTestStateContext.Provider, {\n    value: {\n      answers: answers,\n      setAnswers: setAnswers,\n      currentQuestionIndex: currentQuestionIndex,\n      goToNextQuestion: goToNextQuestion,\n      goToPreviousQuestion: goToPreviousQuestion,\n      showPrevious: showPrevious,\n      showNext: showNext\n    },\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: \"inherit\",\n          children: \"\".concat(quizTitle, \" \").concat(isAssessment ? \"assessment\" : \"quiz\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), questions && (questions === null || questions === void 0 ? void 0 : questions.map(function (question, index) {\n        return /*#__PURE__*/_jsxDEV(SingleQuestion, {\n          index: index,\n          question: question\n        }, question === null || question === void 0 ? void 0 : question.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, _this);\n      })), /*#__PURE__*/_jsxDEV(QuestionBottomBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Questions, \"uVd+Zg7soetsly9uWF2jGUvK3Ec=\", false, function () {\n  return [useTestState];\n});\n\n_c = Questions;\nvar Container = withStyles({\n  root: {\n    backgroundColor: \"inherit\",\n    width: \"min(97%, 600px)\",\n    borderRadius: 5,\n    overflow: \"hidden\",\n    boxShadow: \"0px 0px 8px 0px #2b579a\",\n    display: \"flex\",\n    flexDirection: \"column\"\n  }\n})(Box);\nvar Header = withStyles({\n  root: {\n    width: \"100%\",\n    textAlign: \"center\",\n    color: \"white\",\n    padding: \"0.5rem 0\",\n    background: \"transparent linear-gradient(180deg, #003EAA 0%, #002461E0 100%) 0% 0% no-repeat padding-box\",\n    textTransform: \"capitalize\"\n  }\n})(Box);\n\nvar _c;\n\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/QuizTest/Questions/Questions.tsx"],"names":["Box","Typography","withStyles","createContext","SingleQuestion","QuestionBottomBar","useTestState","QuizTestStateContext","Questions","quizTitle","questions","isAssessment","quizId","answers","setAnswers","currentQuestionIndex","goToNextQuestion","goToPreviousQuestion","showPrevious","showNext","map","question","index","id","Container","root","backgroundColor","width","borderRadius","overflow","boxShadow","display","flexDirection","Header","textAlign","color","padding","background","textTransform"],"mappings":"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","sourcesContent":["import { Box, Typography, withStyles } from \"@material-ui/core\";\nimport { QuestionAnswerTwoTone } from \"@material-ui/icons\";\nimport { createContext } from \"react\";\nimport IQuestion from \"../../../Models/IQuestion\";\nimport SingleQuestion from \"./SingleQuestion/SingleQuestion\";\nimport QuestionBottomBar from \"./QuestionBottomBar/QuestionBottomBar\";\nimport useTestState from \"./useTestState\";\n\ninterface IProps {\n  quizTitle: String;\n  questions: IQuestion[];\n  isAssessment: boolean;\n  quizId: number;\n}\n\nexport const QuizTestStateContext = createContext(null);\n\nexport default function Questions({\n  quizTitle,\n  questions,\n  isAssessment,\n  quizId,\n}: IProps) {\n  const {\n    answers,\n    setAnswers,\n    currentQuestionIndex,\n    goToNextQuestion,\n    goToPreviousQuestion,\n    showPrevious,\n    showNext,\n  } = useTestState(quizId, questions);\n\n  return (\n    <QuizTestStateContext.Provider\n      value={{\n        answers,\n        setAnswers,\n        currentQuestionIndex,\n        goToNextQuestion,\n        goToPreviousQuestion,\n        showPrevious,\n        showNext,\n      }}\n    >\n      <Container>\n        <Header>\n          <Typography variant=\"h6\" color=\"inherit\">\n            {`${quizTitle} ${isAssessment ? \"assessment\" : \"quiz\"}`}\n          </Typography>\n        </Header>\n        {questions &&\n          questions?.map((question, index) => {\n            return (\n              <SingleQuestion\n                key={question?.id}\n                index={index}\n                question={question}\n              />\n            );\n          })}\n        <QuestionBottomBar />\n      </Container>\n    </QuizTestStateContext.Provider>\n  );\n}\n\nconst Container = withStyles({\n  root: {\n    backgroundColor: \"inherit\",\n    width: \"min(97%, 600px)\",\n    borderRadius: 5,\n    overflow: \"hidden\",\n    boxShadow: \"0px 0px 8px 0px #2b579a\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n})(Box);\n\nconst Header = withStyles({\n  root: {\n    width: \"100%\",\n    textAlign: \"center\",\n    color: \"white\",\n    padding: \"0.5rem 0\",\n    background:\n      \"transparent linear-gradient(180deg, #003EAA 0%, #002461E0 100%) 0% 0% no-repeat padding-box\",\n    textTransform: \"capitalize\",\n  },\n})(Box);\n"]},"metadata":{},"sourceType":"module"}