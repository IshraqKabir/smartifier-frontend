{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ishraqkabir/workspace/smartifier-frontend/Components/Questions/Questions.tsx\";\nimport React from \"react\";\nimport Question from \"../Question/Question\";\nimport { withStyles } from \"@material-ui/core\";\n\nconst Questions = ({\n  questions\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: questions && questions.map((question, index) => {\n      return /*#__PURE__*/_jsxDEV(Question, {\n        question: question,\n        position: index + 1\n      }, question.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false);\n};\n\nexport default Questions;\nconst Container = withStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/Questions/Questions.tsx"],"names":["React","Question","withStyles","Questions","questions","map","question","index","id","Container","root","display","flexDirection","alignItems"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,QAAP,MAAqB,sBAArB;AAEA,SAASC,UAAT,QAA2B,mBAA3B;;AAMA,MAAMC,SAA2B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AACrD,sBACE;AAAA,cACGA,SAAS,IACRA,SAAS,CAACC,GAAV,CAAc,CAACC,QAAD,EAAWC,KAAX,KAAqB;AACjC,0BACE,QAAC,QAAD;AAEE,QAAA,QAAQ,EAAED,QAFZ;AAGE,QAAA,QAAQ,EAAEC,KAAK,GAAG;AAHpB,SACOD,QAAQ,CAACE,EADhB;AAAA;AAAA;AAAA;AAAA,cADF;AAOD,KARD;AAFJ,mBADF;AAcD,CAfD;;AAiBA,eAAeL,SAAf;AAEA,MAAMM,SAAS,GAAGP,UAAU,CAAC;AAC3BQ,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,aAAa,EAAE,QAFX;AAGJC,IAAAA,UAAU,EAAE;AAHR;AADqB,CAAD,CAA5B","sourcesContent":["import React from \"react\";\n\nimport Question from \"../Question/Question\";\nimport IQuestion from \"../../Models/IQuestion\";\nimport { withStyles } from \"@material-ui/core\";\n\ninterface IProps {\n  questions: IQuestion[];\n}\n\nconst Questions: React.FC<IProps> = ({ questions }) => {\n  return (\n    <>\n      {questions &&\n        questions.map((question, index) => {\n          return (\n            <Question\n              key={question.id}\n              question={question}\n              position={index + 1}\n            />\n          );\n        })}\n    </>\n  );\n};\n\nexport default Questions;\n\nconst Container = withStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}