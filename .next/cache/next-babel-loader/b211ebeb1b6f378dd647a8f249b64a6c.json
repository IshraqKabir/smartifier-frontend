{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ishraqkabir/workspace/smartifier-frontend/Components/QuizTestResult/Questions/SingleQuestion/SingleQuestion.tsx\";\nimport { Avatar, Box, Typography, withStyles } from \"@material-ui/core\";\nimport React from \"react\";\nimport { backend_url } from \"../../../../url\";\nexport default function SingleQuestion({\n  question,\n  isAnsweredCorrectly\n}) {\n  var _question$image, _question$image2;\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(QuestionContainer, {\n      children: [(question === null || question === void 0 ? void 0 : question.question) && /*#__PURE__*/_jsxDEV(QuestionTitle, {\n        variant: \"subtitle1\",\n        children: `Q. ${question === null || question === void 0 ? void 0 : question.question}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this), (question === null || question === void 0 ? void 0 : (_question$image = question.image) === null || _question$image === void 0 ? void 0 : _question$image.image_link) && /*#__PURE__*/_jsxDEV(Avatar, {\n        src: `${backend_url}/storage/${question === null || question === void 0 ? void 0 : (_question$image2 = question.image) === null || _question$image2 === void 0 ? void 0 : _question$image2.image_link}`,\n        variant: \"square\",\n        style: {\n          height: 200,\n          width: 200,\n          margin: \"0.2rem 0\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\nconst Container = withStyles({\n  root: {\n    width: \"98%\",\n    margin: \"1rem 0\",\n    height: \"50vh\",\n    overflowY: \"scroll\",\n    overflowX: \"hidden\"\n  }\n})(Box);\nconst QuestionTitle = withStyles({\n  root: {\n    fontWeight: 600,\n    padding: \"0 0.5rem\"\n  }\n})(Typography);\nconst QuestionContainer = withStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n})(Box);","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/QuizTestResult/Questions/SingleQuestion/SingleQuestion.tsx"],"names":["Avatar","Box","Typography","withStyles","React","backend_url","SingleQuestion","question","isAnsweredCorrectly","image","image_link","height","width","margin","Container","root","overflowY","overflowX","QuestionTitle","fontWeight","padding","QuestionContainer","display","flexDirection","alignItems","justifyContent"],"mappings":";;AAAA,SAASA,MAAT,EAAiBC,GAAjB,EAAsBC,UAAtB,EAAkCC,UAAlC,QAAoD,mBAApD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,WAAT,QAA4B,iBAA5B;AAOA,eAAe,SAASC,cAAT,CAAwB;AACrCC,EAAAA,QADqC;AAErCC,EAAAA;AAFqC,CAAxB,EAGJ;AAAA;;AACT,sBACE,QAAC,SAAD;AAAA,2BACE,QAAC,iBAAD;AAAA,iBACG,CAAAD,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEA,QAAV,kBACC,QAAC,aAAD;AAAe,QAAA,OAAO,EAAC,WAAvB;AAAA,kBACI,MAAKA,QAAN,aAAMA,QAAN,uBAAMA,QAAQ,CAAEA,QAAS;AAD5B;AAAA;AAAA;AAAA;AAAA,cAFJ,EAMG,CAAAA,QAAQ,SAAR,IAAAA,QAAQ,WAAR,+BAAAA,QAAQ,CAAEE,KAAV,oEAAiBC,UAAjB,kBACC,QAAC,MAAD;AACE,QAAA,GAAG,EAAG,GAAEL,WAAY,YAAWE,QAA1B,aAA0BA,QAA1B,2CAA0BA,QAAQ,CAAEE,KAApC,qDAA0B,iBAAiBC,UAAW,EAD7D;AAEE,QAAA,OAAO,EAAC,QAFV;AAGE,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE,GAAV;AAAeC,UAAAA,KAAK,EAAE,GAAtB;AAA2BC,UAAAA,MAAM,EAAE;AAAnC;AAHT;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;AAED,MAAMC,SAAS,GAAGX,UAAU,CAAC;AAC3BY,EAAAA,IAAI,EAAE;AACJH,IAAAA,KAAK,EAAE,KADH;AAEJC,IAAAA,MAAM,EAAE,QAFJ;AAGJF,IAAAA,MAAM,EAAE,MAHJ;AAIJK,IAAAA,SAAS,EAAE,QAJP;AAKJC,IAAAA,SAAS,EAAE;AALP;AADqB,CAAD,CAAV,CASfhB,GATe,CAAlB;AAWA,MAAMiB,aAAa,GAAGf,UAAU,CAAC;AAC/BY,EAAAA,IAAI,EAAE;AACJI,IAAAA,UAAU,EAAE,GADR;AAEJC,IAAAA,OAAO,EAAE;AAFL;AADyB,CAAD,CAAV,CAKnBlB,UALmB,CAAtB;AAOA,MAAMmB,iBAAiB,GAAGlB,UAAU,CAAC;AACnCY,EAAAA,IAAI,EAAE;AACJO,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,aAAa,EAAE,QAFX;AAGJC,IAAAA,UAAU,EAAE,QAHR;AAIJC,IAAAA,cAAc,EAAE;AAJZ;AAD6B,CAAD,CAAV,CAOvBxB,GAPuB,CAA1B","sourcesContent":["import { Avatar, Box, Typography, withStyles } from \"@material-ui/core\";\nimport React from \"react\";\nimport IQuestion from \"../../../../Models/IQuestion\";\nimport { backend_url } from \"../../../../url\";\n\ninterface IProps {\n  question: IQuestion;\n  isAnsweredCorrectly: boolean;\n}\n\nexport default function SingleQuestion({\n  question,\n  isAnsweredCorrectly,\n}: IProps) {\n  return (\n    <Container>\n      <QuestionContainer>\n        {question?.question && (\n          <QuestionTitle variant=\"subtitle1\">\n            {`Q. ${question?.question}`}\n          </QuestionTitle>\n        )}\n        {question?.image?.image_link && (\n          <Avatar\n            src={`${backend_url}/storage/${question?.image?.image_link}`}\n            variant=\"square\"\n            style={{ height: 200, width: 200, margin: \"0.2rem 0\" }}\n          />\n        )}\n        {/* {question?.options && <Options />} */}\n      </QuestionContainer>\n    </Container>\n  );\n}\n\nconst Container = withStyles({\n  root: {\n    width: \"98%\",\n    margin: \"1rem 0\",\n    height: \"50vh\",\n    overflowY: \"scroll\",\n    overflowX: \"hidden\",\n    \n  },\n})(Box);\n\nconst QuestionTitle = withStyles({\n  root: {\n    fontWeight: 600,\n    padding: \"0 0.5rem\",\n  },\n})(Typography);\n\nconst QuestionContainer = withStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n})(Box);\n"]},"metadata":{},"sourceType":"module"}