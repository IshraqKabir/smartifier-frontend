{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ishraqkabir/workspace/smartifier-frontend/Components/QuizTestResult/QuizTestResult.tsx\";\nimport { Box, CircularProgress, withStyles } from \"@material-ui/core\";\nimport useQuizTestResult from \"./useQuizTestResult\";\nexport default function QuizTestResult({\n  testId\n}) {\n  const {\n    isLoading\n  } = useQuizTestResult(testId);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: isLoading && /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 35\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 10\n  }, this);\n}\nconst Container = withStyles({\n  root: {\n    width: \"100vw\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: \"2rem 0rem\"\n  }\n})(Box);","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/QuizTestResult/QuizTestResult.tsx"],"names":["Box","CircularProgress","withStyles","useQuizTestResult","QuizTestResult","testId","isLoading","Container","root","width","display","flexDirection","alignItems","padding"],"mappings":";;AAAA,SAASA,GAAT,EAAcC,gBAAd,EAAgCC,UAAhC,QAAkD,mBAAlD;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AAMA,eAAe,SAASC,cAAT,CAAwB;AAAEC,EAAAA;AAAF,CAAxB,EAA4C;AACzD,QAAM;AAAEC,IAAAA;AAAF,MAAgBH,iBAAiB,CAACE,MAAD,CAAvC;AAEA,sBAAO,QAAC,SAAD;AAAA,cAAYC,SAAS,iBAAI,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;AAED,MAAMC,SAAS,GAAGL,UAAU,CAAC;AAC3BM,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,OADH;AAEJC,IAAAA,OAAO,EAAE,MAFL;AAGJC,IAAAA,aAAa,EAAE,QAHX;AAIJC,IAAAA,UAAU,EAAE,QAJR;AAKJC,IAAAA,OAAO,EAAE;AALL;AADqB,CAAD,CAAV,CAQfb,GARe,CAAlB","sourcesContent":["import { Box, CircularProgress, withStyles } from \"@material-ui/core\";\nimport useQuizTestResult from \"./useQuizTestResult\";\n\ninterface IProps {\n  testId: number;\n}\n\nexport default function QuizTestResult({ testId }: IProps) {\n  const { isLoading } = useQuizTestResult(testId);\n\n  return <Container>{isLoading && <CircularProgress />}</Container>;\n}\n\nconst Container = withStyles({\n  root: {\n    width: \"100vw\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: \"2rem 0rem\",\n  },\n})(Box);\n"]},"metadata":{},"sourceType":"module"}