{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Avatar, Box, Snackbar, withStyles } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport useLocalState from \"../../../../../custom-hooks/useLocalState\";\nimport { backend_url } from \"../../../../../url\";\n\nconst Likes = ({\n  post\n}) => {\n  const [user] = useLocalState(\"user\", \"\");\n  const {\n    0: showLoginAlert,\n    1: setShowLoginAlert\n  } = useState(false);\n  const {\n    0: isLikedByUser,\n    1: setIsLikedByUser\n  } = useState(false);\n  const {\n    0: likesCount,\n    1: setLikesCount\n  } = useState(post === null || post === void 0 ? void 0 : post.likes_count);\n\n  const handleClick = () => {\n    if (!user.token) {\n      setShowLoginAlert(true);\n      setTimeout(() => {\n        setShowLoginAlert(false);\n      }, 3000);\n      return;\n    }\n\n    if (isLikedByUser) {\n      unLikePost();\n    } else {\n      likePost();\n    }\n  };\n\n  useEffect(() => {\n    getHasUserLikedThePost();\n  }, []);\n  useEffect(() => {\n    getHasUserLikedThePost();\n    if (!user.token) setIsLikedByUser(false);\n  }, [user]);\n\n  const getHasUserLikedThePost = () => {\n    if (user.token) {\n      axios.get(`${backend_url}/api/posts/${post === null || post === void 0 ? void 0 : post.slug}/is-liked-by-user`, {\n        headers: {\n          Accept: \"application/json\",\n          Authorization: `Bearer ${user.token}`\n        }\n      }).then(response => {\n        setIsLikedByUser(response.data.is_liked_by_user);\n      });\n    }\n  };\n\n  const likePost = () => {\n    if (user.token) {\n      axios.post(`${backend_url}/api/post/like`, {\n        post_id: post === null || post === void 0 ? void 0 : post.id\n      }, {\n        headers: {\n          Accept: \"application/json\",\n          Authorization: `Bearer ${user.token}`\n        }\n      }).then(response => {\n        setIsLikedByUser(true);\n        setLikesCount(count => count + 1);\n      });\n    }\n  };\n\n  const unLikePost = () => {\n    if (user.token) {\n      axios.post(`${backend_url}/api/post/unlike`, {\n        post_id: post === null || post === void 0 ? void 0 : post.id\n      }, {\n        headers: {\n          Accept: \"application/json\",\n          Authorization: `Bearer ${user.token}`\n        }\n      }).then(response => {\n        setIsLikedByUser(false);\n        setLikesCount(count => count - 1);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(Button, {\n    onClick: handleClick,\n    children: [/*#__PURE__*/_jsx(Avatar, {\n      src: `https://img.icons8.com/pastel-glyph/34/000000/facebook-like--v1.png`,\n      style: {\n        width: \"23px\",\n        height: \"23px\",\n        marginRight: \"16px\",\n        alignSelf: \"center\",\n        backgroundColor: isLikedByUser ? \"#2d95b5\" : \"lightgrey\",\n        borderRadius: \"50%\",\n        padding: \"5px\",\n        cursor: \"pointer\"\n      }\n    }), post.likes_count && /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsx(Number, {\n        children: likesCount\n      }), /*#__PURE__*/_jsxs(\"p\", {\n        children: [\"Like\", likesCount > 1 ? \"s\" : \"\"]\n      })]\n    }), /*#__PURE__*/_jsx(LoginAlert, {\n      anchorOrigin: {\n        vertical: \"top\",\n        horizontal: \"center\"\n      },\n      open: showLoginAlert,\n      message: \"Please Login To Like The Post.\"\n    }, post.id)]\n  });\n};\n\nexport default Likes;\nconst Button = withStyles({\n  root: {\n    maxWidth: \"240px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    marginRight: \"4rem\",\n    cursor: \"pointer\"\n  }\n})(Box);\nconst Number = withStyles({\n  root: {\n    display: \"inline-block\",\n    marginRight: 8\n  }\n})(Box);\nconst LoginAlert = withStyles({\n  root: {\n    zIndex: 20000\n  }\n})(Snackbar);","map":null,"metadata":{},"sourceType":"module"}