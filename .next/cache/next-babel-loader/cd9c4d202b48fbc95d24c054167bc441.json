{"ast":null,"code":"import { useState, useEffect } from \"react\";\nimport Cookies from \"js-cookie\";\n\nfunction useLocalState(key, defaultValue) {\n  const {\n    0: value,\n    1: setValue\n  } = useState(() => {\n    if (false) {\n      const storedValue = JSON.parse(localStorage.getItem(key));\n\n      if (!storedValue) {\n        return defaultValue;\n      }\n\n      return storedValue === null ? defaultValue : storedValue;\n    } else {\n      return defaultValue;\n    }\n  });\n  useEffect(() => {\n    const listener = e => {\n      if (e.storageArea === localStorage && e.key === key) {\n        setValue(JSON.parse(e.newValue));\n        Cookies.set(JSON.parse(e.newValue));\n      }\n    };\n\n    window.addEventListener(\"storage\", listener);\n    return () => {\n      window.removeEventListener(\"storage\", listener);\n    };\n  }, [key]);\n\n  const setValueInLocalStorage = newValue => {\n    setValue(currentValue => {\n      if (typeof newValue === \"function\") {\n        Cookies.set(key, newValue);\n      } else {}\n\n      const result = typeof newValue === \"function\" ? newValue(currentValue) : newValue;\n      localStorage.setItem(key, JSON.stringify(result));\n      return result;\n    });\n  };\n\n  useEffect(() => {\n    const storedValue = JSON.parse(localStorage.getItem(key));\n\n    if (storedValue) {\n      setValueInLocalStorage(storedValue);\n    } else {\n      setValueInLocalStorage(value);\n    }\n  }, []);\n  return [value, setValueInLocalStorage];\n}\n\nexport default useLocalState;","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/custom-hooks/useLocalState.ts"],"names":["useState","useEffect","Cookies","useLocalState","key","defaultValue","value","setValue","storedValue","JSON","parse","localStorage","getItem","listener","e","storageArea","newValue","set","window","addEventListener","removeEventListener","setValueInLocalStorage","currentValue","result","setItem","stringify"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,SAASC,aAAT,CAA0BC,GAA1B,EAAuCC,YAAvC,EAAwD;AACtD,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBP,QAAQ,CAAC,MAAM;AACvC,eAAqB;AACnB,YAAMQ,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBR,GAArB,CAAX,CAApB;;AACA,UAAI,CAACI,WAAL,EAAkB;AAChB,eAAOH,YAAP;AACD;;AACD,aAAOG,WAAW,KAAK,IAAhB,GAAuBH,YAAvB,GAAsCG,WAA7C;AACD,KAND,MAMO;AACL,aAAOH,YAAP;AACD;AACF,GAViC,CAAlC;AAYAJ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,QAAQ,GAAIC,CAAD,IAAO;AACtB,UAAIA,CAAC,CAACC,WAAF,KAAkBJ,YAAlB,IAAkCG,CAAC,CAACV,GAAF,KAAUA,GAAhD,EAAqD;AACnDG,QAAAA,QAAQ,CAACE,IAAI,CAACC,KAAL,CAAWI,CAAC,CAACE,QAAb,CAAD,CAAR;AACAd,QAAAA,OAAO,CAACe,GAAR,CAAYR,IAAI,CAACC,KAAL,CAAWI,CAAC,CAACE,QAAb,CAAZ;AACD;AACF,KALD;;AAMAE,IAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmCN,QAAnC;AAEA,WAAO,MAAM;AACXK,MAAAA,MAAM,CAACE,mBAAP,CAA2B,SAA3B,EAAsCP,QAAtC;AACD,KAFD;AAGD,GAZQ,EAYN,CAACT,GAAD,CAZM,CAAT;;AAcA,QAAMiB,sBAAsB,GAAIL,QAAD,IAAc;AAC3CT,IAAAA,QAAQ,CAAEe,YAAD,IAAkB;AACzB,UAAI,OAAON,QAAP,KAAoB,UAAxB,EAAoC;AAClCd,QAAAA,OAAO,CAACe,GAAR,CAAYb,GAAZ,EAAiBY,QAAjB;AACD,OAFD,MAEO,CACN;;AAED,YAAMO,MAAM,GACV,OAAOP,QAAP,KAAoB,UAApB,GAAiCA,QAAQ,CAACM,YAAD,CAAzC,GAA0DN,QAD5D;AAEAL,MAAAA,YAAY,CAACa,OAAb,CAAqBpB,GAArB,EAA0BK,IAAI,CAACgB,SAAL,CAAeF,MAAf,CAA1B;AACA,aAAOA,MAAP;AACD,KAVO,CAAR;AAWD,GAZD;;AAcAtB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBR,GAArB,CAAX,CAApB;;AACA,QAAII,WAAJ,EAAiB;AACfa,MAAAA,sBAAsB,CAACb,WAAD,CAAtB;AACD,KAFD,MAEO;AACLa,MAAAA,sBAAsB,CAACf,KAAD,CAAtB;AACD;AACF,GAPQ,EAON,EAPM,CAAT;AASA,SAAO,CAACA,KAAD,EAAQe,sBAAR,CAAP;AACD;;AAED,eAAelB,aAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport Cookies from \"js-cookie\";\n\nfunction useLocalState<T>(key: string, defaultValue: T) {\n  const [value, setValue] = useState(() => {\n    if (process.browser) {\n      const storedValue = JSON.parse(localStorage.getItem(key));\n      if (!storedValue) {\n        return defaultValue;\n      }\n      return storedValue === null ? defaultValue : storedValue;\n    } else {\n      return defaultValue;\n    }\n  });\n\n  useEffect(() => {\n    const listener = (e) => {\n      if (e.storageArea === localStorage && e.key === key) {\n        setValue(JSON.parse(e.newValue));\n        Cookies.set(JSON.parse(e.newValue));\n      }\n    };\n    window.addEventListener(\"storage\", listener);\n\n    return () => {\n      window.removeEventListener(\"storage\", listener);\n    };\n  }, [key]);\n\n  const setValueInLocalStorage = (newValue) => {\n    setValue((currentValue) => {\n      if (typeof newValue === \"function\") {\n        Cookies.set(key, newValue);\n      } else {\n      }\n\n      const result =\n        typeof newValue === \"function\" ? newValue(currentValue) : newValue;\n      localStorage.setItem(key, JSON.stringify(result));\n      return result;\n    });\n  };\n\n  useEffect(() => {\n    const storedValue = JSON.parse(localStorage.getItem(key));\n    if (storedValue) {\n      setValueInLocalStorage(storedValue);\n    } else {\n      setValueInLocalStorage(value);\n    }\n  }, []);\n\n  return [value, setValueInLocalStorage];\n}\n\nexport default useLocalState;\n"]},"metadata":{},"sourceType":"module"}