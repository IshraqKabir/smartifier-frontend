{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport useLocalState from \"../../custom-hooks/useLocalState\";\nimport { local_backend_url } from \"../../url\";\nexport default function useStartTest(_x) {\n  return _useStartTest.apply(this, arguments);\n}\n\nfunction _useStartTest() {\n  var _s = $RefreshSig$();\n\n  _useStartTest = _asyncToGenerator(_s( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(id) {\n    var _useLocalState, _useLocalState2, user, _useState, test, setTest, _useState2, isLoading, setIsLoading, _useState3, isError, setIsError;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _s();\n\n            _useLocalState = useLocalState(\"user\", \"\"), _useLocalState2 = _slicedToArray(_useLocalState, 1), user = _useLocalState2[0];\n            _useState = useState({}), test = _useState[0], setTest = _useState[1];\n            _useState2 = useState(true), isLoading = _useState2[0], setIsLoading = _useState2[1];\n            _useState3 = useState(true), isError = _useState3[0], setIsError = _useState3[1];\n            _context.next = 7;\n            return useEffect(function () {\n              axios.post(\"\".concat(local_backend_url, \"/api/test/start\"), {\n                quiz_id: id\n              }, {\n                headers: {\n                  Accept: \"Application/json\",\n                  Authorization: \"Bearer \".concat(user.token)\n                }\n              }).then(function (response) {\n                setTest(response.data);\n                setIsLoading(false);\n                setIsError(false);\n              })[\"catch\"](function () {\n                setIsLoading(false);\n                setIsError(true);\n              });\n            }, []);\n\n          case 7:\n            return _context.abrupt(\"return\", {\n              test: test,\n              setTest: setTest,\n              isLoading: isLoading,\n              isError: isError\n            });\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }), \"PaWirjS0N2jXQ7KifjMMfqlZHiY=\", false, function () {\n    return [useLocalState];\n  }));\n  return _useStartTest.apply(this, arguments);\n}","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/QuizTest/useStartTest.ts"],"names":["axios","useEffect","useState","useLocalState","local_backend_url","useStartTest","id","user","test","setTest","isLoading","setIsLoading","isError","setIsError","post","quiz_id","headers","Accept","Authorization","token","then","response","data"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AAEA,SAASC,iBAAT,QAAkC,WAAlC;AAEA,wBAA8BC,YAA9B;AAAA;AAAA;;;;;8EAAe,iBAA4BC,EAA5B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,6BACEH,aAAa,CAAC,MAAD,EAAS,EAAT,CADf,uDACNI,IADM;AAAA,wBAEWL,QAAQ,CAAa,EAAb,CAFnB,EAENM,IAFM,iBAEAC,OAFA;AAAA,yBAGqBP,QAAQ,CAAU,IAAV,CAH7B,EAGNQ,SAHM,kBAGKC,YAHL;AAAA,yBAIiBT,QAAQ,CAAU,IAAV,CAJzB,EAINU,OAJM,kBAIGC,UAJH;AAAA;AAAA,mBAMPZ,SAAS,CAAC,YAAM;AACpBD,cAAAA,KAAK,CACFc,IADH,WAEOV,iBAFP,sBAGI;AACEW,gBAAAA,OAAO,EAAET;AADX,eAHJ,EAMI;AACEU,gBAAAA,OAAO,EAAE;AACPC,kBAAAA,MAAM,EAAE,kBADD;AAEPC,kBAAAA,aAAa,mBAAYX,IAAI,CAACY,KAAjB;AAFN;AADX,eANJ,EAaGC,IAbH,CAaQ,UAACC,QAAD,EAAc;AAClBZ,gBAAAA,OAAO,CAACY,QAAQ,CAACC,IAAV,CAAP;AACAX,gBAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,gBAAAA,UAAU,CAAC,KAAD,CAAV;AACD,eAjBH,WAkBS,YAAM;AACXF,gBAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,gBAAAA,UAAU,CAAC,IAAD,CAAV;AACD,eArBH;AAsBD,aAvBc,EAuBZ,EAvBY,CANF;;AAAA;AAAA,6CA+BN;AAAEL,cAAAA,IAAI,EAAJA,IAAF;AAAQC,cAAAA,OAAO,EAAPA,OAAR;AAAiBC,cAAAA,SAAS,EAATA,SAAjB;AAA4BE,cAAAA,OAAO,EAAPA;AAA5B,aA/BM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;YACET,a","sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport useLocalState from \"../../custom-hooks/useLocalState\";\nimport ITest from \"../../Models/ITest\";\nimport { local_backend_url } from \"../../url\";\n\nexport default async function useStartTest(id: number) {\n  const [user] = useLocalState(\"user\", \"\");\n  const [test, setTest] = useState<ITest | {}>({});\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [isError, setIsError] = useState<boolean>(true);\n\n  await useEffect(() => {\n    axios\n      .post(\n        `${local_backend_url}/api/test/start`,\n        {\n          quiz_id: id,\n        },\n        {\n          headers: {\n            Accept: \"Application/json\",\n            Authorization: `Bearer ${user.token}`,\n          },\n        }\n      )\n      .then((response) => {\n        setTest(response.data);\n        setIsLoading(false);\n        setIsError(false);\n      })\n      .catch(() => {\n        setIsLoading(false);\n        setIsError(true);\n      });\n  }, []);\n\n  return { test, setTest, isLoading, isError };\n}\n"]},"metadata":{},"sourceType":"module"}