{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ishraqkabir/workspace/smartifier-frontend/Components/Post/SinglePost/PostBody/PostBody.tsx\";\nimport React from \"react\";\nimport parse from \"html-react-parser\";\nimport PostBodyImage from \"./PostBodyImage/PostBodyImage\";\nconst options = {\n  replace: ({\n    attribs,\n    children\n  }) => {\n    console.log(children);\n    let image;\n\n    if (children) {\n      children.forEach(child => {\n        if (child.name == \"img\") {\n          //   console.log(\"image\");\n          //   child.attribs.src = `${backend_url}${child.attribs.src}`;\n          console.log(\"returning\");\n          console.log(child);\n          console.log(attribs);\n          image = /*#__PURE__*/_jsxDEV(PostBodyImage, {\n            src: child.attribs.src\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 19\n          }, this);\n        }\n      });\n    }\n\n    if (image) return image;\n    console.log(attribs);\n  }\n};\n\nconst PostBody = ({\n  body\n}) => {\n  const el = parse(`${body}`, options);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: el\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 10\n  }, this);\n};\n\nexport default PostBody;","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/Post/SinglePost/PostBody/PostBody.tsx"],"names":["React","parse","PostBodyImage","options","replace","attribs","children","console","log","image","forEach","child","name","src","PostBody","body","el"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,KAAP,MAA8C,mBAA9C;AAGA,OAAOC,aAAP,MAA0B,+BAA1B;AAEA,MAAMC,OAA+B,GAAG;AACtCC,EAAAA,OAAO,EAAE,CAAC;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAD,KAAgC;AACvCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,QAAIG,KAAJ;;AACA,QAAIH,QAAJ,EAAc;AACZA,MAAAA,QAAQ,CAACI,OAAT,CAAkBC,KAAD,IAAW;AAC1B,YAAIA,KAAK,CAACC,IAAN,IAAc,KAAlB,EAAyB;AACvB;AACA;AACAL,UAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAD,UAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACAJ,UAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACAI,UAAAA,KAAK,gBAAG,QAAC,aAAD;AAAe,YAAA,GAAG,EAAEE,KAAK,CAACN,OAAN,CAAcQ;AAAlC;AAAA;AAAA;AAAA;AAAA,kBAAR;AACD;AACF,OATD;AAUD;;AACD,QAAIJ,KAAJ,EAAW,OAAOA,KAAP;AACXF,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACD;AAlBqC,CAAxC;;AAyBA,MAAMS,QAA0B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC/C,QAAMC,EAAE,GAAGf,KAAK,CAAE,GAAEc,IAAK,EAAT,EAAYZ,OAAZ,CAAhB;AAEA,sBAAO;AAAA,cAAMa;AAAN;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAJD;;AAMA,eAAeF,QAAf","sourcesContent":["import React from \"react\";\n\nimport parse, { HTMLReactParserOptions } from \"html-react-parser\";\nimport { Element } from \"domhandler/lib/node\";\nimport { backend_url } from \"../../../../url\";\nimport PostBodyImage from \"./PostBodyImage/PostBodyImage\";\n\nconst options: HTMLReactParserOptions = {\n  replace: ({ attribs, children }: any) => {\n    console.log(children);\n    let image;\n    if (children) {\n      children.forEach((child) => {\n        if (child.name == \"img\") {\n          //   console.log(\"image\");\n          //   child.attribs.src = `${backend_url}${child.attribs.src}`;\n          console.log(\"returning\");\n          console.log(child)\n          console.log(attribs)\n          image = <PostBodyImage src={child.attribs.src}/>\n        }\n      });\n    }\n    if (image) return image;\n    console.log(attribs);\n  },\n};\n\ninterface IProps {\n  body: string;\n}\n\nconst PostBody: React.FC<IProps> = ({ body }) => {\n  const el = parse(`${body}`, options);\n\n  return <div>{el}</div>;\n};\n\nexport default PostBody;\n"]},"metadata":{},"sourceType":"module"}