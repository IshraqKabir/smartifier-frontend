{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nimport { backend_url } from \"../../url\";\nexport default function startTest(_x, _x2) {\n  return _startTest.apply(this, arguments);\n}\n\nfunction _startTest() {\n  _startTest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(quizId, token) {\n    var quizStatus;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (quizId) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            _context.next = 4;\n            return axios.post(\"\".concat(backend_url, \"/api/quiz-test/start\"), {\n              quiz_id: quizId\n            }, {\n              headers: {\n                Authorization: \"Bearer \".concat(token)\n              }\n            }).then(function (response) {\n              return response.data;\n            });\n\n          case 4:\n            quizStatus = _context.sent;\n            return _context.abrupt(\"return\", quizStatus);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _startTest.apply(this, arguments);\n}","map":null,"metadata":{},"sourceType":"module"}