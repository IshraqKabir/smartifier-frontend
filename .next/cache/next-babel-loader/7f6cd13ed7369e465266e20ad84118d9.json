{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useEffect } from \"react\";\nimport useLocalState from \"./useLocalState\";\nexport default function useOptionClicked(optionID, questionID, quizID, answerType) {\n  _s();\n\n  var _useLocalState = useLocalState(\"user\", \"\"),\n      _useLocalState2 = _slicedToArray(_useLocalState, 1),\n      user = _useLocalState2[0];\n\n  var _useLocalState3 = useLocalState(\"\".concat(user.email, \"-\").concat(quizID), {}),\n      _useLocalState4 = _slicedToArray(_useLocalState3, 2),\n      answers = _useLocalState4[0],\n      setAnswers = _useLocalState4[1];\n\n  var handleClick = function handleClick() {\n    console.log(\"\".concat(user.email, \" has clicked option: \").concat(optionID, \" of question: \").concat(questionID));\n    setAnswers(function (state) {\n      var tempAnswers = _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, \"\".concat(questionID), [optionID]));\n\n      return _objectSpread({}, tempAnswers);\n    });\n  };\n\n  useEffect(function () {\n    console.log(\"answer changed\");\n  }, [answers]);\n  return [handleClick];\n}\n\n_s(useOptionClicked, \"BAQonJ79s5JMzfkT+x98Ul1uMzM=\", false, function () {\n  return [useLocalState, useLocalState];\n});","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/custom-hooks/useOptionClicked.ts"],"names":["useEffect","useLocalState","useOptionClicked","optionID","questionID","quizID","answerType","user","email","answers","setAnswers","handleClick","console","log","state","tempAnswers"],"mappings":";;;;;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAIA,eAAe,SAASC,gBAAT,CACbC,QADa,EAEbC,UAFa,EAGbC,MAHa,EAIbC,UAJa,EAKb;AAAA;;AAAA,uBACeL,aAAa,CAAC,MAAD,EAAS,EAAT,CAD5B;AAAA;AAAA,MACOM,IADP;;AAAA,wBAE8BN,aAAa,WAAIM,IAAI,CAACC,KAAT,cAAkBH,MAAlB,GAA4B,EAA5B,CAF3C;AAAA;AAAA,MAEOI,OAFP;AAAA,MAEgBC,UAFhB;;AAIA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBC,IAAAA,OAAO,CAACC,GAAR,WACKN,IAAI,CAACC,KADV,kCACuCL,QADvC,2BACgEC,UADhE;AAIAM,IAAAA,UAAU,CAAC,UAACI,KAAD,EAAW;AACpB,UAAMC,WAAW,mCAAQD,KAAR,qCAAmBV,UAAnB,GAAkC,CAACD,QAAD,CAAlC,EAAjB;;AACA,+BAAYY,WAAZ;AACD,KAHS,CAAV;AAID,GATD;;AAWAf,EAAAA,SAAS,CAAC,YAAM;AACdY,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD,GAFQ,EAEN,CAACJ,OAAD,CAFM,CAAT;AAIA,SAAO,CAACE,WAAD,CAAP;AACD;;GAzBuBT,gB;UAMPD,a,EACeA,a","sourcesContent":["import { useEffect } from \"react\";\nimport useLocalState from \"./useLocalState\";\n\ntype answerType = \"multiple_choice\" | \"checkboxes\";\n\nexport default function useOptionClicked(\n  optionID: number,\n  questionID: number,\n  quizID: number,\n  answerType: answerType\n) {\n  const [user] = useLocalState(\"user\", \"\");\n  const [answers, setAnswers] = useLocalState(`${user.email}-${quizID}`, {});\n\n  const handleClick = () => {\n    console.log(\n      `${user.email} has clicked option: ${optionID} of question: ${questionID}`\n    );\n\n    setAnswers((state) => {\n      const tempAnswers = { ...state, [`${questionID}`]: [optionID] };\n      return { ...tempAnswers };\n    });\n  };\n\n  useEffect(() => {\n    console.log(\"answer changed\");\n  }, [answers]);\n\n  return [handleClick];\n}\n"]},"metadata":{},"sourceType":"module"}