{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ishraqkabir/workspace/smartifier-frontend/Components/QuizTest/Timer/Timer.tsx\",\n    _this = this;\n\nimport React from \"react\";\n\nvar Timer = function Timer(_ref) {\n  var start_time = _ref.start_time,\n      duration = _ref.duration;\n  return /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 10\n  }, _this);\n};\n\n_c = Timer;\nexport default Timer;\n\nfunction getTimeRemainingInSeconds(start_time, duration) {\n  var totalSeconds = getSecondsFromDuration(duration);\n  var start = new Date(\"\".concat(start_time));\n  var now = new Date();\n  var end = new Date(\"\".concat(start_time));\n  end.setTime(start);\n}\n\nfunction getSecondsFromDuration(duration) {\n  var _duration$split = duration.split(\":\"),\n      _duration$split2 = _slicedToArray(_duration$split, 3),\n      hours = _duration$split2[0],\n      mins = _duration$split2[1],\n      seconds = _duration$split2[2];\n\n  var totalSeconds = 0;\n  totalSeconds += parseInt(hours) * 60 * 60;\n  totalSeconds += parseInt(mins) * 60 * 60;\n  totalSeconds += parseInt(seconds);\n  return totalSeconds;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/QuizTest/Timer/Timer.tsx"],"names":["React","Timer","start_time","duration","getTimeRemainingInSeconds","totalSeconds","getSecondsFromDuration","start","Date","now","end","setTime","split","hours","mins","seconds","parseInt"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAA2C,OAA3C;;AAOA,IAAMC,KAAuB,GAAG,SAA1BA,KAA0B,OAA8B;AAAA,MAA3BC,UAA2B,QAA3BA,UAA2B;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAC5D,sBAAO;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CAFD;;KAAMF,K;AAIN,eAAeA,KAAf;;AAEA,SAASG,yBAAT,CAAmCF,UAAnC,EAAuDC,QAAvD,EAAyE;AACvE,MAAME,YAAoB,GAAGC,sBAAsB,CAACH,QAAD,CAAnD;AAEA,MAAMI,KAAK,GAAG,IAAIC,IAAJ,WAAYN,UAAZ,EAAd;AACA,MAAMO,GAAG,GAAG,IAAID,IAAJ,EAAZ;AACA,MAAME,GAAG,GAAG,IAAIF,IAAJ,WAAYN,UAAZ,EAAZ;AACAQ,EAAAA,GAAG,CAACC,OAAJ,CAAYJ,KAAZ;AACD;;AAED,SAASD,sBAAT,CAAgCH,QAAhC,EAA0D;AAAA,wBACzBA,QAAQ,CAACS,KAAT,CAAe,GAAf,CADyB;AAAA;AAAA,MACjDC,KADiD;AAAA,MAC1CC,IAD0C;AAAA,MACpCC,OADoC;;AAGxD,MAAIV,YAAoB,GAAG,CAA3B;AACAA,EAAAA,YAAY,IAAIW,QAAQ,CAACH,KAAD,CAAR,GAAkB,EAAlB,GAAuB,EAAvC;AACAR,EAAAA,YAAY,IAAIW,QAAQ,CAACF,IAAD,CAAR,GAAiB,EAAjB,GAAsB,EAAtC;AACAT,EAAAA,YAAY,IAAIW,QAAQ,CAACD,OAAD,CAAxB;AAEA,SAAOV,YAAP;AACD","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\ninterface IProps {\n  start_time: string;\n  duration: string;\n}\n\nconst Timer: React.FC<IProps> = ({ start_time, duration }) => {\n  return <p></p>;\n};\n\nexport default Timer;\n\nfunction getTimeRemainingInSeconds(start_time: string, duration: string) {\n  const totalSeconds: number = getSecondsFromDuration(duration);\n\n  const start = new Date(`${start_time}`);\n  const now = new Date();\n  const end = new Date(`${start_time}`);\n  end.setTime(start)\n}\n\nfunction getSecondsFromDuration(duration: string): number {\n  const [hours, mins, seconds] = duration.split(\":\");\n\n  let totalSeconds: number = 0;\n  totalSeconds += parseInt(hours) * 60 * 60;\n  totalSeconds += parseInt(mins) * 60 * 60;\n  totalSeconds += parseInt(seconds);\n\n  return totalSeconds;\n}\n"]},"metadata":{},"sourceType":"module"}