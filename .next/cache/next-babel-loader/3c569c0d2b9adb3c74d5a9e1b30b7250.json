{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ishraqkabir/workspace/smartifier-frontend/Components/Posts/PostsList/Post/Post.tsx\";\nimport { Divider, makeStyles, Typography, withStyles } from \"@material-ui/core\";\nimport React from \"react\";\nconst colors = [\"#97A5B8\", \"#9C95FD\", \"#F493FF\", \"#28E36E\", \"#FFE533\"];\nconst useStyles = makeStyles({\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  topic: {\n    color: \"white\",\n    cursor: \"pointer\",\n    width: 206,\n    borderRadius: 10,\n    textAlign: \"center\",\n    textTransform: \"capitalize\",\n    paddingBlock: 3,\n    backgroundColor: props => {\n      const {\n        position\n      } = props;\n\n      if (position > colors.length) {\n        return colors[position % colors.length];\n      }\n\n      return colors[position];\n    },\n    whiteSpace: \"nowrap\",\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    paddingInline: 3\n  },\n  postTitle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    width: \"100%\"\n  },\n  bottomContainer: {\n    display: \"flex\"\n  }\n});\n\nconst Post = ({\n  post,\n  position\n}) => {\n  const classes = useStyles({\n    position\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.topic,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: post.topic[0].name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.postTitle,\n        children: [/*#__PURE__*/_jsxDEV(PostTitle, {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PostAuthor, {\n          variant: \"subtitle2\",\n          children: [\"by \", post.user.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PostSummary, {\n        children: `${post.summary.substr(0, 1000)} [...][...]`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.bottomContainer,\n      children: /*#__PURE__*/_jsxDEV(ReadTime, {\n        variant: \"subtitle2\",\n        children: post.read_time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostDivider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Post;\nconst PostTitle = withStyles({\n  root: {\n    color: \"#3798A7\",\n    fontSize: 30,\n    marginBlock: 15,\n    textTransform: \"capitalize\",\n    cursor: \"pointer\"\n  }\n})(Typography);\nconst PostSummary = withStyles({\n  root: {\n    color: \"#686868\",\n    fontSize: 15,\n    textTransform: \"capitalize\",\n    cursor: \"pointer\",\n    paddingRight: \"10%\"\n  }\n})(Typography);\nconst PostAuthor = withStyles({\n  root: {\n    whiteSpace: \"nowrap\",\n    color: \"#C5C5C5\",\n    marginLeft: \"auto\",\n    marginTop: 10\n  }\n})(Typography);\nconst ReadTime = withStyles({\n  root: {\n    whiteSpace: \"nowrap\",\n    color: \"#C5C5C5\",\n    marginLeft: \"auto\",\n    marginTop: 10\n  }\n})(Typography);\nconst PostDivider = withStyles({\n  root: {\n    marginTop: 10\n  }\n})(Divider);","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/Posts/PostsList/Post/Post.tsx"],"names":["Divider","makeStyles","Typography","withStyles","React","colors","useStyles","container","display","flexDirection","topic","color","cursor","width","borderRadius","textAlign","textTransform","paddingBlock","backgroundColor","props","position","length","whiteSpace","overflow","textOverflow","paddingInline","postTitle","alignItems","bottomContainer","Post","post","classes","name","title","user","summary","substr","read_time","PostTitle","root","fontSize","marginBlock","PostSummary","paddingRight","PostAuthor","marginLeft","marginTop","ReadTime","PostDivider"],"mappings":"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","sourcesContent":["import { Divider, makeStyles, Typography, withStyles } from \"@material-ui/core\";\nimport React from \"react\";\nimport IPost from \"../../../../Models/IPost\";\nimport Tags from \"./Tags/Tags\";\n\ninterface IProps {\n  post: IPost;\n  position: number;\n}\n\nconst colors: string[] = [\n  \"#97A5B8\",\n  \"#9C95FD\",\n  \"#F493FF\",\n  \"#28E36E\",\n  \"#FFE533\",\n];\n\nconst useStyles = makeStyles({\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  topic: {\n    color: \"white\",\n    cursor: \"pointer\",\n    width: 206,\n    borderRadius: 10,\n    textAlign: \"center\",\n    textTransform: \"capitalize\",\n    paddingBlock: 3,\n    backgroundColor: (props: { position: number }) => {\n      const { position } = props;\n      if (position > colors.length) {\n        return colors[position % colors.length];\n      }\n      return colors[position];\n    },\n    whiteSpace: \"nowrap\",\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    paddingInline: 3,\n  },\n  postTitle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    width: \"100%\",\n  },\n  bottomContainer: {\n    display: \"flex\",\n  },\n});\n\nconst Post: React.FC<IProps> = ({ post, position }) => {\n  const classes = useStyles({ position });\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.topic}>\n        <Typography>{post.topic[0].name}</Typography>\n      </div>\n      <div>\n        <div className={classes.postTitle}>\n          <PostTitle>{post.title}</PostTitle>\n          <PostAuthor variant=\"subtitle2\">by {post.user.name}</PostAuthor>\n        </div>\n        <PostSummary>{`${post.summary.substr(\n          0,\n          1000\n        )} [...][...]`}</PostSummary>\n      </div>\n      <div className={classes.bottomContainer}>\n        {}\n        <ReadTime variant=\"subtitle2\">{post.read_time}</ReadTime>\n      </div>\n      <PostDivider />\n    </div>\n  );\n};\n\nexport default Post;\n\nconst PostTitle = withStyles({\n  root: {\n    color: \"#3798A7\",\n    fontSize: 30,\n    marginBlock: 15,\n    textTransform: \"capitalize\",\n    cursor: \"pointer\",\n  },\n})(Typography);\n\nconst PostSummary = withStyles({\n  root: {\n    color: \"#686868\",\n    fontSize: 15,\n    textTransform: \"capitalize\",\n    cursor: \"pointer\",\n    paddingRight: \"10%\",\n  },\n})(Typography);\n\nconst PostAuthor = withStyles({\n  root: {\n    whiteSpace: \"nowrap\",\n    color: \"#C5C5C5\",\n    marginLeft: \"auto\",\n    marginTop: 10,\n  },\n})(Typography);\n\nconst ReadTime = withStyles({\n  root: {\n    whiteSpace: \"nowrap\",\n    color: \"#C5C5C5\",\n    marginLeft: \"auto\",\n    marginTop: 10,\n  },\n})(Typography);\n\nconst PostDivider = withStyles({\n  root: {\n    marginTop: 10,\n  },\n})(Divider);\n"]},"metadata":{},"sourceType":"module"}