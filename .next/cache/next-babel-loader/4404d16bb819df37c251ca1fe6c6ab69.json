{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport useLocalState from \"./useLocalState\";\nexport default function useOptionClicked(optionID, questionID, quizID, answerType) {\n  const [user] = useLocalState(\"user\", \"\");\n  const [answers, setAnswers] = useLocalState(`${user.email}-${quizID}`, {});\n\n  const handleClick = () => {\n    console.log(`${user.email} has clicked option: ${optionID} of question: ${questionID}`);\n    setAnswers(state => {\n      const quizQuestionAnswers = _objectSpread({}, state);\n\n      let question = quizQuestionAnswers[`${questionID}`];\n\n      if (question) {\n        quizQuestionAnswers[`${questionID}`] = [];\n        question = quizQuestionAnswers[`${questionID}`];\n      }\n\n      question = [`${optionID}`];\n      return _objectSpread(_objectSpread({}, question), {}, {\n        quizQuestionAnswers\n      });\n    });\n    console.log(answers);\n  };\n\n  return [handleClick];\n}","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/custom-hooks/useOptionClicked.ts"],"names":["useLocalState","useOptionClicked","optionID","questionID","quizID","answerType","user","answers","setAnswers","email","handleClick","console","log","state","quizQuestionAnswers","question"],"mappings":";;;;;;AAAA,OAAOA,aAAP,MAA0B,iBAA1B;AAIA,eAAe,SAASC,gBAAT,CACbC,QADa,EAEbC,UAFa,EAGbC,MAHa,EAIbC,UAJa,EAKb;AACA,QAAM,CAACC,IAAD,IAASN,aAAa,CAAC,MAAD,EAAS,EAAT,CAA5B;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,aAAa,CAAE,GAAEM,IAAI,CAACG,KAAM,IAAGL,MAAO,EAAzB,EAA4B,EAA5B,CAA3C;;AAEA,QAAMM,WAAW,GAAG,MAAM;AACxBC,IAAAA,OAAO,CAACC,GAAR,CACG,GAAEN,IAAI,CAACG,KAAM,wBAAuBP,QAAS,iBAAgBC,UAAW,EAD3E;AAGAK,IAAAA,UAAU,CAAEK,KAAD,IAAW;AACpB,YAAMC,mBAAmB,qBAAQD,KAAR,CAAzB;;AAEA,UAAIE,QAAQ,GAAGD,mBAAmB,CAAE,GAAEX,UAAW,EAAf,CAAlC;;AAEA,UAAIY,QAAJ,EAAc;AACZD,QAAAA,mBAAmB,CAAE,GAAEX,UAAW,EAAf,CAAnB,GAAuC,EAAvC;AACAY,QAAAA,QAAQ,GAAGD,mBAAmB,CAAE,GAAEX,UAAW,EAAf,CAA9B;AACD;;AAEDY,MAAAA,QAAQ,GAAG,CAAE,GAAEb,QAAS,EAAb,CAAX;AAEA,6CACKa,QADL;AAEED,QAAAA;AAFF;AAID,KAhBS,CAAV;AAiBAH,IAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACD,GAtBD;;AAwBA,SAAO,CAACG,WAAD,CAAP;AACD","sourcesContent":["import useLocalState from \"./useLocalState\";\n\ntype answerType = \"multiple_choice\" | \"checkboxes\";\n\nexport default function useOptionClicked(\n  optionID: number,\n  questionID: number,\n  quizID: number,\n  answerType: answerType\n) {\n  const [user] = useLocalState(\"user\", \"\");\n  const [answers, setAnswers] = useLocalState(`${user.email}-${quizID}`, {});\n\n  const handleClick = () => {\n    console.log(\n      `${user.email} has clicked option: ${optionID} of question: ${questionID}`\n    );\n    setAnswers((state) => {\n      const quizQuestionAnswers = { ...state };\n\n      let question = quizQuestionAnswers[`${questionID}`];\n\n      if (question) {\n        quizQuestionAnswers[`${questionID}`] = [];\n        question = quizQuestionAnswers[`${questionID}`];\n      }\n\n      question = [`${optionID}`];\n\n      return {\n        ...question,\n        quizQuestionAnswers,\n      };\n    });\n    console.log(answers);\n  };\n\n  return [handleClick];\n}\n"]},"metadata":{},"sourceType":"module"}