{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ishraqkabir/workspace/smartifier-frontend/Components/Post/SinglePost/CommentsSection/Comment/RepliesSection/ReplyBox/ReplyBox.tsx\";\nimport { Avatar, Box, CircularProgress, makeStyles, Snackbar, withStyles } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport Image from \"next/image\";\nimport axios from \"axios\";\nimport useLocalState from \"../../../../../../../custom-hooks/useLocalState\";\nimport { backend_url } from \"../../../../../../../url\";\nconst MAX_CHARACTER_COUNT = 200;\n\nconst ReplyBox = ({\n  commentId,\n  setReplies\n}) => {\n  const [user] = useLocalState(\"user\", \"\");\n  const {\n    0: reply,\n    1: setReply\n  } = useState(\"\");\n  const {\n    0: isSending,\n    1: setIsSending\n  } = useState(false);\n  const {\n    0: showLoginAlert,\n    1: setShowLoginAlert\n  } = useState(false);\n  const classes = useStyles({\n    reply\n  });\n\n  const handleSubmit = () => {\n    if (!user.token) {\n      showAlert();\n      return;\n    }\n\n    if (reply.length > MAX_CHARACTER_COUNT) return;\n\n    if (reply.length == 0) {\n      showAlert();\n      return;\n    }\n\n    postReply();\n  };\n\n  const handleChange = e => {\n    setReply(e.target.value);\n  };\n\n  const handleEnter = e => {\n    if (e.key === \"Enter\" && reply.length > 0) {\n      handleSubmit();\n    }\n  };\n\n  const postReply = () => {\n    setIsSending(true);\n    axios.post(`${backend_url}/api/comment/reply/store`, {\n      comment_id: commentId,\n      comment: reply\n    }, {\n      headers: {\n        Accept: \"application/json\",\n        Authorization: `Bearer ${user.token}`\n      }\n    }).then(response => {\n      setIsSending(false);\n      setReply(\"\");\n    });\n  };\n\n  const showAlert = () => {\n    setShowLoginAlert(true);\n    setTimeout(() => {\n      setShowLoginAlert(false);\n    }, 3000);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Avatar, {\n      src: user === null || user === void 0 ? void 0 : user.picture,\n      style: {\n        width: 35,\n        height: 35,\n        borderRadius: \"50%\",\n        marginRight: \"16px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: user ? \"Tell us what you think about this post!\" : \"Login to post a reply!\",\n        value: reply,\n        onChange: handleChange,\n        onKeyDown: handleEnter,\n        style: {\n          width: \"100%\",\n          padding: \"12px\",\n          marginRight: \"16px\",\n          border: \"1px solid black\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.charactersCount,\n        children: `${reply.length}/${MAX_CHARACTER_COUNT}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ImageContainer, {\n      children: isSending ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 25,\n        color: \"inherit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Image, {\n        src: `/assets/send_icon.svg`,\n        width: 25,\n        height: 25,\n        onClick: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoginAlert, {\n      anchorOrigin: {\n        vertical: \"top\",\n        horizontal: \"center\"\n      },\n      open: showLoginAlert,\n      message: !user.token ? \"Login To Post A Reply!\" : reply.length == 0 ? \"Reply Cannot Be Empty\" : \"Some Error Occurred\"\n    }, commentId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n\nexport default ReplyBox;\nconst Container = withStyles({\n  root: {\n    width: \"100%\",\n    display: \"flex\",\n    marginTop: \"1.5rem\",\n    alignItems: \"center\"\n  }\n})(Box);\nconst ImageContainer = withStyles({\n  root: {\n    display: \"inline-flex\",\n    width: 35,\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    cursor: \"pointer\"\n  }\n})(Box);\nconst InputContainer = withStyles({\n  root: {\n    position: \"relative\",\n    display: \"flex\",\n    alignItems: \"center\",\n    width: \"100%\"\n  }\n})(Box);\nconst useStyles = makeStyles({\n  charactersCount: {\n    position: \"absolute\",\n    bottom: -22,\n    right: 20,\n    fontSize: \"0.8rem\",\n    fontWeight: 700,\n    color: props => {\n      const {\n        reply\n      } = props;\n\n      if (reply.length > MAX_CHARACTER_COUNT) {\n        return \"red\";\n      }\n\n      return \"grey\";\n    }\n  }\n});\nconst LoginAlert = withStyles({\n  root: {\n    zIndex: 20000\n  }\n})(Snackbar);","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/Post/SinglePost/CommentsSection/Comment/RepliesSection/ReplyBox/ReplyBox.tsx"],"names":["Avatar","Box","CircularProgress","makeStyles","Snackbar","withStyles","React","useState","Image","axios","useLocalState","backend_url","MAX_CHARACTER_COUNT","ReplyBox","commentId","setReplies","user","reply","setReply","isSending","setIsSending","showLoginAlert","setShowLoginAlert","classes","useStyles","handleSubmit","token","showAlert","length","postReply","handleChange","e","target","value","handleEnter","key","post","comment_id","comment","headers","Accept","Authorization","then","response","setTimeout","picture","width","height","borderRadius","marginRight","padding","border","charactersCount","vertical","horizontal","Container","root","display","marginTop","alignItems","ImageContainer","justifyContent","cursor","InputContainer","position","bottom","right","fontSize","fontWeight","color","props","LoginAlert","zIndex"],"mappings":"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","sourcesContent":["import {\n  Avatar,\n  Box,\n  CircularProgress,\n  makeStyles,\n  Snackbar,\n  withStyles,\n} from \"@material-ui/core\";\nimport React, { useContext, useState } from \"react\";\n\nimport Image from \"next/image\";\nimport axios from \"axios\";\nimport useLocalState from \"../../../../../../../custom-hooks/useLocalState\";\nimport { backend_url } from \"../../../../../../../url\";\n\ninterface IProps {\n  commentId: string;\n  setReplies: Function;\n}\n\nconst MAX_CHARACTER_COUNT = 200;\n\nconst ReplyBox: React.FC<IProps> = ({ commentId, setReplies }) => {\n  const [user] = useLocalState(\"user\", \"\");\n  const [reply, setReply] = useState<string>(\"\");\n  const [isSending, setIsSending] = useState<boolean>(false);\n  const [showLoginAlert, setShowLoginAlert] = useState<boolean>(false);\n\n  const classes = useStyles({ reply });\n\n  const handleSubmit = () => {\n    if (!user.token) {\n      showAlert();\n      return;\n    }\n\n    if (reply.length > MAX_CHARACTER_COUNT) return;\n    if (reply.length == 0) {\n      showAlert();\n      return;\n    }\n\n    postReply();\n  };\n\n  const handleChange = (e: any) => {\n    setReply(e.target.value);\n  };\n\n  const handleEnter = (e: any) => {\n    if (e.key === \"Enter\" && reply.length > 0) {\n      handleSubmit();\n    }\n  };\n\n  const postReply = () => {\n    setIsSending(true);\n    axios\n      .post(\n        `${backend_url}/api/comment/reply/store`,\n        {\n          comment_id: commentId,\n          comment: reply,\n        },\n        {\n          headers: {\n            Accept: \"application/json\",\n            Authorization: `Bearer ${user.token}`,\n          },\n        }\n      )\n      .then((response) => {\n        setIsSending(false);\n\n        \n\n        setReply(\"\");\n      });\n  };\n\n  const showAlert = () => {\n    setShowLoginAlert(true);\n    setTimeout(() => {\n      setShowLoginAlert(false);\n    }, 3000);\n  };\n\n  return (\n    <Container>\n      <Avatar\n        src={user?.picture}\n        style={{\n          width: 35,\n          height: 35,\n          borderRadius: \"50%\",\n          marginRight: \"16px\",\n        }}\n      />\n      <InputContainer>\n        <input\n          type=\"text\"\n          placeholder={\n            user\n              ? \"Tell us what you think about this post!\"\n              : \"Login to post a reply!\"\n          }\n          value={reply}\n          onChange={handleChange}\n          onKeyDown={handleEnter}\n          style={{\n            width: \"100%\",\n            padding: \"12px\",\n            marginRight: \"16px\",\n            border: \"1px solid black\",\n          }}\n        />\n        <div\n          className={classes.charactersCount}\n        >{`${reply.length}/${MAX_CHARACTER_COUNT}`}</div>\n      </InputContainer>\n      <ImageContainer>\n        {isSending ? (\n          <CircularProgress size={25} color=\"inherit\" />\n        ) : (\n          <Image\n            src={`/assets/send_icon.svg`}\n            width={25}\n            height={25}\n            onClick={handleSubmit}\n          />\n        )}\n      </ImageContainer>\n\n      <LoginAlert\n        key={commentId}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n        open={showLoginAlert}\n        message={\n          !user.token\n            ? \"Login To Post A Reply!\"\n            : reply.length == 0\n            ? \"Reply Cannot Be Empty\"\n            : \"Some Error Occurred\"\n        }\n      />\n    </Container>\n  );\n};\n\nexport default ReplyBox;\n\nconst Container = withStyles({\n  root: {\n    width: \"100%\",\n    display: \"flex\",\n    marginTop: \"1.5rem\",\n    alignItems: \"center\",\n  },\n})(Box);\n\nconst ImageContainer = withStyles({\n  root: {\n    display: \"inline-flex\",\n    width: 35,\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    cursor: \"pointer\",\n  },\n})(Box);\n\nconst InputContainer = withStyles({\n  root: {\n    position: \"relative\",\n    display: \"flex\",\n    alignItems: \"center\",\n    width: \"100%\",\n  },\n})(Box);\n\nconst useStyles = makeStyles({\n  charactersCount: {\n    position: \"absolute\",\n    bottom: -22,\n    right: 20,\n    fontSize: \"0.8rem\",\n    fontWeight: 700,\n    color: (props: { reply: string }) => {\n      const { reply } = props;\n      if (reply.length > MAX_CHARACTER_COUNT) {\n        return \"red\";\n      }\n\n      return \"grey\";\n    },\n  },\n});\n\nconst LoginAlert = withStyles({\n  root: {\n    zIndex: 20000,\n  },\n})(Snackbar);\n"]},"metadata":{},"sourceType":"module"}