{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ishraqkabir/workspace/smartifier-frontend/Components/QuizTest/Questions/Question/Question.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Slide, withStyles } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nexport default function Question(_ref) {\n  _s();\n\n  var question = _ref.question,\n      currentQuestionIndex = _ref.currentQuestionIndex,\n      index = _ref.index;\n\n  var _useState = useState(index == currentQuestionIndex),\n      isVisible = _useState[0],\n      setIsVisible = _useState[1];\n\n  var _useState2 = useState(\"right\"),\n      direction = _useState2[0],\n      setDirection = _useState2[1];\n\n  useEffect(function () {\n    // console.log(\n    //   `${question?.id} is ${\n    //     isVisible ? \"visible\" : \"not visible\"\n    //   } --- current: ${currentQuestionId}`\n    // );\n    if (currentQuestionIndex >= index) {\n      setDirection(\"left\");\n    } else {\n      setDirection(\"right\");\n    }\n\n    setIsVisible(index == currentQuestionIndex);\n  }, [currentQuestionIndex]);\n  return /*#__PURE__*/_jsxDEV(Slide, {\n    \"in\": isVisible,\n    direction: \"right\",\n    timeout: {\n      enter: 1500,\n      exit: 1500\n    },\n    mountOnEnter: true,\n    unmountOnExit: true,\n    children: isVisible ? /*#__PURE__*/_jsxDEV(Container, {\n      children: \"\".concat(question === null || question === void 0 ? void 0 : question.id, \".\").concat(question === null || question === void 0 ? void 0 : question.question)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Question, \"DoUlSKnW8Wkyy7ogja3JWUOWw2Q=\");\n\n_c = Question;\nvar Container = withStyles({\n  root: {\n    padding: \"0.5rem 1rem\"\n  }\n})(Box);\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/QuizTest/Questions/Question/Question.tsx"],"names":["Box","Slide","withStyles","useEffect","useState","Question","question","currentQuestionIndex","index","isVisible","setIsVisible","direction","setDirection","enter","exit","id","Container","root","padding"],"mappings":";;;;;AAAA,SAASA,GAAT,EAAcC,KAAd,EAAqBC,UAArB,QAAuC,mBAAvC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AASA,eAAe,SAASC,QAAT,OAIJ;AAAA;;AAAA,MAHTC,QAGS,QAHTA,QAGS;AAAA,MAFTC,oBAES,QAFTA,oBAES;AAAA,MADTC,KACS,QADTA,KACS;;AAAA,kBACyBJ,QAAQ,CAACI,KAAK,IAAID,oBAAV,CADjC;AAAA,MACFE,SADE;AAAA,MACSC,YADT;;AAAA,mBAEyBN,QAAQ,CAAmB,OAAnB,CAFjC;AAAA,MAEFO,SAFE;AAAA,MAESC,YAFT;;AAITT,EAAAA,SAAS,CAAC,YAAM;AACd;AACA;AACA;AACA;AACA;AACA,QAAII,oBAAoB,IAAIC,KAA5B,EAAmC;AACjCI,MAAAA,YAAY,CAAC,MAAD,CAAZ;AACD,KAFD,MAEO;AACLA,MAAAA,YAAY,CAAC,OAAD,CAAZ;AACD;;AAEDF,IAAAA,YAAY,CAACF,KAAK,IAAID,oBAAV,CAAZ;AACD,GAbQ,EAaN,CAACA,oBAAD,CAbM,CAAT;AAeA,sBACE,QAAC,KAAD;AACE,UAAIE,SADN;AAEE,IAAA,SAAS,EAAC,OAFZ;AAGE,IAAA,OAAO,EAAE;AAAEI,MAAAA,KAAK,EAAE,IAAT;AAAeC,MAAAA,IAAI,EAAE;AAArB,KAHX;AAIE,IAAA,YAAY,MAJd;AAKE,IAAA,aAAa,MALf;AAAA,cAOGL,SAAS,gBACR,QAAC,SAAD;AAAA,0BAAeH,QAAf,aAAeA,QAAf,uBAAeA,QAAQ,CAAES,EAAzB,cAA+BT,QAA/B,aAA+BA,QAA/B,uBAA+BA,QAAQ,CAAEA,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA,YADQ,gBAGR;AAAA;AAAA;AAAA;AAAA;AAVJ;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAtCuBD,Q;;KAAAA,Q;AAwCxB,IAAMW,SAAS,GAAGd,UAAU,CAAC;AAC3Be,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE;AADL;AADqB,CAAD,CAAV,CAIflB,GAJe,CAAlB","sourcesContent":["import { Box, Slide, withStyles } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport IQuestion from \"../../../../Models/IQuestion\";\n\ninterface IProps {\n  index: number;\n  question: IQuestion;\n  currentQuestionIndex: number;\n}\n\nexport default function Question({\n  question,\n  currentQuestionIndex,\n  index,\n}: IProps) {\n  const [isVisible, setIsVisible] = useState(index == currentQuestionIndex);\n  const [direction, setDirection] = useState<\"left\" | \"right\">(\"right\");\n\n  useEffect(() => {\n    // console.log(\n    //   `${question?.id} is ${\n    //     isVisible ? \"visible\" : \"not visible\"\n    //   } --- current: ${currentQuestionId}`\n    // );\n    if (currentQuestionIndex >= index) {\n      setDirection(\"left\");\n    } else {\n      setDirection(\"right\");\n    }\n\n    setIsVisible(index == currentQuestionIndex);\n  }, [currentQuestionIndex]);\n\n  return (\n    <Slide\n      in={isVisible}\n      direction=\"right\"\n      timeout={{ enter: 1500, exit: 1500 }}\n      mountOnEnter\n      unmountOnExit\n    >\n      {isVisible ? (\n        <Container>{`${question?.id}.${question?.question}`}</Container>\n      ) : (\n        <div></div>\n      )}\n    </Slide>\n  );\n}\n\nconst Container = withStyles({\n  root: {\n    padding: \"0.5rem 1rem\",\n  },\n})(Box);\n"]},"metadata":{},"sourceType":"module"}