{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ishraqkabir/workspace/smartifier-frontend/Components/QuizTest/Questions/Questions.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Typography, withStyles } from \"@material-ui/core\";\nimport { createContext } from \"react\";\nimport SingleQuestion from \"./SingleQuestion/SingleQuestion\";\nimport QuestionBottomBar from \"./QuestionBottomBar/QuestionBottomBar\";\nimport useTestState from \"./useTestState\";\nimport QuestionsProgressBar from \"./QuestionsProgressBar/QuestionsProgressBar\";\nexport var QuizTestStateContext = /*#__PURE__*/createContext(null);\nexport default function Questions(_ref) {\n  _s();\n\n  var _this = this;\n\n  var quizTitle = _ref.quizTitle,\n      questions = _ref.questions,\n      isAssessment = _ref.isAssessment,\n      quizId = _ref.quizId,\n      test = _ref.test,\n      duration = _ref.duration;\n\n  var _useTestState = useTestState(quizId, questions, test, duration),\n      answers = _useTestState.answers,\n      setAnswers = _useTestState.setAnswers,\n      currentQuestionIndex = _useTestState.currentQuestionIndex,\n      goToNextQuestion = _useTestState.goToNextQuestion,\n      goToPreviousQuestion = _useTestState.goToPreviousQuestion,\n      progress = _useTestState.progress,\n      showPrevious = _useTestState.showPrevious,\n      showNext = _useTestState.showNext,\n      timeRemaining = _useTestState.timeRemaining,\n      secondsRemaining = _useTestState.secondsRemaining;\n\n  return /*#__PURE__*/_jsxDEV(QuizTestStateContext.Provider, {\n    value: {\n      answers: answers,\n      setAnswers: setAnswers,\n      currentQuestionIndex: currentQuestionIndex,\n      goToNextQuestion: goToNextQuestion,\n      goToPreviousQuestion: goToPreviousQuestion,\n      showPrevious: showPrevious,\n      showNext: showNext,\n      questionCount: questions === null || questions === void 0 ? void 0 : questions.length,\n      timeRemaining: timeRemaining,\n      secondsRemaining: secondsRemaining\n    },\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: \"inherit\",\n          children: \"\".concat(quizTitle, \" \").concat(isAssessment ? \"assessment\" : \"quiz\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), questions && (questions === null || questions === void 0 ? void 0 : questions.map(function (question, index) {\n        return /*#__PURE__*/_jsxDEV(SingleQuestion, {\n          index: index,\n          question: question\n        }, question === null || question === void 0 ? void 0 : question.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, _this);\n      })), /*#__PURE__*/_jsxDEV(QuestionsProgressBar, {\n        progress: progress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(QuestionBottomBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Questions, \"KKm0IgWQnjZS8WSvB7v6Jyaoeog=\", false, function () {\n  return [useTestState];\n});\n\n_c = Questions;\nvar Container = withStyles({\n  root: {\n    backgroundColor: \"inherit\",\n    width: \"100%\",\n    borderRadius: 5,\n    overflow: \"hidden\",\n    boxShadow: \"0px 0px 8px 0px #2b579a\",\n    display: \"flex\",\n    flexDirection: \"column\"\n  }\n})(Box);\nvar outerContainer = withStyles({\n  root: {\n    width: \"min(97%, 700px)\",\n    display: \"flex\",\n    flexDirection: \"column\"\n  }\n})(Box);\nvar Header = withStyles({\n  root: {\n    width: \"100%\",\n    textAlign: \"center\",\n    color: \"white\",\n    padding: \"0.5rem 0\",\n    background: \"transparent linear-gradient(180deg, #003EAA 0%, #002461E0 100%) 0% 0% no-repeat padding-box\",\n    textTransform: \"capitalize\"\n  }\n})(Box);\n\nvar _c;\n\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/QuizTest/Questions/Questions.tsx"],"names":["Box","Typography","withStyles","createContext","SingleQuestion","QuestionBottomBar","useTestState","QuestionsProgressBar","QuizTestStateContext","Questions","quizTitle","questions","isAssessment","quizId","test","duration","answers","setAnswers","currentQuestionIndex","goToNextQuestion","goToPreviousQuestion","progress","showPrevious","showNext","timeRemaining","secondsRemaining","questionCount","length","map","question","index","id","Container","root","backgroundColor","width","borderRadius","overflow","boxShadow","display","flexDirection","outerContainer","Header","textAlign","color","padding","background","textTransform"],"mappings":";;;;;AAAA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,UAA1B,QAA4C,mBAA5C;AACA,SAASC,aAAT,QAA8B,OAA9B;AAEA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,iBAAP,MAA8B,uCAA9B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,oBAAP,MAAiC,6CAAjC;AAYA,OAAO,IAAMC,oBAAoB,gBAAGL,aAAa,CAAC,IAAD,CAA1C;AAEP,eAAe,SAASM,SAAT,OAOJ;AAAA;;AAAA;;AAAA,MANTC,SAMS,QANTA,SAMS;AAAA,MALTC,SAKS,QALTA,SAKS;AAAA,MAJTC,YAIS,QAJTA,YAIS;AAAA,MAHTC,MAGS,QAHTA,MAGS;AAAA,MAFTC,IAES,QAFTA,IAES;AAAA,MADTC,QACS,QADTA,QACS;;AAAA,sBAYLT,YAAY,CAACO,MAAD,EAASF,SAAT,EAAoBG,IAApB,EAA0BC,QAA1B,CAZP;AAAA,MAEPC,OAFO,iBAEPA,OAFO;AAAA,MAGPC,UAHO,iBAGPA,UAHO;AAAA,MAIPC,oBAJO,iBAIPA,oBAJO;AAAA,MAKPC,gBALO,iBAKPA,gBALO;AAAA,MAMPC,oBANO,iBAMPA,oBANO;AAAA,MAOPC,QAPO,iBAOPA,QAPO;AAAA,MAQPC,YARO,iBAQPA,YARO;AAAA,MASPC,QATO,iBASPA,QATO;AAAA,MAUPC,aAVO,iBAUPA,aAVO;AAAA,MAWPC,gBAXO,iBAWPA,gBAXO;;AAcT,sBACE,QAAC,oBAAD,CAAsB,QAAtB;AACE,IAAA,KAAK,EAAE;AACLT,MAAAA,OAAO,EAAPA,OADK;AAELC,MAAAA,UAAU,EAAVA,UAFK;AAGLC,MAAAA,oBAAoB,EAApBA,oBAHK;AAILC,MAAAA,gBAAgB,EAAhBA,gBAJK;AAKLC,MAAAA,oBAAoB,EAApBA,oBALK;AAMLE,MAAAA,YAAY,EAAZA,YANK;AAOLC,MAAAA,QAAQ,EAARA,QAPK;AAQLG,MAAAA,aAAa,EAAEf,SAAF,aAAEA,SAAF,uBAAEA,SAAS,CAAEgB,MARrB;AASLH,MAAAA,aAAa,EAAbA,aATK;AAULC,MAAAA,gBAAgB,EAAhBA;AAVK,KADT;AAAA,2BAcE,QAAC,SAAD;AAAA,8BACE,QAAC,MAAD;AAAA,+BACE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAyB,UAAA,KAAK,EAAC,SAA/B;AAAA,8BACMf,SADN,cACmBE,YAAY,GAAG,YAAH,GAAkB,MADjD;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,EAMGD,SAAS,KACRA,SADQ,aACRA,SADQ,uBACRA,SAAS,CAAEiB,GAAX,CAAe,UAACC,QAAD,EAAWC,KAAX,EAAqB;AAClC,4BACE,QAAC,cAAD;AAEE,UAAA,KAAK,EAAEA,KAFT;AAGE,UAAA,QAAQ,EAAED;AAHZ,WACOA,QADP,aACOA,QADP,uBACOA,QAAQ,CAAEE,EADjB;AAAA;AAAA;AAAA;AAAA,iBADF;AAOD,OARD,CADQ,CANZ,eAgBE,QAAC,oBAAD;AAAsB,QAAA,QAAQ,EAAEV;AAAhC;AAAA;AAAA;AAAA;AAAA,cAhBF,eAiBE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAdF;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD;;GAzDuBZ,S;UAmBlBH,Y;;;KAnBkBG,S;AA2DxB,IAAMuB,SAAS,GAAG9B,UAAU,CAAC;AAC3B+B,EAAAA,IAAI,EAAE;AACJC,IAAAA,eAAe,EAAE,SADb;AAEJC,IAAAA,KAAK,EAAE,MAFH;AAGJC,IAAAA,YAAY,EAAE,CAHV;AAIJC,IAAAA,QAAQ,EAAE,QAJN;AAKJC,IAAAA,SAAS,EAAE,yBALP;AAMJC,IAAAA,OAAO,EAAE,MANL;AAOJC,IAAAA,aAAa,EAAE;AAPX;AADqB,CAAD,CAAV,CAUfxC,GAVe,CAAlB;AAYA,IAAMyC,cAAc,GAAGvC,UAAU,CAAC;AAChC+B,EAAAA,IAAI,EAAE;AACJE,IAAAA,KAAK,EAAE,iBADH;AAEJI,IAAAA,OAAO,EAAE,MAFL;AAGJC,IAAAA,aAAa,EAAE;AAHX;AAD0B,CAAD,CAAV,CAMpBxC,GANoB,CAAvB;AAQA,IAAM0C,MAAM,GAAGxC,UAAU,CAAC;AACxB+B,EAAAA,IAAI,EAAE;AACJE,IAAAA,KAAK,EAAE,MADH;AAEJQ,IAAAA,SAAS,EAAE,QAFP;AAGJC,IAAAA,KAAK,EAAE,OAHH;AAIJC,IAAAA,OAAO,EAAE,UAJL;AAKJC,IAAAA,UAAU,EACR,6FANE;AAOJC,IAAAA,aAAa,EAAE;AAPX;AADkB,CAAD,CAAV,CAUZ/C,GAVY,CAAf","sourcesContent":["import { Box, Typography, withStyles } from \"@material-ui/core\";\nimport { createContext } from \"react\";\nimport IQuestion from \"../../../Models/IQuestion\";\nimport SingleQuestion from \"./SingleQuestion/SingleQuestion\";\nimport QuestionBottomBar from \"./QuestionBottomBar/QuestionBottomBar\";\nimport useTestState from \"./useTestState\";\nimport QuestionsProgressBar from \"./QuestionsProgressBar/QuestionsProgressBar\";\nimport QuestionCountAndTimer from \"./QuestionBottomBar/QuestionCountAndTimer/QuestionCountAndTimer\";\n\ninterface IProps {\n  quizTitle: String;\n  questions: IQuestion[];\n  isAssessment: boolean;\n  quizId: number;\n  test: any;\n  duration: string;\n}\n\nexport const QuizTestStateContext = createContext(null);\n\nexport default function Questions({\n  quizTitle,\n  questions,\n  isAssessment,\n  quizId,\n  test,\n  duration,\n}: IProps) {\n  const {\n    answers,\n    setAnswers,\n    currentQuestionIndex,\n    goToNextQuestion,\n    goToPreviousQuestion,\n    progress,\n    showPrevious,\n    showNext,\n    timeRemaining,\n    secondsRemaining,\n  } = useTestState(quizId, questions, test, duration);\n\n  return (\n    <QuizTestStateContext.Provider\n      value={{\n        answers,\n        setAnswers,\n        currentQuestionIndex,\n        goToNextQuestion,\n        goToPreviousQuestion,\n        showPrevious,\n        showNext,\n        questionCount: questions?.length,\n        timeRemaining,\n        secondsRemaining,\n      }}\n    >\n      <Container>\n        <Header>\n          <Typography variant=\"h6\" color=\"inherit\">\n            {`${quizTitle} ${isAssessment ? \"assessment\" : \"quiz\"}`}\n          </Typography>\n        </Header>\n        {questions &&\n          questions?.map((question, index) => {\n            return (\n              <SingleQuestion\n                key={question?.id}\n                index={index}\n                question={question}\n              />\n            );\n          })}\n        <QuestionsProgressBar progress={progress} />\n        <QuestionBottomBar />\n      </Container>\n    </QuizTestStateContext.Provider>\n  );\n}\n\nconst Container = withStyles({\n  root: {\n    backgroundColor: \"inherit\",\n    width: \"100%\",\n    borderRadius: 5,\n    overflow: \"hidden\",\n    boxShadow: \"0px 0px 8px 0px #2b579a\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n})(Box);\n\nconst outerContainer = withStyles({\n  root: {\n    width: \"min(97%, 700px)\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n})(Box);\n\nconst Header = withStyles({\n  root: {\n    width: \"100%\",\n    textAlign: \"center\",\n    color: \"white\",\n    padding: \"0.5rem 0\",\n    background:\n      \"transparent linear-gradient(180deg, #003EAA 0%, #002461E0 100%) 0% 0% no-repeat padding-box\",\n    textTransform: \"capitalize\",\n  },\n})(Box);\n"]},"metadata":{},"sourceType":"module"}