{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport useLocalState from \"../../custom-hooks/useLocalState\";\nimport { local_backend_url } from \"../../url\";\nexport default function useStartTest(id, status) {\n  var _useLocalState = useLocalState(\"user\", \"\"),\n      _useLocalState2 = _slicedToArray(_useLocalState, 1),\n      user = _useLocalState2[0];\n\n  var _useState = useState(),\n      test = _useState[0],\n      setTest = _useState[1];\n\n  var _useState2 = useState(true),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(true),\n      isError = _useState3[0],\n      setIsError = _useState3[1];\n\n  useEffect(function () {\n    if (status == \"unknown\") return;\n    var url = \"\".concat(local_backend_url, \"/api/quiz-test/\").concat(status == \"new_test\" ? \"start\" : status == \"ongoing\" ? \"resume\" : \"retake\");\n    axios.post(url, {\n      quiz_id: id\n    }, {\n      headers: {\n        Accept: \"Application/json\",\n        Authorization: \"Bearer \".concat(user.token)\n      }\n    }).then(function (response) {\n      setTest(response.data);\n      setIsLoading(false);\n      setIsError(false);\n    })[\"catch\"](function () {\n      setIsLoading(false);\n      setIsError(true);\n    });\n  }, []);\n  return {\n    test: test,\n    isLoading: isLoading,\n    isError: isError\n  };\n}","map":null,"metadata":{},"sourceType":"module"}