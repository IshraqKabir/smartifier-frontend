{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nimport { backend_url } from \"../../url\";\nexport default function getBadgeImageLink(_x, _x2) {\n  return _getBadgeImageLink.apply(this, arguments);\n}\n\nfunction _getBadgeImageLink() {\n  _getBadgeImageLink = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(testId, token) {\n    var quizStatus;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (testId) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            _context.next = 4;\n            return axios.get(\"\".concat(backend_url, \"/api/quiz-test/\").concat(testId, \"/get-badge-image-link\"), {\n              headers: {\n                Authorization: \"Bearer \".concat(token)\n              }\n            }).then(function (response) {\n              return response.data;\n            })[\"catch\"](function (err) {\n              return {\n                error: err\n              };\n            });\n\n          case 4:\n            quizStatus = _context.sent;\n            return _context.abrupt(\"return\", quizStatus);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getBadgeImageLink.apply(this, arguments);\n}","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/repository/QuizTest/getBadgeImageLink.tsx"],"names":["axios","backend_url","getBadgeImageLink","testId","token","get","headers","Authorization","then","response","data","err","error","quizStatus"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,WAA5B;AAEA,wBAA8BC,iBAA9B;AAAA;AAAA;;;gFAAe,iBAAiCC,MAAjC,EAAiDC,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACRD,MADQ;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,mBAGYH,KAAK,CAC3BK,GADsB,WACfJ,WADe,4BACcE,MADd,4BAC6C;AAClEG,cAAAA,OAAO,EAAE;AACPC,gBAAAA,aAAa,mBAAYH,KAAZ;AADN;AADyD,aAD7C,EAMtBI,IANsB,CAMjB,UAACC,QAAD,EAAc;AAClB,qBAAOA,QAAQ,CAACC,IAAhB;AACD,aARsB,WAShB,UAACC,GAAD,EAAS;AACd,qBAAO;AAAEC,gBAAAA,KAAK,EAAED;AAAT,eAAP;AACD,aAXsB,CAHZ;;AAAA;AAGPE,YAAAA,UAHO;AAAA,6CAgBNA,UAhBM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import axios from \"axios\";\nimport { backend_url } from \"../../url\";\n\nexport default async function getBadgeImageLink(testId: number, token: string) {\n  if (!testId) return;\n\n  const quizStatus = await axios\n    .get(`${backend_url}/api/quiz-test/${testId}/get-badge-image-link`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    })\n    .then((response) => {\n      return response.data;\n    })\n    .catch((err) => {\n      return { error: err };\n    });\n\n  return quizStatus;\n}\n"]},"metadata":{},"sourceType":"module"}