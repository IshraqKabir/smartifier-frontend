{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ishraqkabir/workspace/smartifier-frontend/Components/QuizTest/QuizTest.tsx\";\nimport { Box, CircularProgress, Typography, withStyles } from \"@material-ui/core\";\nimport Questions from \"./Questions/Questions\";\nimport useQuizTest from \"./useQuizTest\";\nexport default function QuizTest({\n  quizId\n}) {\n  const {\n    quiz,\n    test,\n    testStatus,\n    isLoading\n  } = useQuizTest(quizId);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [isLoading && /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 21\n    }, this), testStatus === \"highest_attempt_count_reached\" && /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      color: \"error\",\n      children: \"You have reached the highest attempt count.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), !isLoading && testStatus !== \"highest_attempt_count_reached\" && quiz && /*#__PURE__*/_jsxDEV(Questions, {\n      questions: quiz === null || quiz === void 0 ? void 0 : quiz.questions,\n      quizTitle: quiz === null || quiz === void 0 ? void 0 : quiz.title,\n      isAssessment: (quiz === null || quiz === void 0 ? void 0 : quiz.assessment) !== null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\nconst Container = withStyles({\n  root: {\n    display: \"flex\",\n    width: \"100vw\",\n    minHeight: \"calc(100vh - 100px)\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: \"2rem 1rem\",\n    backgroundColor: \"#f0f2f5\"\n  }\n})(Box);","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/QuizTest/QuizTest.tsx"],"names":["Box","CircularProgress","Typography","withStyles","Questions","useQuizTest","QuizTest","quizId","quiz","test","testStatus","isLoading","questions","title","assessment","Container","root","display","width","minHeight","flexDirection","alignItems","padding","backgroundColor"],"mappings":";;AAAA,SACEA,GADF,EAEEC,gBAFF,EAGEC,UAHF,EAIEC,UAJF,QAKO,mBALP;AAMA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAMA,eAAe,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAAsC;AACnD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,IAAR;AAAcC,IAAAA,UAAd;AAA0BC,IAAAA;AAA1B,MAAwCN,WAAW,CAACE,MAAD,CAAzD;AAEA,sBACE,QAAC,SAAD;AAAA,eACGI,SAAS,iBAAI,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,YADhB,EAEGD,UAAU,KAAK,+BAAf,iBACC,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAyB,MAAA,KAAK,EAAC,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,EAOG,CAACC,SAAD,IAAcD,UAAU,KAAK,+BAA7B,IAAgEF,IAAhE,iBACC,QAAC,SAAD;AACE,MAAA,SAAS,EAAEA,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEI,SADnB;AAEE,MAAA,SAAS,EAAEJ,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEK,KAFnB;AAGE,MAAA,YAAY,EAAE,CAAAL,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEM,UAAN,MAAqB;AAHrC;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;AAED,MAAMC,SAAS,GAAGZ,UAAU,CAAC;AAC3Ba,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,KAAK,EAAE,OAFH;AAGJC,IAAAA,SAAS,EAAE,qBAHP;AAIJC,IAAAA,aAAa,EAAE,QAJX;AAKJC,IAAAA,UAAU,EAAE,QALR;AAMJC,IAAAA,OAAO,EAAE,WANL;AAOJC,IAAAA,eAAe,EAAE;AAPb;AADqB,CAAD,CAAV,CAUfvB,GAVe,CAAlB","sourcesContent":["import {\n  Box,\n  CircularProgress,\n  Typography,\n  withStyles,\n} from \"@material-ui/core\";\nimport Questions from \"./Questions/Questions\";\nimport useQuizTest from \"./useQuizTest\";\n\ninterface IProps {\n  quizId: number;\n}\n\nexport default function QuizTest({ quizId }: IProps) {\n  const { quiz, test, testStatus, isLoading } = useQuizTest(quizId);\n\n  return (\n    <Container>\n      {isLoading && <CircularProgress />}\n      {testStatus === \"highest_attempt_count_reached\" && (\n        <Typography variant=\"h6\" color=\"error\">\n          You have reached the highest attempt count.\n        </Typography>\n      )}\n      {!isLoading && testStatus !== \"highest_attempt_count_reached\" && quiz && (\n        <Questions\n          questions={quiz?.questions}\n          quizTitle={quiz?.title}\n          isAssessment={quiz?.assessment !== null}\n        />\n      )}\n    </Container>\n  );\n}\n\nconst Container = withStyles({\n  root: {\n    display: \"flex\",\n    width: \"100vw\",\n    minHeight: \"calc(100vh - 100px)\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: \"2rem 1rem\",\n    backgroundColor: \"#f0f2f5\",\n  },\n})(Box);\n"]},"metadata":{},"sourceType":"module"}