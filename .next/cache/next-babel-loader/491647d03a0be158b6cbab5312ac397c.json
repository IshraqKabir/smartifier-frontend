{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ishraqkabir/workspace/smartifier-frontend/Components/Post/SinglePost/PostBody/PostBody.tsx\",\n    _this = this;\n\nimport React from \"react\";\nimport parse from \"html-react-parser\";\nvar options = {\n  replace: function replace(_ref) {\n    var attribs = _ref.attribs,\n        children = _ref.children;\n    console.log(children);\n    var image;\n\n    if (children) {\n      children.forEach(function (child) {\n        if (child.name == \"img\") {\n          //   console.log(\"image\");\n          //   child.attribs.src = `${backend_url}${child.attribs.src}`;\n          console.log(\"returning\");\n          return /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Imageeeeeeeeeeeee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 18\n          }, _this);\n        }\n      });\n    }\n\n    console.log(attribs);\n  }\n};\n\nvar PostBody = function PostBody(_ref2) {\n  var body = _ref2.body;\n  var el = parse(\"\".concat(body), options);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: el\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 10\n  }, _this);\n};\n\n_c = PostBody;\nexport default PostBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostBody\");","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/Post/SinglePost/PostBody/PostBody.tsx"],"names":["React","parse","options","replace","attribs","children","console","log","image","forEach","child","name","PostBody","body","el"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,KAAP,MAA8C,mBAA9C;AAIA,IAAMC,OAA+B,GAAG;AACtCC,EAAAA,OAAO,EAAE,uBAAgC;AAAA,QAA7BC,OAA6B,QAA7BA,OAA6B;AAAA,QAApBC,QAAoB,QAApBA,QAAoB;AACvCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,QAAMG,KAAN;;AACA,QAAIH,QAAJ,EAAc;AACZA,MAAAA,QAAQ,CAACI,OAAT,CAAiB,UAACC,KAAD,EAAW;AAC1B,YAAIA,KAAK,CAACC,IAAN,IAAc,KAAlB,EAAyB;AACvB;AACA;AACAL,UAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,8BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACD;AACF,OAPD;AAQD;;AAEDD,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACD;AAhBqC,CAAxC;;AAuBA,IAAMQ,QAA0B,GAAG,SAA7BA,QAA6B,QAAc;AAAA,MAAXC,IAAW,SAAXA,IAAW;AAC/C,MAAMC,EAAE,GAAGb,KAAK,WAAIY,IAAJ,GAAYX,OAAZ,CAAhB;AAEA,sBAAO;AAAA,cAAMY;AAAN;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CAJD;;KAAMF,Q;AAMN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\n\nimport parse, { HTMLReactParserOptions } from \"html-react-parser\";\nimport { Element } from \"domhandler/lib/node\";\nimport { backend_url } from \"../../../../url\";\n\nconst options: HTMLReactParserOptions = {\n  replace: ({ attribs, children }: any) => {\n    console.log(children);\n    const image;\n    if (children) {\n      children.forEach((child) => {\n        if (child.name == \"img\") {\n          //   console.log(\"image\");\n          //   child.attribs.src = `${backend_url}${child.attribs.src}`;\n          console.log(\"returning\");\n          return <p>Imageeeeeeeeeeeee</p>;\n        }\n      });\n    }\n\n    console.log(attribs);\n  },\n};\n\ninterface IProps {\n  body: string;\n}\n\nconst PostBody: React.FC<IProps> = ({ body }) => {\n  const el = parse(`${body}`, options);\n\n  return <div>{el}</div>;\n};\n\nexport default PostBody;\n"]},"metadata":{},"sourceType":"module"}