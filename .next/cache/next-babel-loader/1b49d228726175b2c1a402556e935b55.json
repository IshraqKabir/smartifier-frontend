{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Box, Typography, withStyles } from \"@material-ui/core\";\nimport { createContext } from \"react\";\nimport SingleQuestion from \"./SingleQuestion/SingleQuestion\";\nimport QuestionBottomBar from \"./QuestionBottomBar/QuestionBottomBar\";\nimport useTestState from \"./useTestState\";\nimport QuestionsProgressBar from \"./QuestionsProgressBar/QuestionsProgressBar\";\nimport Submit from \"../Submit/Submit\";\nexport var QuizTestStateContext = /*#__PURE__*/createContext(null);\nexport default function Questions(_ref) {\n  var quizTitle = _ref.quizTitle,\n      questions = _ref.questions,\n      isAssessment = _ref.isAssessment,\n      quizId = _ref.quizId,\n      test = _ref.test,\n      duration = _ref.duration;\n\n  var _useTestState = useTestState(quizId, questions, test, duration),\n      answers = _useTestState.answers,\n      setAnswers = _useTestState.setAnswers,\n      currentQuestionIndex = _useTestState.currentQuestionIndex,\n      goToNextQuestion = _useTestState.goToNextQuestion,\n      goToPreviousQuestion = _useTestState.goToPreviousQuestion,\n      progress = _useTestState.progress,\n      showPrevious = _useTestState.showPrevious,\n      showNext = _useTestState.showNext,\n      timeRemaining = _useTestState.timeRemaining,\n      secondsRemaining = _useTestState.secondsRemaining,\n      showSubmitButton = _useTestState.showSubmitButton,\n      isSubmitting = _useTestState.isSubmitting,\n      handleSubmit = _useTestState.handleSubmit;\n\n  return /*#__PURE__*/_jsx(QuizTestStateContext.Provider, {\n    value: {\n      answers: answers,\n      setAnswers: setAnswers,\n      currentQuestionIndex: currentQuestionIndex,\n      goToNextQuestion: goToNextQuestion,\n      goToPreviousQuestion: goToPreviousQuestion,\n      showPrevious: showPrevious,\n      showNext: showNext,\n      questionCount: questions === null || questions === void 0 ? void 0 : questions.length,\n      timeRemaining: timeRemaining,\n      secondsRemaining: secondsRemaining,\n      isSubmitting: isSubmitting,\n      handleSubmit: handleSubmit\n    },\n    children: /*#__PURE__*/_jsxs(OuterContainer, {\n      children: [/*#__PURE__*/_jsxs(QuestionsContainer, {\n        children: [/*#__PURE__*/_jsx(Header, {\n          children: /*#__PURE__*/_jsx(Typography, {\n            variant: \"h6\",\n            color: \"inherit\",\n            children: \"\".concat(quizTitle, \" \").concat(isAssessment ? \"assessment\" : \"quiz\")\n          })\n        }), questions && (questions === null || questions === void 0 ? void 0 : questions.map(function (question, index) {\n          return /*#__PURE__*/_jsx(SingleQuestion, {\n            index: index,\n            question: question\n          }, question === null || question === void 0 ? void 0 : question.id);\n        })), /*#__PURE__*/_jsx(QuestionsProgressBar, {\n          progress: progress\n        }), /*#__PURE__*/_jsx(QuestionBottomBar, {})]\n      }), showSubmitButton && /*#__PURE__*/_jsx(Submit, {})]\n    })\n  });\n}\nvar QuestionsContainer = withStyles({\n  root: {\n    backgroundColor: \"inherit\",\n    width: \"100%\",\n    borderRadius: 5,\n    overflow: \"hidden\",\n    boxShadow: \"0px 0px 8px 0px #2b579a\",\n    display: \"flex\",\n    flexDirection: \"column\"\n  }\n})(Box);\nvar OuterContainer = withStyles({\n  root: {\n    width: \"min(97%, 700px)\",\n    display: \"flex\",\n    flexDirection: \"column\"\n  }\n})(Box);\nvar Header = withStyles({\n  root: {\n    width: \"100%\",\n    textAlign: \"center\",\n    color: \"white\",\n    padding: \"0.5rem 0\",\n    background: \"transparent linear-gradient(180deg, #003EAA 0%, #002461E0 100%) 0% 0% no-repeat padding-box\",\n    textTransform: \"capitalize\"\n  }\n})(Box);","map":null,"metadata":{},"sourceType":"module"}