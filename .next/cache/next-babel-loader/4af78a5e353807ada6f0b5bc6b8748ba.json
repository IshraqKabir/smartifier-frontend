{"ast":null,"code":"import { useState } from \"react\";\nexport default function useTextAnswer(question, answers, setAnswers) {\n  var _useState = useState(getTextValue()),\n      text = _useState[0],\n      setText = _useState[1];\n\n  function getTextValue() {\n    var _answers$$;\n\n    if (!answers || !answers[\"\".concat(question === null || question === void 0 ? void 0 : question.id)] || !answers[\"\".concat(question === null || question === void 0 ? void 0 : question.id)][0]) {\n      return \"\";\n    }\n\n    return (_answers$$ = answers[\"\".concat(question === null || question === void 0 ? void 0 : question.id)][0]) === null || _answers$$ === void 0 ? void 0 : _answers$$.text;\n  }\n\n  function handleChange(e) {\n    var _e$target, _question$options$, _e$target2;\n\n    setText(e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.value);\n    setAnswers(question === null || question === void 0 ? void 0 : (_question$options$ = question.options[0]) === null || _question$options$ === void 0 ? void 0 : _question$options$.id, question, e === null || e === void 0 ? void 0 : (_e$target2 = e.target) === null || _e$target2 === void 0 ? void 0 : _e$target2.value);\n  }\n\n  return {\n    text: text,\n    handleChange: handleChange\n  };\n}","map":null,"metadata":{},"sourceType":"module"}