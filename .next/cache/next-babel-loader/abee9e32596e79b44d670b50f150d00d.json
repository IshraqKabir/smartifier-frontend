{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ishraqkabir/workspace/smartifier-frontend/Components/Quizzes/Quiz/TakeQuizButton/QuizInfoModal/QuizInfoModal.tsx\";\nimport React from \"react\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport zIndexes from \"../../../../../Theme/zIndexes\";\nexport default function FullScreenDialog({\n  isModalOpen,\n  closeModal,\n  quizTitle\n}) {\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      zIndex: zIndexes.highest\n    },\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      fullScreen: true,\n      open: isModalOpen,\n      onClose: closeModal,\n      TransitionComponent: Transition,\n      children: [/*#__PURE__*/_jsxDEV(AppBar, {\n        className: classes.appBar,\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            className: classes.title,\n            children: quizTitle.toLocaleLowerCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            edge: \"start\",\n            color: \"inherit\",\n            onClick: closeModal,\n            \"aria-label\": \"close\",\n            children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: [/*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: \"Phone ringtone\",\n            secondary: \"Titania\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: \"Default notification ringtone\",\n            secondary: \"Tethys\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\nconst useStyles = makeStyles(theme => createStyles({\n  appBar: {\n    position: \"relative\",\n    background: \"transparent linear-gradient(180deg, #003EAA 0%, #002461E0 100%) 0% 0% no-repeat padding-box\"\n  },\n  title: {\n    flex: 1,\n    textTransform: \"capitalize\"\n  }\n}));","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/Quizzes/Quiz/TakeQuizButton/QuizInfoModal/QuizInfoModal.tsx"],"names":["React","createStyles","makeStyles","Dialog","ListItemText","ListItem","List","Divider","AppBar","Toolbar","IconButton","Typography","CloseIcon","zIndexes","FullScreenDialog","isModalOpen","closeModal","quizTitle","classes","useStyles","zIndex","highest","Transition","appBar","title","toLocaleLowerCase","theme","position","background","flex","textTransform"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,EAAuBC,UAAvB,QAAgD,0BAAhD;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,QAAP,MAAqB,+BAArB;AASA,eAAe,SAASC,gBAAT,CAA0B;AACvCC,EAAAA,WADuC;AAEvCC,EAAAA,UAFuC;AAGvCC,EAAAA;AAHuC,CAA1B,EAIJ;AACT,QAAMC,OAAO,GAAGC,SAAS,EAAzB;AAEA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAEP,QAAQ,CAACQ;AAAnB,KAAZ;AAAA,2BACE,QAAC,MAAD;AACE,MAAA,UAAU,MADZ;AAEE,MAAA,IAAI,EAAEN,WAFR;AAGE,MAAA,OAAO,EAAEC,UAHX;AAIE,MAAA,mBAAmB,EAAEM,UAJvB;AAAA,8BAME,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAEJ,OAAO,CAACK,MAA3B;AAAA,+BACE,QAAC,OAAD;AAAA,kCACE,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,IAApB;AAAyB,YAAA,SAAS,EAAEL,OAAO,CAACM,KAA5C;AAAA,sBACGP,SAAS,CAACQ,iBAAV;AADH;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,UAAD;AACE,YAAA,IAAI,EAAC,OADP;AAEE,YAAA,KAAK,EAAC,SAFR;AAGE,YAAA,OAAO,EAAET,UAHX;AAIE,0BAAW,OAJb;AAAA,mCAME,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF,eAqBE,QAAC,IAAD;AAAA,gCACE,QAAC,QAAD;AAAU,UAAA,MAAM,MAAhB;AAAA,iCACE,QAAC,YAAD;AAAc,YAAA,OAAO,EAAC,gBAAtB;AAAuC,YAAA,SAAS,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE,QAAC,QAAD;AAAU,UAAA,MAAM,MAAhB;AAAA,iCACE,QAAC,YAAD;AACE,YAAA,OAAO,EAAC,+BADV;AAEE,YAAA,SAAS,EAAC;AAFZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cArBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAsCD;AAED,MAAMG,SAAS,GAAGjB,UAAU,CAAEwB,KAAD,IAC3BzB,YAAY,CAAC;AACXsB,EAAAA,MAAM,EAAE;AACNI,IAAAA,QAAQ,EAAE,UADJ;AAENC,IAAAA,UAAU,EACR;AAHI,GADG;AAMXJ,EAAAA,KAAK,EAAE;AACLK,IAAAA,IAAI,EAAE,CADD;AAELC,IAAAA,aAAa,EAAE;AAFV;AANI,CAAD,CADc,CAA5B","sourcesContent":["import React from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport zIndexes from \"../../../../../Theme/zIndexes\";\n\n\ninterface IProps {\n  isModalOpen: boolean;\n  closeModal: () => void;\n  quizTitle: string;\n}\n\nexport default function FullScreenDialog({\n  isModalOpen,\n  closeModal,\n  quizTitle,\n}: IProps) {\n  const classes = useStyles();\n\n  return (\n    <div style={{ zIndex: zIndexes.highest }}>\n      <Dialog\n        fullScreen\n        open={isModalOpen}\n        onClose={closeModal}\n        TransitionComponent={Transition}\n      >\n        <AppBar className={classes.appBar}>\n          <Toolbar>\n            <Typography variant=\"h6\" className={classes.title}>\n              {quizTitle.toLocaleLowerCase()}\n            </Typography>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              onClick={closeModal}\n              aria-label=\"close\"\n            >\n              <CloseIcon />\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n        <List>\n          <ListItem button>\n            <ListItemText primary=\"Phone ringtone\" secondary=\"Titania\" />\n          </ListItem>\n          <Divider />\n          <ListItem button>\n            <ListItemText\n              primary=\"Default notification ringtone\"\n              secondary=\"Tethys\"\n            />\n          </ListItem>\n        </List>\n      </Dialog>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    appBar: {\n      position: \"relative\",\n      background:\n        \"transparent linear-gradient(180deg, #003EAA 0%, #002461E0 100%) 0% 0% no-repeat padding-box\",\n    },\n    title: {\n      flex: 1,\n      textTransform: \"capitalize\",\n    },\n  })\n);\n"]},"metadata":{},"sourceType":"module"}