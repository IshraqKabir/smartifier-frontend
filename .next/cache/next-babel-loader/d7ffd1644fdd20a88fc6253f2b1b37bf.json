{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Axios from \"axios\";\nexport default async function post(url, data, callBack, errorCallBack, token, isMultipart = false) {\n  var config = {\n    method: 'post',\n    url,\n    headers: {\n      'Accept': 'application/json',\n      'Authorization': `Bearer ${token}`\n    },\n    data\n  };\n\n  if (isMultipart) {\n    config = _objectSpread(_objectSpread({}, config), {}, {\n      'Content-Type': 'multipart/form-data'\n    });\n  }\n\n  Axios(config).then(response => {\n    callBack(response);\n  }).catch(error => {\n    errorCallBack(error);\n  });\n}","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/UtilFunctions/post.js"],"names":["Axios","post","url","data","callBack","errorCallBack","token","isMultipart","config","method","headers","then","response","catch","error"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,eAAeC,IAAf,CAAoBC,GAApB,EAAyBC,IAAzB,EAA+BC,QAA/B,EAAyCC,aAAzC,EAAwDC,KAAxD,EAA+DC,WAAW,GAAG,KAA7E,EAAoF;AAE/F,MAAIC,MAAM,GAAG;AACTC,IAAAA,MAAM,EAAE,MADC;AAETP,IAAAA,GAFS;AAGTQ,IAAAA,OAAO,EAAE;AACL,gBAAU,kBADL;AAEL,uBAAkB,UAASJ,KAAM;AAF5B,KAHA;AAOTH,IAAAA;AAPS,GAAb;;AAUA,MAAII,WAAJ,EAAiB;AACbC,IAAAA,MAAM,mCACCA,MADD;AAEF,sBAAgB;AAFd,MAAN;AAIH;;AAEDR,EAAAA,KAAK,CAACQ,MAAD,CAAL,CACKG,IADL,CACUC,QAAQ,IAAI;AACdR,IAAAA,QAAQ,CAACQ,QAAD,CAAR;AACH,GAHL,EAIKC,KAJL,CAIWC,KAAK,IAAI;AACZT,IAAAA,aAAa,CAACS,KAAD,CAAb;AACH,GANL;AAOH","sourcesContent":["import Axios from \"axios\";\n\nexport default async function post(url, data, callBack, errorCallBack, token, isMultipart = false) {\n\n    var config = {\n        method: 'post',\n        url,\n        headers: {\n            'Accept': 'application/json',\n            'Authorization': `Bearer ${token}`,\n        },\n        data,\n    };\n\n    if (isMultipart) {\n        config = {\n            ...config,\n            'Content-Type': 'multipart/form-data'\n        }\n    }\n\n    Axios(config)\n        .then(response => {\n            callBack(response)\n        })\n        .catch(error => {\n            errorCallBack(error)\n        })\n}"]},"metadata":{},"sourceType":"module"}