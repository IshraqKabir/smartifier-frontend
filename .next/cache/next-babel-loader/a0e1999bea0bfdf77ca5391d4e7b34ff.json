{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ishraqkabir/workspace/smartifier-frontend/Components/QuizTest/CheckTestStatus/CheckTestStatus.tsx\";\nimport { Box, withStyles } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport useLocalState from \"../../../custom-hooks/useLocalState\";\nimport { local_backend_url } from \"../../../url\";\nimport Topbar from \"../../Layout/Topbar/Topbar\";\n\nconst CheckTestStatus = ({\n  quizID\n}) => {\n  const {\n    0: status,\n    1: setStatus\n  } = useState(\"unknown\");\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(true);\n  const [user] = useLocalState(\"user\", \"\");\n  useEffect(() => {\n    axios.get(`${local_backend_url}/api/quiz-test/${quizID}/check-status`, {\n      headers: {\n        Accept: \"Application/json\",\n        Authorization: `Bearer ${user.token}`\n      }\n    }).then(response => {\n      setStatus(response.data.status);\n      setIsLoading(false);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Topbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: status == \"uknown\" && !isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Some Error Occured. Please Refresh or Go Back.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport default CheckTestStatus;\nconst Container = withStyles({\n  root: {\n    width: \"100vw\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    backgroundColor: \"#5D00A5\",\n    minHeight: \"100vh\",\n    color: \"white\"\n  }\n})(Box);","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/QuizTest/CheckTestStatus/CheckTestStatus.tsx"],"names":["Box","withStyles","axios","React","useEffect","useState","useLocalState","local_backend_url","Topbar","CheckTestStatus","quizID","status","setStatus","isLoading","setIsLoading","user","get","headers","Accept","Authorization","token","then","response","data","Container","root","width","display","flexDirection","alignItems","backgroundColor","minHeight","color"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,UAAd,QAAgC,mBAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AACA,SAASC,iBAAT,QAAkC,cAAlC;AACA,OAAOC,MAAP,MAAmB,4BAAnB;;AAMA,MAAMC,eAAiC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AACxD,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBP,QAAQ,CAAS,SAAT,CAApC;AACA,QAAM;AAAA,OAACQ,SAAD;AAAA,OAAYC;AAAZ,MAA4BT,QAAQ,CAAU,IAAV,CAA1C;AACA,QAAM,CAACU,IAAD,IAAST,aAAa,CAAC,MAAD,EAAS,EAAT,CAA5B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACdF,IAAAA,KAAK,CACFc,GADH,CACQ,GAAET,iBAAkB,kBAAiBG,MAAO,eADpD,EACoE;AAChEO,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEPC,QAAAA,aAAa,EAAG,UAASJ,IAAI,CAACK,KAAM;AAF7B;AADuD,KADpE,EAOGC,IAPH,CAOSC,QAAD,IAAc;AAClBV,MAAAA,SAAS,CAACU,QAAQ,CAACC,IAAT,CAAcZ,MAAf,CAAT;AACAG,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAVH;AAWD,GAZQ,EAYN,EAZM,CAAT;AAcA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAA,gBACGH,MAAM,IAAI,QAAV,IAAsB,CAACE,SAAvB,iBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAWD,CA9BD;;AAgCA,eAAeJ,eAAf;AAEA,MAAMe,SAAS,GAAGvB,UAAU,CAAC;AAC3BwB,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,OADH;AAEJC,IAAAA,OAAO,EAAE,MAFL;AAGJC,IAAAA,aAAa,EAAE,QAHX;AAIJC,IAAAA,UAAU,EAAE,QAJR;AAKJC,IAAAA,eAAe,EAAE,SALb;AAMJC,IAAAA,SAAS,EAAE,OANP;AAOJC,IAAAA,KAAK,EAAE;AAPH;AADqB,CAAD,CAAV,CAUfhC,GAVe,CAAlB","sourcesContent":["import { Box, withStyles } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport useLocalState from \"../../../custom-hooks/useLocalState\";\nimport { local_backend_url } from \"../../../url\";\nimport Topbar from \"../../Layout/Topbar/Topbar\";\n\ninterface IProps {\n  quizID: Number;\n}\n\nconst CheckTestStatus: React.FC<IProps> = ({ quizID }) => {\n  const [status, setStatus] = useState<String>(\"unknown\");\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [user] = useLocalState(\"user\", \"\");\n\n  useEffect(() => {\n    axios\n      .get(`${local_backend_url}/api/quiz-test/${quizID}/check-status`, {\n        headers: {\n          Accept: \"Application/json\",\n          Authorization: `Bearer ${user.token}`,\n        },\n      })\n      .then((response) => {\n        setStatus(response.data.status);\n        setIsLoading(false);\n      });\n  }, []);\n\n  return (\n    <>\n      <Topbar />\n      <Container>\n        {status == \"uknown\" && !isLoading && (\n          <p>Some Error Occured. Please Refresh or Go Back.</p>\n        )}\n        {}\n      </Container>\n    </>\n  );\n};\n\nexport default CheckTestStatus;\n\nconst Container = withStyles({\n  root: {\n    width: \"100vw\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    backgroundColor: \"#5D00A5\",\n    minHeight: \"100vh\",\n    color: \"white\",\n  },\n})(Box);\n"]},"metadata":{},"sourceType":"module"}