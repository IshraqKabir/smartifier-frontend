{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nexport default function useBottomBar(testStatus) {\n  _s();\n\n  var _useState = useState(\"start\"),\n      buttonText = _useState[0],\n      setButtonText = _useState[1];\n\n  useEffect(function () {\n    if (testStatus === \"retake\") {\n      setButtonText(\"retake\");\n    } else {\n      setButtonText(\"start\");\n    }\n  }, [testStatus]);\n\n  var startTest = function startTest(quizId) {\n    if (!quizId) if (testStatus === \"new_test\" || testStatus === \"ongoing\" || testStatus === \"retake\") {}\n  };\n\n  return {\n    buttonText: buttonText,\n    startTest: startTest\n  };\n}\n\n_s(useBottomBar, \"iSZVP2o84aLLNQFhXtxt0Ea0GZM=\");","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/Quizzes/Quiz/TakeQuizButton/QuizInfoModal/QuizInfo/BottomBar/useBottomBar.tsx"],"names":["useEffect","useState","useBottomBar","testStatus","buttonText","setButtonText","startTest","quizId"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAGA,eAAe,SAASC,YAAT,CAAsBC,UAAtB,EAA+C;AAAA;;AAAA,kBACxBF,QAAQ,CAAqB,OAArB,CADgB;AAAA,MACrDG,UADqD;AAAA,MACzCC,aADyC;;AAG5DL,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIG,UAAU,KAAK,QAAnB,EAA6B;AAC3BE,MAAAA,aAAa,CAAC,QAAD,CAAb;AACD,KAFD,MAEO;AACLA,MAAAA,aAAa,CAAC,OAAD,CAAb;AACD;AACF,GANQ,EAMN,CAACF,UAAD,CANM,CAAT;;AAQA,MAAMG,SAAS,GAAG,SAAZA,SAAY,CAACC,MAAD,EAAoB;AACpC,QAAI,CAACA,MAAL,EACA,IACEJ,UAAU,KAAK,UAAf,IACAA,UAAU,KAAK,SADf,IAEAA,UAAU,KAAK,QAHjB,EAIE,CAED;AACF,GATD;;AAWA,SAAO;AAAEC,IAAAA,UAAU,EAAVA,UAAF;AAAcE,IAAAA,SAAS,EAATA;AAAd,GAAP;AACD;;GAvBuBJ,Y","sourcesContent":["import { useEffect, useState } from \"react\";\nimport TTestStatus from \"../../../../../../../Models/TTestStatus\";\n\nexport default function useBottomBar(testStatus: TTestStatus) {\n  const [buttonText, setButtonText] = useState<\"start\" | \"retake\">(\"start\");\n\n  useEffect(() => {\n    if (testStatus === \"retake\") {\n      setButtonText(\"retake\");\n    } else {\n      setButtonText(\"start\");\n    }\n  }, [testStatus]);\n\n  const startTest = (quizId: number) => {\n    if (!quizId) \n    if (\n      testStatus === \"new_test\" ||\n      testStatus === \"ongoing\" ||\n      testStatus === \"retake\"\n    ) {\n      \n    }\n  };\n\n  return { buttonText, startTest };\n}\n"]},"metadata":{},"sourceType":"module"}