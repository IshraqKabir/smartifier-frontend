{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ishraqkabir/workspace/smartifier-frontend/Components/Layout/Topbar/NavItems/NavItem/Login/Login.tsx\";\nimport React from \"react\";\nimport { GoogleLogin } from \"react-google-login\";\nimport { backend_url } from \"../../../../../../url\";\nimport post from \"../../../../../../UtilFunctions/post\";\nimport useLocalState from \"../../../../../../custom-hooks/useLocalState\";\nimport User from \"./User/User\";\nimport { makeStyles } from \"@material-ui/core\";\nconst useStyles = makeStyles({\n  googleLoginButton: {}\n});\n\nconst Login = () => {\n  const [user, setUser] = useLocalState(\"user\", \"\");\n\n  const responseGoogle = async googleUser => {\n    if (!googleUser.error) {\n      const id_token = googleUser.tokenId;\n      const google_id = parseInt(googleUser.profileObj.googleId);\n      post(`${backend_url}/api/auth/google/verify`, {\n        id_token: id_token,\n        google_id: google_id\n      }, response => {\n        setUser(response.data);\n      }, () => {});\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !user ? /*#__PURE__*/_jsxDEV(GoogleLogin, {\n      clientId: \"540083931812-7bt05mqtrriog1f1kdpvotbvnr01iien.apps.googleusercontent.com\",\n      buttonText: \"Login\",\n      onSuccess: responseGoogle,\n      onFailure: responseGoogle,\n      cookiePolicy: \"single_host_origin\",\n      render: renderProps => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: renderProps.onClick,\n        disabled: false,\n        className: googleLoginBu,\n        children: \"This is my custom Google button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(User, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\nexport default Login;","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/Layout/Topbar/NavItems/NavItem/Login/Login.tsx"],"names":["React","GoogleLogin","backend_url","post","useLocalState","User","makeStyles","useStyles","googleLoginButton","Login","user","setUser","responseGoogle","googleUser","error","id_token","tokenId","google_id","parseInt","profileObj","googleId","response","data","renderProps","onClick","googleLoginBu"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,WAAT,QAA4B,oBAA5B;AAEA,SAASC,WAAT,QAA4B,uBAA5B;AAEA,OAAOC,IAAP,MAAiB,sCAAjB;AACA,OAAOC,aAAP,MAA0B,8CAA1B;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAAC;AAC3BE,EAAAA,iBAAiB,EAAE;AADQ,CAAD,CAA5B;;AAMA,MAAMC,KAAmB,GAAG,MAAM;AAChC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,aAAa,CAAM,MAAN,EAAc,EAAd,CAArC;;AAEA,QAAMQ,cAAc,GAAG,MAAOC,UAAP,IAAsB;AAC3C,QAAI,CAACA,UAAU,CAACC,KAAhB,EAAuB;AACrB,YAAMC,QAAQ,GAAGF,UAAU,CAACG,OAA5B;AACA,YAAMC,SAAS,GAAGC,QAAQ,CAACL,UAAU,CAACM,UAAX,CAAsBC,QAAvB,CAA1B;AAEAjB,MAAAA,IAAI,CACD,GAAED,WAAY,yBADb,EAEF;AAAEa,QAAAA,QAAQ,EAAEA,QAAZ;AAAsBE,QAAAA,SAAS,EAAEA;AAAjC,OAFE,EAGDI,QAAD,IAAc;AACZV,QAAAA,OAAO,CAACU,QAAQ,CAACC,IAAV,CAAP;AACD,OALC,EAMF,MAAM,CAAE,CANN,CAAJ;AAQD;AACF,GAdD;;AAgBA,sBACE;AAAA,cACG,CAACZ,IAAD,gBACC,QAAC,WAAD;AACE,MAAA,QAAQ,EAAC,0EADX;AAEE,MAAA,UAAU,EAAC,OAFb;AAGE,MAAA,SAAS,EAAEE,cAHb;AAIE,MAAA,SAAS,EAAEA,cAJb;AAKE,MAAA,YAAY,EAAE,oBALhB;AAME,MAAA,MAAM,EAAGW,WAAD,iBACN;AACE,QAAA,OAAO,EAAEA,WAAW,CAACC,OADvB;AAEE,QAAA,QAAQ,EAAE,KAFZ;AAGE,QAAA,SAAS,EAAEC,aAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,YADD,gBAkBC,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAnBJ,mBADF;AAwBD,CA3CD;;AA6CA,eAAehB,KAAf","sourcesContent":["import React from \"react\";\n\nimport { GoogleLogin } from \"react-google-login\";\n\nimport { backend_url } from \"../../../../../../url\";\n\nimport post from \"../../../../../../UtilFunctions/post\";\nimport useLocalState from \"../../../../../../custom-hooks/useLocalState\";\nimport User from \"./User/User\";\nimport { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  googleLoginButton: {\n\n  }\n})\n\nconst Login: React.FC<{}> = () => {\n  const [user, setUser] = useLocalState<any>(\"user\", \"\");\n\n  const responseGoogle = async (googleUser) => {\n    if (!googleUser.error) {\n      const id_token = googleUser.tokenId;\n      const google_id = parseInt(googleUser.profileObj.googleId);\n\n      post(\n        `${backend_url}/api/auth/google/verify`,\n        { id_token: id_token, google_id: google_id },\n        (response) => {\n          setUser(response.data);\n        },\n        () => {}\n      );\n    }\n  };\n\n  return (\n    <>\n      {!user ? (\n        <GoogleLogin\n          clientId=\"540083931812-7bt05mqtrriog1f1kdpvotbvnr01iien.apps.googleusercontent.com\"\n          buttonText=\"Login\"\n          onSuccess={responseGoogle}\n          onFailure={responseGoogle}\n          cookiePolicy={\"single_host_origin\"}\n          render={(renderProps) => (\n            <button\n              onClick={renderProps.onClick}\n              disabled={false}\n              className={googleLoginBu}\n            >\n              This is my custom Google button\n            </button>\n          )}\n        />\n      ) : (\n        <User />\n      )}\n    </>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}