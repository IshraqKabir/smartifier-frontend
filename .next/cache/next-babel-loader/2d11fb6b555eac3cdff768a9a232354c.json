{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ishraqkabir/workspace/smartifier-frontend/Components/Post/SinglePost/CommentsSection/Comment/RepliesSection/ReplyBox/ReplyBox.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Avatar, Box, CircularProgress, makeStyles, Snackbar, withStyles } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport Image from \"next/image\";\nimport axios from \"axios\";\nimport useLocalState from \"../../../../../../../custom-hooks/useLocalState\";\nimport { backend_url } from \"../../../../../../../url\";\nconst MAX_CHARACTER_COUNT = 200;\n\nconst ReplyBox = ({\n  commentId,\n  setReplies,\n  setComment\n}) => {\n  const [user] = useLocalState(\"user\", \"\");\n  const {\n    0: reply,\n    1: setReply\n  } = useState(\"\");\n  const {\n    0: isSending,\n    1: setIsSending\n  } = useState(false);\n  const {\n    0: showLoginAlert,\n    1: setShowLoginAlert\n  } = useState(false);\n  const classes = useStyles({\n    reply\n  });\n\n  const handleSubmit = () => {\n    if (!user.token) {\n      showAlert();\n      return;\n    }\n\n    if (reply.length > MAX_CHARACTER_COUNT) return;\n\n    if (reply.length == 0) {\n      showAlert();\n      return;\n    }\n\n    postReply();\n  };\n\n  const handleChange = e => {\n    setReply(e.target.value);\n  };\n\n  const handleEnter = e => {\n    if (e.key === \"Enter\" && reply.length > 0) {\n      handleSubmit();\n    }\n  };\n\n  const postReply = () => {\n    setIsSending(true);\n    axios.post(`${backend_url}/api/comment/reply/store`, {\n      comment_id: commentId,\n      comment: reply\n    }, {\n      headers: {\n        Accept: \"application/json\",\n        Authorization: `Bearer ${user.token}`\n      }\n    }).then(response => {\n      setIsSending(false);\n      setReplies(state => [response.data, ...state]);\n      setComment(state => {\n        const comment = _objectSpread({}, state);\n\n        return _objectSpread(_objectSpread({}, comment), {}, {\n          replies: replies.unshift(response.data)\n        });\n      });\n      setReply(\"\");\n    });\n  };\n\n  const showAlert = () => {\n    setShowLoginAlert(true);\n    setTimeout(() => {\n      setShowLoginAlert(false);\n    }, 3000);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Avatar, {\n      src: user === null || user === void 0 ? void 0 : user.picture,\n      style: {\n        width: 35,\n        height: 35,\n        borderRadius: \"50%\",\n        marginRight: \"16px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: user ? \"Tell us what you think about this post!\" : \"Login to post a reply!\",\n        value: reply,\n        onChange: handleChange,\n        onKeyDown: handleEnter,\n        style: {\n          width: \"100%\",\n          padding: \"12px\",\n          marginRight: \"16px\",\n          border: \"1px solid black\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.charactersCount,\n        children: `${reply.length}/${MAX_CHARACTER_COUNT}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ImageContainer, {\n      children: isSending ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 25,\n        color: \"inherit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Image, {\n        src: `/assets/send_icon.svg`,\n        width: 25,\n        height: 25,\n        onClick: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoginAlert, {\n      anchorOrigin: {\n        vertical: \"top\",\n        horizontal: \"center\"\n      },\n      open: showLoginAlert,\n      message: !user.token ? \"Login To Post A Reply!\" : reply.length == 0 ? \"Reply Cannot Be Empty\" : \"Some Error Occurred\"\n    }, commentId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n\nexport default ReplyBox;\nconst Container = withStyles({\n  root: {\n    width: \"100%\",\n    display: \"flex\",\n    marginTop: \"1.5rem\",\n    alignItems: \"center\",\n    marginBottom: \"1.5rem\"\n  }\n})(Box);\nconst ImageContainer = withStyles({\n  root: {\n    display: \"inline-flex\",\n    width: 35,\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    cursor: \"pointer\"\n  }\n})(Box);\nconst InputContainer = withStyles({\n  root: {\n    position: \"relative\",\n    display: \"flex\",\n    alignItems: \"center\",\n    width: \"100%\"\n  }\n})(Box);\nconst useStyles = makeStyles({\n  charactersCount: {\n    position: \"absolute\",\n    bottom: -22,\n    right: 20,\n    fontSize: \"0.8rem\",\n    fontWeight: 700,\n    color: props => {\n      const {\n        reply\n      } = props;\n\n      if (reply.length > MAX_CHARACTER_COUNT) {\n        return \"red\";\n      }\n\n      return \"grey\";\n    }\n  }\n});\nconst LoginAlert = withStyles({\n  root: {\n    zIndex: 20000\n  }\n})(Snackbar);","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/Post/SinglePost/CommentsSection/Comment/RepliesSection/ReplyBox/ReplyBox.tsx"],"names":["Avatar","Box","CircularProgress","makeStyles","Snackbar","withStyles","React","useState","Image","axios","useLocalState","backend_url","MAX_CHARACTER_COUNT","ReplyBox","commentId","setReplies","setComment","user","reply","setReply","isSending","setIsSending","showLoginAlert","setShowLoginAlert","classes","useStyles","handleSubmit","token","showAlert","length","postReply","handleChange","e","target","value","handleEnter","key","post","comment_id","comment","headers","Accept","Authorization","then","response","state","data","replies","unshift","setTimeout","picture","width","height","borderRadius","marginRight","padding","border","charactersCount","vertical","horizontal","Container","root","display","marginTop","alignItems","marginBottom","ImageContainer","justifyContent","cursor","InputContainer","position","bottom","right","fontSize","fontWeight","color","props","LoginAlert","zIndex"],"mappings":"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","sourcesContent":["import {\n  Avatar,\n  Box,\n  CircularProgress,\n  makeStyles,\n  Snackbar,\n  withStyles,\n} from \"@material-ui/core\";\nimport React, { useContext, useState } from \"react\";\n\nimport Image from \"next/image\";\nimport axios from \"axios\";\nimport useLocalState from \"../../../../../../../custom-hooks/useLocalState\";\nimport { backend_url } from \"../../../../../../../url\";\nimport IPostCommentReply from \"../../../../../../../Models/IPostCommentReply\";\nimport IPostComment from \"../../../../../../../Models/IPostComment\";\n\ninterface IProps {\n  commentId: string;\n  setReplies: Function;\n  setComment: Function;\n}\n\nconst MAX_CHARACTER_COUNT = 200;\n\nconst ReplyBox: React.FC<IProps> = ({ commentId, setReplies, setComment }) => {\n  const [user] = useLocalState(\"user\", \"\");\n  const [reply, setReply] = useState<string>(\"\");\n  const [isSending, setIsSending] = useState<boolean>(false);\n  const [showLoginAlert, setShowLoginAlert] = useState<boolean>(false);\n\n  const classes = useStyles({ reply });\n\n  const handleSubmit = () => {\n    if (!user.token) {\n      showAlert();\n      return;\n    }\n\n    if (reply.length > MAX_CHARACTER_COUNT) return;\n    if (reply.length == 0) {\n      showAlert();\n      return;\n    }\n\n    postReply();\n  };\n\n  const handleChange = (e: any) => {\n    setReply(e.target.value);\n  };\n\n  const handleEnter = (e: any) => {\n    if (e.key === \"Enter\" && reply.length > 0) {\n      handleSubmit();\n    }\n  };\n\n  const postReply = () => {\n    setIsSending(true);\n    axios\n      .post(\n        `${backend_url}/api/comment/reply/store`,\n        {\n          comment_id: commentId,\n          comment: reply,\n        },\n        {\n          headers: {\n            Accept: \"application/json\",\n            Authorization: `Bearer ${user.token}`,\n          },\n        }\n      )\n      .then((response) => {\n        setIsSending(false);\n\n        setReplies((state: IPostCommentReply[]) => [response.data, ...state]);\n\n        setComment((state: IPostComment) => {\n          const comment: IPostComment = { ...state };\n\n          return {\n            ...comment,\n            replies: replies.unshift(response.data),\n          };\n        });\n\n        setReply(\"\");\n      });\n  };\n\n  const showAlert = () => {\n    setShowLoginAlert(true);\n    setTimeout(() => {\n      setShowLoginAlert(false);\n    }, 3000);\n  };\n\n  return (\n    <Container>\n      <Avatar\n        src={user?.picture}\n        style={{\n          width: 35,\n          height: 35,\n          borderRadius: \"50%\",\n          marginRight: \"16px\",\n        }}\n      />\n      <InputContainer>\n        <input\n          type=\"text\"\n          placeholder={\n            user\n              ? \"Tell us what you think about this post!\"\n              : \"Login to post a reply!\"\n          }\n          value={reply}\n          onChange={handleChange}\n          onKeyDown={handleEnter}\n          style={{\n            width: \"100%\",\n            padding: \"12px\",\n            marginRight: \"16px\",\n            border: \"1px solid black\",\n          }}\n        />\n        <div\n          className={classes.charactersCount}\n        >{`${reply.length}/${MAX_CHARACTER_COUNT}`}</div>\n      </InputContainer>\n      <ImageContainer>\n        {isSending ? (\n          <CircularProgress size={25} color=\"inherit\" />\n        ) : (\n          <Image\n            src={`/assets/send_icon.svg`}\n            width={25}\n            height={25}\n            onClick={handleSubmit}\n          />\n        )}\n      </ImageContainer>\n\n      <LoginAlert\n        key={commentId}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n        open={showLoginAlert}\n        message={\n          !user.token\n            ? \"Login To Post A Reply!\"\n            : reply.length == 0\n            ? \"Reply Cannot Be Empty\"\n            : \"Some Error Occurred\"\n        }\n      />\n    </Container>\n  );\n};\n\nexport default ReplyBox;\n\nconst Container = withStyles({\n  root: {\n    width: \"100%\",\n    display: \"flex\",\n    marginTop: \"1.5rem\",\n    alignItems: \"center\",\n    marginBottom: \"1.5rem\",\n  },\n})(Box);\n\nconst ImageContainer = withStyles({\n  root: {\n    display: \"inline-flex\",\n    width: 35,\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    cursor: \"pointer\",\n  },\n})(Box);\n\nconst InputContainer = withStyles({\n  root: {\n    position: \"relative\",\n    display: \"flex\",\n    alignItems: \"center\",\n    width: \"100%\",\n  },\n})(Box);\n\nconst useStyles = makeStyles({\n  charactersCount: {\n    position: \"absolute\",\n    bottom: -22,\n    right: 20,\n    fontSize: \"0.8rem\",\n    fontWeight: 700,\n    color: (props: { reply: string }) => {\n      const { reply } = props;\n      if (reply.length > MAX_CHARACTER_COUNT) {\n        return \"red\";\n      }\n\n      return \"grey\";\n    },\n  },\n});\n\nconst LoginAlert = withStyles({\n  root: {\n    zIndex: 20000,\n  },\n})(Snackbar);\n"]},"metadata":{},"sourceType":"module"}