{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ishraqkabir/workspace/smartifier-frontend/Components/Question/Style2/Option/Option.tsx\";\nimport React, { useContext } from \"react\";\nimport { Box, makeStyles, Typography, withStyles } from \"@material-ui/core\";\nimport { QuestionContext } from \"../../../Questions/Questions\";\n\nconst Option = ({\n  option,\n  position,\n  isChecked\n}) => {\n  const {\n    answerType\n  } = useContext(QuestionContext);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [option.title && /*#__PURE__*/_jsxDEV(TextContainer, {\n      children: [/*#__PURE__*/_jsxDEV(OptionButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: `${String.fromCharCode(position + 64)}. ${option.title}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), isChecked && \"checked!\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Option;\nconst useStyles = makeStyles({\n  container: {\n    display: \"flex\",\n    alignItems: \"center\",\n    cursor: \"pointer\",\n    margin: \"0.3rem 0rem\",\n    marginBottom: \"2rem\",\n    width: \"100%\"\n  }\n});\nconst Container = withStyles({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    cursor: \"pointer\",\n    margin: \"0.3rem 0rem\",\n    marginBottom: \"2rem\",\n    width: \"100%\"\n  }\n})(Box);\nconst TextContainer = withStyles({\n  root: {\n    background: \"transparent linear-gradient(180deg, #995FD4 0%, #1F29356E 100%) 0% 0% no-repeat padding-box\",\n    width: \"100%\",\n    padding: \"1rem 1rem\",\n    borderRadius: 10,\n    display: \"flex\",\n    alignItems: \"center\"\n  }\n})(Box);\nconst OptionButton = withStyles({\n  root: {\n    padding: \"0.7rem\",\n    backgroundColor: \"#17ABC2\",\n    borderRadius: \"50%\",\n    overflow: \"hidden\",\n    marginRight: \"1rem\"\n  }\n})(Box);","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/Question/Style2/Option/Option.tsx"],"names":["React","useContext","Box","makeStyles","Typography","withStyles","QuestionContext","Option","option","position","isChecked","answerType","title","String","fromCharCode","useStyles","container","display","alignItems","cursor","margin","marginBottom","width","Container","root","TextContainer","background","padding","borderRadius","OptionButton","backgroundColor","overflow","marginRight"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,SAASC,GAAT,EAAcC,UAAd,EAA0BC,UAA1B,EAAsCC,UAAtC,QAAwD,mBAAxD;AAKA,SAASC,eAAT,QAAgC,8BAAhC;;AAQA,MAAMC,MAAwB,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,QAAV;AAAoBC,EAAAA;AAApB,CAAD,KAAqC;AACpE,QAAM;AAAEC,IAAAA;AAAF,MAAiBV,UAAU,CAACK,eAAD,CAAjC;AAEA,sBACE,QAAC,SAAD;AAAA,eACGE,MAAM,CAACI,KAAP,iBACC,QAAC,aAAD;AAAA,8BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,UAAD;AAAA,kBAAc,GAAEC,MAAM,CAACC,YAAP,CAAoBL,QAAQ,GAAG,EAA/B,CAAmC,KACjDD,MAAM,CAACI,KACR;AAFD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EASGF,SAAS,IAAI,UAThB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAhBD;;AAkBA,eAAeH,MAAf;AAEA,MAAMQ,SAAS,GAAGZ,UAAU,CAAC;AAC3Ba,EAAAA,SAAS,EAAE;AACTC,IAAAA,OAAO,EAAE,MADA;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,MAAM,EAAE,SAHC;AAITC,IAAAA,MAAM,EAAE,aAJC;AAKTC,IAAAA,YAAY,EAAE,MALL;AAMTC,IAAAA,KAAK,EAAE;AANE;AADgB,CAAD,CAA5B;AAWA,MAAMC,SAAS,GAAGlB,UAAU,CAAC;AAC3BmB,EAAAA,IAAI,EAAE;AACJP,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,UAAU,EAAE,QAFR;AAGJC,IAAAA,MAAM,EAAE,SAHJ;AAIJC,IAAAA,MAAM,EAAE,aAJJ;AAKJC,IAAAA,YAAY,EAAE,MALV;AAMJC,IAAAA,KAAK,EAAE;AANH;AADqB,CAAD,CAAV,CASfpB,GATe,CAAlB;AAWA,MAAMuB,aAAa,GAAGpB,UAAU,CAAC;AAC/BmB,EAAAA,IAAI,EAAE;AACJE,IAAAA,UAAU,EACR,6FAFE;AAGJJ,IAAAA,KAAK,EAAE,MAHH;AAIJK,IAAAA,OAAO,EAAE,WAJL;AAKJC,IAAAA,YAAY,EAAE,EALV;AAMJX,IAAAA,OAAO,EAAE,MANL;AAOJC,IAAAA,UAAU,EAAE;AAPR;AADyB,CAAD,CAAV,CAUnBhB,GAVmB,CAAtB;AAYA,MAAM2B,YAAY,GAAGxB,UAAU,CAAC;AAC9BmB,EAAAA,IAAI,EAAE;AACJG,IAAAA,OAAO,EAAE,QADL;AAEJG,IAAAA,eAAe,EAAE,SAFb;AAGJF,IAAAA,YAAY,EAAE,KAHV;AAIJG,IAAAA,QAAQ,EAAE,QAJN;AAKJC,IAAAA,WAAW,EAAE;AALT;AADwB,CAAD,CAAV,CAQlB9B,GARkB,CAArB","sourcesContent":["import React, { useContext } from \"react\";\n\nimport { Box, makeStyles, Typography, withStyles } from \"@material-ui/core\";\nimport IOption from \"../../../../Models/IOption\";\n\nimport Image from \"next/image\";\nimport { local_backend_url } from \"../../../../url\";\nimport { QuestionContext } from \"../../../Questions/Questions\";\n\ninterface IProps {\n  option: IOption;\n  position: number;\n  isChecked?: boolean;\n}\n\nconst Option: React.FC<IProps> = ({ option, position, isChecked }) => {\n  const { answerType } = useContext(QuestionContext);\n\n  return (\n    <Container>\n      {option.title && (\n        <TextContainer>\n          <OptionButton />\n          <Typography>{`${String.fromCharCode(position + 64)}. ${\n            option.title\n          }`}</Typography>\n        </TextContainer>\n      )}\n      {isChecked && \"checked!\"}\n    </Container>\n  );\n};\n\nexport default Option;\n\nconst useStyles = makeStyles({\n  container: {\n    display: \"flex\",\n    alignItems: \"center\",\n    cursor: \"pointer\",\n    margin: \"0.3rem 0rem\",\n    marginBottom: \"2rem\",\n    width: \"100%\",\n  },\n});\n\nconst Container = withStyles({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    cursor: \"pointer\",\n    margin: \"0.3rem 0rem\",\n    marginBottom: \"2rem\",\n    width: \"100%\",\n  },\n})(Box);\n\nconst TextContainer = withStyles({\n  root: {\n    background:\n      \"transparent linear-gradient(180deg, #995FD4 0%, #1F29356E 100%) 0% 0% no-repeat padding-box\",\n    width: \"100%\",\n    padding: \"1rem 1rem\",\n    borderRadius: 10,\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n})(Box);\n\nconst OptionButton = withStyles({\n  root: {\n    padding: \"0.7rem\",\n    backgroundColor: \"#17ABC2\",\n    borderRadius: \"50%\",\n    overflow: \"hidden\",\n    marginRight: \"1rem\",\n  },\n})(Box);\n"]},"metadata":{},"sourceType":"module"}