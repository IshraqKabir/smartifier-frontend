{"ast":null,"code":"import { useState, useEffect } from \"react\";\nimport Cookies from \"js-cookie\";\n\nconst setCookie = (key, value) => {\n  Cookies.set(JSON.stringify(key), JSON.stringify(value));\n};\n\nconst getCookie = key => {\n  return JSON.parse(JSON.stringify(key));\n};\n\nfunction useLocalState(key, defaultValue) {\n  const {\n    0: value,\n    1: setValue\n  } = useState(() => {\n    let result = null;\n\n    if (false) {\n      const storedValue = JSON.parse(localStorage.getItem(key));\n\n      if (!storedValue) {\n        result = defaultValue;\n      }\n\n      result = storedValue === null ? defaultValue : storedValue;\n    } else {\n      result = defaultValue;\n    }\n\n    if (!result) {\n      result = getCookie(key);\n    }\n\n    return result;\n  });\n  useEffect(() => {\n    const listener = e => {\n      if (e.storageArea === localStorage && e.key === key) {\n        setValue(JSON.parse(e.newValue));\n      }\n    };\n\n    window.addEventListener(\"storage\", listener);\n    return () => {\n      window.removeEventListener(\"storage\", listener);\n    };\n  }, [key]);\n\n  const setValueInLocalStorage = newValue => {\n    if (typeof newValue === \"function\") {\n      setCookie(key, value);\n    } else {\n      setCookie(key, newValue);\n    }\n\n    setValue(currentValue => {\n      const result = typeof newValue === \"function\" ? newValue(currentValue) : newValue;\n      localStorage.setItem(key, JSON.stringify(result));\n      return result;\n    });\n  };\n\n  useEffect(() => {\n    const storedValue = JSON.parse(localStorage.getItem(key));\n\n    if (storedValue) {\n      setValueInLocalStorage(storedValue);\n    } else {\n      setValueInLocalStorage(value);\n    }\n  }, []);\n  return [value, setValueInLocalStorage];\n}\n\nexport default useLocalState;","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/custom-hooks/useLocalState.ts"],"names":["useState","useEffect","Cookies","setCookie","key","value","set","JSON","stringify","getCookie","parse","useLocalState","defaultValue","setValue","result","storedValue","localStorage","getItem","listener","e","storageArea","newValue","window","addEventListener","removeEventListener","setValueInLocalStorage","currentValue","setItem"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport Cookies from \"js-cookie\";\n\nconst setCookie = (key, value) => {\n  Cookies.set(JSON.stringify(key), JSON.stringify(value));\n};\n\nconst getCookie = (key) => {\n  return JSON.parse((JSON.stringify(key)));\n};\n\nfunction useLocalState<T>(key: string, defaultValue: T) {\n  const [value, setValue] = useState(() => {\n    let result = null;\n    if (process.browser) {\n      const storedValue = JSON.parse(localStorage.getItem(key));\n      if (!storedValue) {\n        result = defaultValue;\n      }\n      result = storedValue === null ? defaultValue : storedValue;\n    } else {\n      result = defaultValue;\n    }\n\n    if (!result) {\n      result = getCookie(key);\n    }\n\n    return result;\n  });\n\n  useEffect(() => {\n    const listener = (e) => {\n      if (e.storageArea === localStorage && e.key === key) {\n        setValue(JSON.parse(e.newValue));\n      }\n    };\n    window.addEventListener(\"storage\", listener);\n\n    return () => {\n      window.removeEventListener(\"storage\", listener);\n    };\n  }, [key]);\n\n  const setValueInLocalStorage = (newValue) => {\n    if (typeof newValue === \"function\") {\n      setCookie(key, value);\n    } else {\n      setCookie(key, newValue);\n    }\n\n    setValue((currentValue) => {\n      const result =\n        typeof newValue === \"function\" ? newValue(currentValue) : newValue;\n      localStorage.setItem(key, JSON.stringify(result));\n      return result;\n    });\n  };\n\n  useEffect(() => {\n    const storedValue = JSON.parse(localStorage.getItem(key));\n    if (storedValue) {\n      setValueInLocalStorage(storedValue);\n    } else {\n      setValueInLocalStorage(value);\n    }\n  }, []);\n\n  return [value, setValueInLocalStorage];\n}\n\nexport default useLocalState;\n"]},"metadata":{},"sourceType":"module"}