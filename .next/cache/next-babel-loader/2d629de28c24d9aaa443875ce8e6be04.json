{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ishraqkabir/workspace/smartifier-frontend/Components/QuizTest/QuizTest.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, CircularProgress, Typography, withStyles } from \"@material-ui/core\";\nimport Questions from \"./Questions/Questions\";\nimport useQuizTest from \"./useQuizTest\";\nexport default function QuizTest(_ref) {\n  _s();\n\n  var quizId = _ref.quizId;\n\n  var _useQuizTest = useQuizTest(quizId),\n      quiz = _useQuizTest.quiz,\n      test = _useQuizTest.test,\n      testStatus = _useQuizTest.testStatus,\n      isLoading = _useQuizTest.isLoading;\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [isLoading && /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 21\n    }, this), testStatus === \"highest_attempt_count_reached\" && /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      color: \"error\",\n      children: \"You have reached the highest attempt count.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), !isLoading && testStatus !== \"highest_attempt_count_reached\" && quiz && /*#__PURE__*/_jsxDEV(Questions, {\n      questions: quiz === null || quiz === void 0 ? void 0 : quiz.questions,\n      quizTitle: quiz === null || quiz === void 0 ? void 0 : quiz.title,\n      isAssessment: (quiz === null || quiz === void 0 ? void 0 : quiz.assessment) !== null ? quiz.assessment : false,\n      quizId: quiz === null || quiz === void 0 ? void 0 : quiz.id,\n      duration: quiz === null || quiz === void 0 ? void 0 : quiz.duration,\n      test: test\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(QuizTest, \"IfgoO7pw1kVPQiT9KH/YF0OPD6c=\", false, function () {\n  return [useQuizTest];\n});\n\n_c = QuizTest;\nvar Container = withStyles({\n  root: {\n    display: \"flex\",\n    width: \"100vw\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: \"5rem 0rem\",\n    backgroundColor: \"#f0f2f5\",\n    overflowY: \"scroll\"\n  }\n})(Box);\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizTest\");","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/QuizTest/QuizTest.tsx"],"names":["Box","CircularProgress","Typography","withStyles","Questions","useQuizTest","QuizTest","quizId","quiz","test","testStatus","isLoading","questions","title","assessment","id","duration","Container","root","display","width","flexDirection","alignItems","padding","backgroundColor","overflowY"],"mappings":";;;;;AAAA,SACEA,GADF,EAEEC,gBAFF,EAGEC,UAHF,EAIEC,UAJF,QAKO,mBALP;AAMA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAMA,eAAe,SAASC,QAAT,OAAsC;AAAA;;AAAA,MAAlBC,MAAkB,QAAlBA,MAAkB;;AAAA,qBACLF,WAAW,CAACE,MAAD,CADN;AAAA,MAC3CC,IAD2C,gBAC3CA,IAD2C;AAAA,MACrCC,IADqC,gBACrCA,IADqC;AAAA,MAC/BC,UAD+B,gBAC/BA,UAD+B;AAAA,MACnBC,SADmB,gBACnBA,SADmB;;AAGnD,sBACE,QAAC,SAAD;AAAA,eACGA,SAAS,iBAAI,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,YADhB,EAEGD,UAAU,KAAK,+BAAf,iBACC,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAyB,MAAA,KAAK,EAAC,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,EAOG,CAACC,SAAD,IAAcD,UAAU,KAAK,+BAA7B,IAAgEF,IAAhE,iBACC,QAAC,SAAD;AACE,MAAA,SAAS,EAAEA,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEI,SADnB;AAEE,MAAA,SAAS,EAAEJ,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEK,KAFnB;AAGE,MAAA,YAAY,EAAE,CAAAL,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEM,UAAN,MAAqB,IAArB,GAA4BN,IAAI,CAACM,UAAjC,GAA8C,KAH9D;AAIE,MAAA,MAAM,EAAEN,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEO,EAJhB;AAKE,MAAA,QAAQ,EAAEP,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEQ,QALlB;AAME,MAAA,IAAI,EAAEP;AANR;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GAvBuBH,Q;UACwBD,W;;;KADxBC,Q;AAyBxB,IAAMW,SAAS,GAAGd,UAAU,CAAC;AAC3Be,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,KAAK,EAAE,OAFH;AAGJC,IAAAA,aAAa,EAAE,QAHX;AAIJC,IAAAA,UAAU,EAAE,QAJR;AAKJC,IAAAA,OAAO,EAAE,WALL;AAMJC,IAAAA,eAAe,EAAE,SANb;AAOJC,IAAAA,SAAS,EAAE;AAPP;AADqB,CAAD,CAAV,CAUfzB,GAVe,CAAlB","sourcesContent":["import {\n  Box,\n  CircularProgress,\n  Typography,\n  withStyles,\n} from \"@material-ui/core\";\nimport Questions from \"./Questions/Questions\";\nimport useQuizTest from \"./useQuizTest\";\n\ninterface IProps {\n  quizId: number;\n}\n\nexport default function QuizTest({ quizId }: IProps) {\n  const { quiz, test, testStatus, isLoading } = useQuizTest(quizId);\n\n  return (\n    <Container>\n      {isLoading && <CircularProgress />}\n      {testStatus === \"highest_attempt_count_reached\" && (\n        <Typography variant=\"h6\" color=\"error\">\n          You have reached the highest attempt count.\n        </Typography>\n      )}\n      {!isLoading && testStatus !== \"highest_attempt_count_reached\" && quiz && (\n        <Questions\n          questions={quiz?.questions}\n          quizTitle={quiz?.title}\n          isAssessment={quiz?.assessment !== null ? quiz.assessment : false}\n          quizId={quiz?.id}\n          duration={quiz?.duration}\n          test={test}\n        />\n      )}\n    </Container>\n  );\n}\n\nconst Container = withStyles({\n  root: {\n    display: \"flex\",\n    width: \"100vw\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: \"5rem 0rem\",\n    backgroundColor: \"#f0f2f5\",\n    overflowY: \"scroll\",\n  },\n})(Box);\n"]},"metadata":{},"sourceType":"module"}