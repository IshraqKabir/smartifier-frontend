{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ishraqkabir/workspace/smartifier-frontend/pages/authresp/google.tsx\";\nimport React, { useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport { local_backend_url } from \"../../url\";\nimport useUserCookie from \"../../custom-hooks/useUserCookie\";\n\nconst Google = () => {\n  const router = useRouter();\n  const {\n    code\n  } = router.query;\n  const [user, setUser] = useUserCookie(\"user\", \"\");\n  useEffect(() => {\n    if (code) {\n      axios({\n        method: \"get\",\n        url: `/api/auth/google?get=user&code=${code}`\n      }).then(res => {\n        const id_token = res.data.user.data.id_token;\n        axios({\n          method: \"GET\",\n          url: `https://oauth2.googleapis.com/tokeninfo?id_token=${id_token}`\n        }).then(response => {\n          console.log(response.data);\n          const {\n            email,\n            email_verified,\n            at_hash,\n            name,\n            picture\n          } = response.data;\n          axios.post(`${local_backend_url}/api/auth/googleSignIn`, {\n            id_token: id_token,\n            email: email,\n            at_hash: at_hash,\n            email_verified: email_verified === \"true\" ? true : false,\n            name: name,\n            picture: picture\n          }).then(response => {\n            const token = response.data;\n            const user = {\n              email: email,\n              name: name,\n              picture: picture,\n              token: token\n            };\n            console.log(user);\n            setUser(user);\n          }).catch(error => setUser(\"\"));\n        });\n      });\n    }\n  }, [code]);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"hello\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 10\n  }, this);\n};\n\nexport default Google;","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/pages/authresp/google.tsx"],"names":["React","useEffect","useRouter","axios","local_backend_url","useUserCookie","Google","router","code","query","user","setUser","method","url","then","res","id_token","data","response","console","log","email","email_verified","at_hash","name","picture","post","token","catch","error"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAAsBC,iBAAtB,QAA+C,WAA/C;AACA,OAAOC,aAAP,MAA0B,kCAA1B;;AAIA,MAAMC,MAAwB,GAAG,MAAM;AACrC,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAWD,MAAM,CAACE,KAAxB;AAEA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,aAAa,CAAM,MAAN,EAAc,EAAd,CAArC;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,IAAJ,EAAU;AACRL,MAAAA,KAAK,CAAC;AACJS,QAAAA,MAAM,EAAE,KADJ;AAEJC,QAAAA,GAAG,EAAG,kCAAiCL,IAAK;AAFxC,OAAD,CAAL,CAGGM,IAHH,CAGSC,GAAD,IAAS;AACf,cAAMC,QAAQ,GAAGD,GAAG,CAACE,IAAJ,CAASP,IAAT,CAAcO,IAAd,CAAmBD,QAApC;AAEAb,QAAAA,KAAK,CAAC;AACJS,UAAAA,MAAM,EAAE,KADJ;AAEJC,UAAAA,GAAG,EAAG,oDAAmDG,QAAS;AAF9D,SAAD,CAAL,CAGGF,IAHH,CAGSI,QAAD,IAAmB;AACzBC,UAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACD,IAArB;AACA,gBAAM;AACJI,YAAAA,KADI;AAEJC,YAAAA,cAFI;AAGJC,YAAAA,OAHI;AAIJC,YAAAA,IAJI;AAKJC,YAAAA;AALI,cAMFP,QAAQ,CAACD,IANb;AAQAd,UAAAA,KAAK,CACFuB,IADH,CACS,GAAEtB,iBAAkB,wBAD7B,EACsD;AAClDY,YAAAA,QAAQ,EAAEA,QADwC;AAElDK,YAAAA,KAAK,EAAEA,KAF2C;AAGlDE,YAAAA,OAAO,EAAEA,OAHyC;AAIlDD,YAAAA,cAAc,EAAEA,cAAc,KAAK,MAAnB,GAA4B,IAA5B,GAAmC,KAJD;AAKlDE,YAAAA,IAAI,EAAEA,IAL4C;AAMlDC,YAAAA,OAAO,EAAEA;AANyC,WADtD,EASGX,IATH,CASSI,QAAD,IAAc;AAClB,kBAAMS,KAAK,GAAGT,QAAQ,CAACD,IAAvB;AAEA,kBAAMP,IAAI,GAAG;AACXW,cAAAA,KAAK,EAAEA,KADI;AAEXG,cAAAA,IAAI,EAAEA,IAFK;AAGXC,cAAAA,OAAO,EAAEA,OAHE;AAIXE,cAAAA,KAAK,EAAEA;AAJI,aAAb;AAOAR,YAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AAEAC,YAAAA,OAAO,CAACD,IAAD,CAAP;AACD,WAtBH,EAuBGkB,KAvBH,CAuBUC,KAAD,IAAWlB,OAAO,CAAC,EAAD,CAvB3B;AAwBD,SArCD;AAsCD,OA5CD;AA6CD;AACF,GAhDQ,EAgDN,CAACH,IAAD,CAhDM,CAAT;AAkDA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAzDD;;AA2DA,eAAeF,MAAf","sourcesContent":["import React, { useEffect } from \"react\";\n\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport post from \"../../UtilFunctions/post\";\nimport { backend_url, local_backend_url } from \"../../url\";\nimport useUserCookie from \"../../custom-hooks/useUserCookie\";\n\ninterface IProps {}\n\nconst Google: React.FC<IProps> = () => {\n  const router = useRouter();\n  const { code } = router.query;\n\n  const [user, setUser] = useUserCookie<any>(\"user\", \"\");\n\n  useEffect(() => {\n    if (code) {\n      axios({\n        method: \"get\",\n        url: `/api/auth/google?get=user&code=${code}`,\n      }).then((res) => {\n        const id_token = res.data.user.data.id_token;\n\n        axios({\n          method: \"GET\",\n          url: `https://oauth2.googleapis.com/tokeninfo?id_token=${id_token}`,\n        }).then((response: any) => {\n          console.log(response.data);\n          const {\n            email,\n            email_verified,\n            at_hash,\n            name,\n            picture,\n          } = response.data;\n\n          axios\n            .post(`${local_backend_url}/api/auth/googleSignIn`, {\n              id_token: id_token,\n              email: email,\n              at_hash: at_hash,\n              email_verified: email_verified === \"true\" ? true : false,\n              name: name,\n              picture: picture,\n            })\n            .then((response) => {\n              const token = response.data;\n\n              const user = {\n                email: email,\n                name: name,\n                picture: picture,\n                token: token,\n              };\n\n              console.log(user);\n\n              setUser(user);\n            })\n            .catch((error) => setUser(\"\"));\n        });\n      });\n    }\n  }, [code]);\n\n  return <p>hello</p>;\n};\n\nexport default Google;\n"]},"metadata":{},"sourceType":"module"}