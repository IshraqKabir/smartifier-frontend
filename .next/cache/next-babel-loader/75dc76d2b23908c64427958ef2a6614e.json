{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ishraqkabir/workspace/smartifier-frontend/Components/Post/SinglePost/CommentBox/CommentBox.tsx\";\nimport { Avatar, Box, makeStyles, withStyles } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport useLocalState from \"../../../../custom-hooks/useLocalState\";\nconst MAX_CHARACTER_COUNT = 200;\n\nconst CommentBox = ({\n  postId\n}) => {\n  const [user] = useLocalState(\"user\", \"\");\n  const {\n    0: comment,\n    1: setComment\n  } = useState(\"\");\n  const {\n    0: isSending,\n    1: setIsSending\n  } = useState(false);\n  const classes = useStyles({\n    comment\n  });\n\n  const handleSubmit = () => {};\n\n  const handleChange = e => {\n    setComment(e.target.value);\n  };\n\n  const handleEnter = e => {\n    if (e.key === \"Enter\" && comment.length > 0) {\n      postComment();\n    }\n  };\n\n  const postComment = () => {};\n\n  if (!user.token) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        margin: \"20px 0px\"\n      },\n      children: \"Login to post a comment!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Avatar, {\n      src: user === null || user === void 0 ? void 0 : user.picture,\n      style: {\n        width: 35,\n        height: 35,\n        borderRadius: \"50%\",\n        marginRight: \"16px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Tell us what you think about this post...\",\n        value: comment,\n        onChange: handleChange,\n        onKeyDown: handleEnter,\n        style: {\n          width: \"100%\",\n          padding: \"12px\",\n          marginRight: \"16px\",\n          border: \"1px solid black\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.charactersCount,\n        children: `${comment.length}/${MAX_CHARACTER_COUNT}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ImageContainter, {\n      children: /*#__PURE__*/_jsxDEV(Avatar, {\n        src: `/assets/send_icon.svg`,\n        width: 25,\n        style: {},\n        height: 25,\n        onClick: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\nexport default CommentBox;\nconst Container = withStyles({\n  root: {\n    width: \"100%\",\n    display: \"flex\",\n    marginTop: \"1.5rem\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\"\n  }\n})(Box);\nconst ImageContainter = withStyles({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    cursor: \"pointer\"\n  }\n})(Box);\nconst InputContainer = withStyles({\n  root: {\n    position: \"relative\",\n    display: \"flex\",\n    alignItems: \"center\",\n    width: \"100%\"\n  }\n})(Box);\nconst useStyles = makeStyles({\n  charactersCount: {\n    position: \"absolute\",\n    bottom: -22,\n    right: 20,\n    fontSize: \"0.8rem\",\n    fontWeight: 700,\n    color: props => {\n      const {\n        comment\n      } = props;\n\n      if (comment.length > MAX_CHARACTER_COUNT) {\n        return \"red\";\n      }\n\n      return \"grey\";\n    }\n  }\n});","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/Post/SinglePost/CommentBox/CommentBox.tsx"],"names":["Avatar","Box","makeStyles","withStyles","React","useState","useLocalState","MAX_CHARACTER_COUNT","CommentBox","postId","user","comment","setComment","isSending","setIsSending","classes","useStyles","handleSubmit","handleChange","e","target","value","handleEnter","key","length","postComment","token","margin","picture","width","height","borderRadius","marginRight","padding","border","charactersCount","Container","root","display","marginTop","alignItems","justifyContent","ImageContainter","cursor","InputContainer","position","bottom","right","fontSize","fontWeight","color","props"],"mappings":"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","sourcesContent":["import {\n  Avatar,\n  Box,\n  CircularProgress,\n  makeStyles,\n  withStyles,\n} from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport useLocalState from \"../../../../custom-hooks/useLocalState\";\n\nimport Image from \"next/image\";\n\ninterface IProps {\n  postId: string;\n}\n\nconst MAX_CHARACTER_COUNT = 200;\n\nconst CommentBox: React.FC<IProps> = ({ postId }) => {\n  const [user] = useLocalState(\"user\", \"\");\n  const [comment, setComment] = useState<string>(\"\");\n  const [isSending, setIsSending] = useState<boolean>(false);\n\n  const classes = useStyles({ comment });\n\n  const handleSubmit = () => {};\n\n  const handleChange = (e: any) => {\n    setComment(e.target.value);\n  };\n\n  const handleEnter = (e: any) => {\n    if (e.key === \"Enter\" && comment.length > 0) {\n      postComment();\n    }\n  };\n\n  const postComment = () => {};\n\n  if (!user.token) {\n    return <p style={{ margin: \"20px 0px\" }}>Login to post a comment!</p>;\n  }\n\n  return (\n    <Container>\n      <Avatar\n        src={user?.picture}\n        style={{\n          width: 35,\n          height: 35,\n          borderRadius: \"50%\",\n          marginRight: \"16px\",\n        }}\n      />\n      <InputContainer>\n        <input\n          type=\"text\"\n          placeholder=\"Tell us what you think about this post...\"\n          value={comment}\n          onChange={handleChange}\n          onKeyDown={handleEnter}\n          style={{\n            width: \"100%\",\n            padding: \"12px\",\n            marginRight: \"16px\",\n            border: \"1px solid black\",\n          }}\n        />\n        <div\n          className={classes.charactersCount}\n        >{`${comment.length}/${MAX_CHARACTER_COUNT}`}</div>\n      </InputContainer>\n      <ImageContainter>\n        {/* {isSending ? (\n          <CircularProgress size={25} color=\"inherit\" />\n        ) : (\n          <Image\n            src={`/assets/send_icon.svg`}\n            width={25}\n            height={25}\n            onClick={handleSubmit}\n          />\n        )} */}\n        <Avatar\n          src={`/assets/send_icon.svg`}\n          width={25}\n          style={{\n              \n          }}\n          height={25}\n          onClick={handleSubmit}\n        />\n      </ImageContainter>\n    </Container>\n  );\n};\n\nexport default CommentBox;\n\nconst Container = withStyles({\n  root: {\n    width: \"100%\",\n    display: \"flex\",\n    marginTop: \"1.5rem\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  },\n})(Box);\n\nconst ImageContainter = withStyles({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    cursor: \"pointer\",\n  },\n})(Box);\n\nconst InputContainer = withStyles({\n  root: {\n    position: \"relative\",\n    display: \"flex\",\n    alignItems: \"center\",\n    width: \"100%\",\n  },\n})(Box);\n\nconst useStyles = makeStyles({\n  charactersCount: {\n    position: \"absolute\",\n    bottom: -22,\n    right: 20,\n    fontSize: \"0.8rem\",\n    fontWeight: 700,\n    color: (props: { comment: string }) => {\n      const { comment } = props;\n      if (comment.length > MAX_CHARACTER_COUNT) {\n        return \"red\";\n      }\n\n      return \"grey\";\n    },\n  },\n});\n"]},"metadata":{},"sourceType":"module"}