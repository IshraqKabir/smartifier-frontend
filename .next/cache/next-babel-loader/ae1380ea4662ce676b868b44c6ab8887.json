{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ishraqkabir/workspace/smartifier-frontend/Components/Post/SinglePost/PostBody/PostBody.tsx\",\n    _this = this;\n\nimport React from \"react\";\nimport parse from \"html-react-parser\";\nvar options;\n\nvar PostBody = function PostBody(_ref) {\n  var body = _ref.body;\n  var el = parse(\"\".concat(body), {\n    replace: function replace(domNode) {\n      if (domNode.attribs && domNode.attribs.id === \"replace\") {\n        console.log(domNode.attribs);\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"replaced\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 16\n        }, _this);\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: el\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 10\n  }, _this);\n};\n\n_c = PostBody;\nexport default PostBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostBody\");","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/Post/SinglePost/PostBody/PostBody.tsx"],"names":["React","parse","options","PostBody","body","el","replace","domNode","attribs","id","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,KAAP,MAA8C,mBAA9C;AAMA,IAAMC,OAAN;;AAEA,IAAMC,QAA0B,GAAG,SAA7BA,QAA6B,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAC/C,MAAMC,EAAE,GAAGJ,KAAK,WAAIG,IAAJ,GAAY;AAC1BE,IAAAA,OAAO,EAAE,iBAACC,OAAD,EAAkB;AACzB,UAAIA,OAAO,CAACC,OAAR,IAAmBD,OAAO,CAACC,OAAR,CAAgBC,EAAhB,KAAuB,SAA9C,EAAyD;AACvDC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAO,CAACC,OAApB;AACA,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AACD;AACF;AANyB,GAAZ,CAAhB;AASA,sBAAO;AAAA,cAAMH;AAAN;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CAXD;;KAAMF,Q;AAaN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\n\nimport parse, { HTMLReactParserOptions } from \"html-react-parser\";\n\ninterface IProps {\n  body: string;\n}\n\nconst options: HTMLReactParserOptions\n\nconst PostBody: React.FC<IProps> = ({ body }) => {\n  const el = parse(`${body}`, {\n    replace: (domNode: any) => {\n      if (domNode.attribs && domNode.attribs.id === \"replace\") {\n        console.log(domNode.attribs);\n        return <span>replaced</span>;\n      }\n    },\n  });\n\n  return <div>{el}</div>;\n};\n\nexport default PostBody;\n"]},"metadata":{},"sourceType":"module"}