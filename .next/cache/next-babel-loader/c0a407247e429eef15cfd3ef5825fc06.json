{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ishraqkabir/workspace/smartifier-frontend/Components/QuizTest/Timer/Timer.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Box, makeStyles, withStyles } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\n\nvar Timer = function Timer(_ref) {\n  _s();\n\n  var start_time = _ref.start_time,\n      duration = _ref.duration;\n\n  var _useState = useState(getTimeRemainingInSeconds(start_time, duration)),\n      secondsRemaining = _useState[0],\n      setSecondsRemaining = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      timeRemaining = _useState2[0],\n      setTimeRemaing = _useState2[1];\n\n  useEffect(function () {\n    setInterval(function () {\n      setSecondsRemaining(getTimeRemainingInSeconds(start_time, duration));\n    }, 500);\n  }, []);\n  useEffect(function () {\n    if (secondsRemaining <= 0) {\n      setTimeRemaing(\"Test Finished\");\n    } else {\n      setTimeRemaing(parseSecondsToClock(secondsRemaining));\n    }\n  }, [secondsRemaining]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: \"\".concat(timeRemaining)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 10\n  }, _this);\n};\n\n_s(Timer, \"0kWIqHwvaalR7NiOWcK+nyQ1I6A=\");\n\n_c = Timer;\nexport default Timer;\nvar Container = withStyles({\n  root: {\n    position: \"fixed\",\n    bottom: 0,\n    left: 0,\n    right: 0,\n    padding: \"1.5rem 5rem\",\n    background: \"transparent linear-gradient(180deg, #003EAA 0%, #002461E0 100%) 0% 0% no-repeat padding-box\",\n    color: \"white\",\n    fontWeight: \"bold\",\n    opacity: 0.6\n  }\n})(Box);\nvar useStyles = makeStyles({\n  loader: {\n    position: \"fixed\"\n  }\n});\n\nfunction getTimeRemainingInSeconds(start_time, duration) {\n  var totalDurationInSeconds = getSecondsFromDuration(duration);\n  var start = new Date(\"\".concat(start_time));\n  var now = new Date();\n  var end = new Date(\"\".concat(start_time));\n  end.setTime(start.getTime() + totalDurationInSeconds * 1000);\n  var secondsLeft = (end.getTime() - now.getTime()) / 1000;\n  return Math.floor(secondsLeft);\n}\n\nfunction getSecondsFromDuration(duration) {\n  var _duration$split = duration.split(\":\"),\n      _duration$split2 = _slicedToArray(_duration$split, 3),\n      hours = _duration$split2[0],\n      mins = _duration$split2[1],\n      seconds = _duration$split2[2];\n\n  var totalSeconds = 0;\n  totalSeconds += parseInt(hours) * 60 * 60;\n  totalSeconds += parseInt(mins) * 60;\n  totalSeconds += parseInt(seconds);\n  return totalSeconds;\n}\n\nfunction parseSecondsToClock(secondsRemaining) {\n  var mins = Math.floor(secondsRemaining / 60);\n  var seconds = Math.floor(secondsRemaining % 60);\n  return \"\".concat(mins < 10 ? \"0\".concat(mins) : mins, \":\").concat(seconds < 10 ? \"0\".concat(seconds) : seconds);\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/QuizTest/Timer/Timer.tsx"],"names":["Box","makeStyles","withStyles","React","useEffect","useState","Timer","start_time","duration","getTimeRemainingInSeconds","secondsRemaining","setSecondsRemaining","timeRemaining","setTimeRemaing","setInterval","parseSecondsToClock","Container","root","position","bottom","left","right","padding","background","color","fontWeight","opacity","useStyles","loader","totalDurationInSeconds","getSecondsFromDuration","start","Date","now","end","setTime","getTime","secondsLeft","Math","floor","split","hours","mins","seconds","totalSeconds","parseInt"],"mappings":"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","sourcesContent":["import { Box, makeStyles, withStyles } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\n\ninterface IProps {\n  start_time: string;\n  duration: string;\n}\n\nconst Timer: React.FC<IProps> = ({ start_time, duration }) => {\n  const [secondsRemaining, setSecondsRemaining] = useState<number>(\n    getTimeRemainingInSeconds(start_time, duration)\n  );\n\n  const [timeRemaining, setTimeRemaing] = useState<string>(\"\");\n\n  useEffect(() => {\n    setInterval(() => {\n      setSecondsRemaining(getTimeRemainingInSeconds(start_time, duration));\n    }, 500);\n  }, []);\n\n  useEffect(() => {\n    if (secondsRemaining <= 0) {\n      setTimeRemaing(\"Test Finished\");\n    } else {\n      setTimeRemaing(parseSecondsToClock(secondsRemaining));\n    }\n  }, [secondsRemaining]);\n\n  return <Container>{`${timeRemaining}`}</Container>;\n};\n\nexport default Timer;\n\nconst Container = withStyles({\n  root: {\n    position: \"fixed\",\n    bottom: 0,\n    left: 0,\n    right: 0,\n    padding: \"1.5rem 5rem\",\n    background:\n      \"transparent linear-gradient(180deg, #003EAA 0%, #002461E0 100%) 0% 0% no-repeat padding-box\",\n    color: \"white\",\n    fontWeight: \"bold\",\n    opacity: 0.6,\n  },\n})(Box);\n\nconst useStyles = makeStyles({\n  loader: {\n    position: \"fixed\",\n  },\n});\n\nfunction getTimeRemainingInSeconds(\n  start_time: string,\n  duration: string\n): number {\n  const totalDurationInSeconds: number = getSecondsFromDuration(duration);\n\n  const start = new Date(`${start_time}`);\n  const now = new Date();\n  const end = new Date(`${start_time}`);\n  end.setTime(start.getTime() + totalDurationInSeconds * 1000);\n\n  const secondsLeft: number = (end.getTime() - now.getTime()) / 1000;\n\n  return Math.floor(secondsLeft);\n}\n\nfunction getSecondsFromDuration(duration: string): number {\n  const [hours, mins, seconds] = duration.split(\":\");\n\n  let totalSeconds: number = 0;\n  totalSeconds += parseInt(hours) * 60 * 60;\n  totalSeconds += parseInt(mins) * 60;\n  totalSeconds += parseInt(seconds);\n\n  return totalSeconds;\n}\n\nfunction parseSecondsToClock(secondsRemaining: number): string {\n  const mins = Math.floor(secondsRemaining / 60);\n  const seconds = Math.floor(secondsRemaining % 60);\n\n  return `${mins < 10 ? `0${mins}` : mins}:${\n    seconds < 10 ? `0${seconds}` : seconds\n  }`;\n}\n"]},"metadata":{},"sourceType":"module"}