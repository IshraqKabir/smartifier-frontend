{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Box, withStyles } from \"@material-ui/core\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { CommentContext } from \"../Comment\";\nimport Reply from \"./Reply/Reply\";\nimport ReplyBox from \"./ReplyBox/ReplyBox\";\n\nconst RepliesSection = ({}) => {\n  const {\n    comment,\n    setComment,\n    setRepliesCount\n  } = useContext(CommentContext);\n  const {\n    0: replies,\n    1: setReplies\n  } = useState((comment === null || comment === void 0 ? void 0 : comment.replies) ? comment === null || comment === void 0 ? void 0 : comment.replies : []);\n  useEffect(() => {\n    setComment(state => {\n      const comment = _objectSpread({}, state);\n\n      comment.replies = [];\n      comment.replies = [...replies];\n      return comment;\n    });\n    setRepliesCount(replies.length);\n  }, [replies]);\n  return /*#__PURE__*/_jsxs(Container, {\n    children: [/*#__PURE__*/_jsx(ReplyBox, {\n      commentId: comment === null || comment === void 0 ? void 0 : comment.id,\n      setReplies: setReplies,\n      setComment: setComment\n    }), replies && replies.map(reply => {\n      return /*#__PURE__*/_jsx(Reply, {\n        reply: reply\n      }, reply.id);\n    })]\n  });\n};\n\nexport default RepliesSection;\nconst Container = withStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    borderBottom: \"1px solid grey\",\n    paddingBottom: \"0.5rem\",\n    paddingLeft: \"5rem\"\n  }\n})(Box);","map":null,"metadata":{},"sourceType":"module"}