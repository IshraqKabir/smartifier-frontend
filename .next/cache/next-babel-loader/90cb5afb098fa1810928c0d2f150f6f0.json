{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ishraqkabir/workspace/smartifier-frontend/Components/Question/Style1/Option/Option.tsx\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Box, Typography, withStyles } from \"@material-ui/core\";\nimport Image from \"next/image\";\nimport { local_backend_url } from \"../../../../url\";\nimport useOptionClicked, { getIsChecked } from \"../../../../custom-hooks/useOptionClicked\";\nimport { QuestionContext } from \"../../../Questions/Questions\";\nimport { QuizIDContext } from \"../../../QuizTest/QuizTest\";\n\nconst Option = ({\n  option,\n  position\n}) => {\n  const {\n    questionID,\n    answerType\n  } = useContext(QuestionContext);\n  const {\n    quizID\n  } = useContext(QuizIDContext);\n  const [handleClick, answers] = useOptionClicked(option.id, questionID, quizID, answerType);\n  const {\n    0: isChecked,\n    1: setIsChecked\n  } = useState(getIsChecked(answers, questionID, option.id));\n  useEffect(() => {\n    console.log(\"answer have changed\");\n  }, [answers]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    onClick: () => handleClick(),\n    children: [option.image && /*#__PURE__*/_jsxDEV(ImageContainer, {\n      children: /*#__PURE__*/_jsxDEV(Image, {\n        alt: \"image\",\n        src: `${local_backend_url}/storage/${option.image.image_link}`,\n        height: \"100%\",\n        width: \"100%\",\n        layout: \"responsive\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), option.title && /*#__PURE__*/_jsxDEV(TextContainer, {\n      children: [/*#__PURE__*/_jsxDEV(OptionButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: `${String.fromCharCode(position + 64)}. ${option.title}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Option;\nconst Container = withStyles({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginBottom: \"1rem\",\n    cursor: \"pointer\"\n  }\n})(Box);\nconst ImageContainer = withStyles({\n  root: {\n    height: 100,\n    width: 100,\n    borderRadius: 5,\n    marginRight: \"2rem\",\n    overflow: \"hidden\",\n    flexShrink: 0\n  }\n})(Box);\nconst TextContainer = withStyles({\n  root: {\n    background: \"transparent linear-gradient(180deg, #995FD4 0%, #1F29356E 100%) 0% 0% no-repeat padding-box\",\n    width: \"100%\",\n    padding: \"1rem 1rem\",\n    borderRadius: 10,\n    display: \"flex\",\n    alignItems: \"center\"\n  }\n})(Box);\nconst OptionButton = withStyles({\n  root: {\n    padding: \"0.7rem\",\n    backgroundColor: \"#17ABC2\",\n    borderRadius: \"50%\",\n    overflow: \"hidden\",\n    marginRight: \"1rem\"\n  }\n})(Box);","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/Question/Style1/Option/Option.tsx"],"names":["React","useContext","useEffect","useState","Box","Typography","withStyles","Image","local_backend_url","useOptionClicked","getIsChecked","QuestionContext","QuizIDContext","Option","option","position","questionID","answerType","quizID","handleClick","answers","id","isChecked","setIsChecked","console","log","image","image_link","title","String","fromCharCode","Container","root","display","alignItems","marginBottom","cursor","ImageContainer","height","width","borderRadius","marginRight","overflow","flexShrink","TextContainer","background","padding","OptionButton","backgroundColor"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AAEA,SAASC,GAAT,EAAcC,UAAd,EAA0BC,UAA1B,QAA4C,mBAA5C;AAGA,OAAOC,KAAP,MAAkB,YAAlB;AACA,SAASC,iBAAT,QAAkC,iBAAlC;AACA,OAAOC,gBAAP,IACEC,YADF,QAEO,2CAFP;AAGA,SAASC,eAAT,QAAgC,8BAAhC;AACA,SAASC,aAAT,QAA8B,4BAA9B;;AAOA,MAAMC,MAAwB,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAA0B;AACzD,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAA6BhB,UAAU,CAACU,eAAD,CAA7C;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAajB,UAAU,CAACW,aAAD,CAA7B;AAEA,QAAM,CAACO,WAAD,EAAcC,OAAd,IAAyBX,gBAAgB,CAC7CK,MAAM,CAACO,EADsC,EAE7CL,UAF6C,EAG7CE,MAH6C,EAI7CD,UAJ6C,CAA/C;AAOA,QAAM;AAAA,OAACK,SAAD;AAAA,OAAYC;AAAZ,MAA4BpB,QAAQ,CACxCO,YAAY,CAACU,OAAD,EAAUJ,UAAV,EAAsBF,MAAM,CAACO,EAA7B,CAD4B,CAA1C;AAIAnB,EAAAA,SAAS,CAAC,MAAM;AACdsB,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACD,GAFQ,EAEN,CAACL,OAAD,CAFM,CAAT;AAIA,sBACE,QAAC,SAAD;AAAW,IAAA,OAAO,EAAE,MAAMD,WAAW,EAArC;AAAA,eACGL,MAAM,CAACY,KAAP,iBACC,QAAC,cAAD;AAAA,6BACE,QAAC,KAAD;AACE,QAAA,GAAG,EAAC,OADN;AAEE,QAAA,GAAG,EAAG,GAAElB,iBAAkB,YAAWM,MAAM,CAACY,KAAP,CAAaC,UAAW,EAF/D;AAGE,QAAA,MAAM,EAAE,MAHV;AAIE,QAAA,KAAK,EAAE,MAJT;AAKE,QAAA,MAAM,EAAC;AALT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFJ,EAYGb,MAAM,CAACc,KAAP,iBACC,QAAC,aAAD;AAAA,8BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,UAAD;AAAA,kBACI,GAAEC,MAAM,CAACC,YAAP,CAAoBf,QAAQ,GAAG,EAA/B,CAAmC,KAAID,MAAM,CAACc,KAAM;AAD1D;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CA1CD;;AA4CA,eAAef,MAAf;AAEA,MAAMkB,SAAS,GAAGzB,UAAU,CAAC;AAC3B0B,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,UAAU,EAAE,QAFR;AAGJC,IAAAA,YAAY,EAAE,MAHV;AAIJC,IAAAA,MAAM,EAAE;AAJJ;AADqB,CAAD,CAAV,CAOfhC,GAPe,CAAlB;AASA,MAAMiC,cAAc,GAAG/B,UAAU,CAAC;AAChC0B,EAAAA,IAAI,EAAE;AACJM,IAAAA,MAAM,EAAE,GADJ;AAEJC,IAAAA,KAAK,EAAE,GAFH;AAGJC,IAAAA,YAAY,EAAE,CAHV;AAIJC,IAAAA,WAAW,EAAE,MAJT;AAKJC,IAAAA,QAAQ,EAAE,QALN;AAMJC,IAAAA,UAAU,EAAE;AANR;AAD0B,CAAD,CAAV,CASpBvC,GAToB,CAAvB;AAWA,MAAMwC,aAAa,GAAGtC,UAAU,CAAC;AAC/B0B,EAAAA,IAAI,EAAE;AACJa,IAAAA,UAAU,EACR,6FAFE;AAGJN,IAAAA,KAAK,EAAE,MAHH;AAIJO,IAAAA,OAAO,EAAE,WAJL;AAKJN,IAAAA,YAAY,EAAE,EALV;AAMJP,IAAAA,OAAO,EAAE,MANL;AAOJC,IAAAA,UAAU,EAAE;AAPR;AADyB,CAAD,CAAV,CAUnB9B,GAVmB,CAAtB;AAYA,MAAM2C,YAAY,GAAGzC,UAAU,CAAC;AAC9B0B,EAAAA,IAAI,EAAE;AACJc,IAAAA,OAAO,EAAE,QADL;AAEJE,IAAAA,eAAe,EAAE,SAFb;AAGJR,IAAAA,YAAY,EAAE,KAHV;AAIJE,IAAAA,QAAQ,EAAE,QAJN;AAKJD,IAAAA,WAAW,EAAE;AALT;AADwB,CAAD,CAAV,CAQlBrC,GARkB,CAArB","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\n\nimport { Box, Typography, withStyles } from \"@material-ui/core\";\nimport IOption from \"../../../../Models/IOption\";\n\nimport Image from \"next/image\";\nimport { local_backend_url } from \"../../../../url\";\nimport useOptionClicked, {\n  getIsChecked,\n} from \"../../../../custom-hooks/useOptionClicked\";\nimport { QuestionContext } from \"../../../Questions/Questions\";\nimport { QuizIDContext } from \"../../../QuizTest/QuizTest\";\n\ninterface IProps {\n  option: IOption;\n  position: number;\n}\n\nconst Option: React.FC<IProps> = ({ option, position }) => {\n  const { questionID, answerType } = useContext(QuestionContext);\n  const { quizID } = useContext(QuizIDContext);\n\n  const [handleClick, answers] = useOptionClicked(\n    option.id,\n    questionID,\n    quizID,\n    answerType\n  );\n\n  const [isChecked, setIsChecked] = useState<boolean>(\n    getIsChecked(answers, questionID, option.id)\n  );\n\n  useEffect(() => {\n    console.log(\"answer have changed\");\n  }, [answers]);\n\n  return (\n    <Container onClick={() => handleClick()}>\n      {option.image && (\n        <ImageContainer>\n          <Image\n            alt=\"image\"\n            src={`${local_backend_url}/storage/${option.image.image_link}`}\n            height={\"100%\"}\n            width={\"100%\"}\n            layout=\"responsive\"\n          />\n        </ImageContainer>\n      )}\n      {option.title && (\n        <TextContainer>\n          <OptionButton />\n          <Typography>\n            {`${String.fromCharCode(position + 64)}. ${option.title}`}\n          </Typography>\n        </TextContainer>\n      )}\n    </Container>\n  );\n};\n\nexport default Option;\n\nconst Container = withStyles({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginBottom: \"1rem\",\n    cursor: \"pointer\",\n  },\n})(Box);\n\nconst ImageContainer = withStyles({\n  root: {\n    height: 100,\n    width: 100,\n    borderRadius: 5,\n    marginRight: \"2rem\",\n    overflow: \"hidden\",\n    flexShrink: 0,\n  },\n})(Box);\n\nconst TextContainer = withStyles({\n  root: {\n    background:\n      \"transparent linear-gradient(180deg, #995FD4 0%, #1F29356E 100%) 0% 0% no-repeat padding-box\",\n    width: \"100%\",\n    padding: \"1rem 1rem\",\n    borderRadius: 10,\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n})(Box);\n\nconst OptionButton = withStyles({\n  root: {\n    padding: \"0.7rem\",\n    backgroundColor: \"#17ABC2\",\n    borderRadius: \"50%\",\n    overflow: \"hidden\",\n    marginRight: \"1rem\",\n  },\n})(Box);\n"]},"metadata":{},"sourceType":"module"}