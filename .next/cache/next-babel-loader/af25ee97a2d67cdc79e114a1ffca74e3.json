{"ast":null,"code":"import axios from \"axios\";\nimport { google } from \"googleapis\";\n/*******/\n\n/* CONFIGURATION */\n\n/*******/\n\nconst googleConfig = {\n  clientId: process.env.GOOGLE_CLIENT_ID,\n  // e.g. asdfghjkljhgfdsghjk.apps.googleusercontent.com\n  clientSecret: process.env.GOOGLE_CLIENT_SECRET,\n  // e.g. _ASDFA%DFASDFASDFASD#FAD-\n  redirect: process.env.GOOGLE_REDIRECT_URL // this must match your google api settings\n\n};\nconst defaultScope = [\"https://www.googleapis.com/auth/plus.me\", \"https://www.googleapis.com/auth/userinfo.email\", \"https://www.googleapis.com/auth/userinfo.profile\"];\n/*****/\n\n/* HELPERS */\n\n/*****/\n\nfunction createConnection() {\n  return new google.auth.OAuth2(googleConfig.clientId, googleConfig.clientSecret, googleConfig.redirect);\n}\n\nfunction getConnectionUrl(auth) {\n  return auth.generateAuthUrl({\n    access_type: \"offline\",\n    prompt: \"consent\",\n    scope: defaultScope\n  });\n}\n\nfunction getGooglePlusApi(auth) {\n  return google.plus({\n    version: \"v1\",\n    auth\n  });\n}\n/****/\n\n/* MAIN */\n\n/****/\n\n/**\n * Part 1: Create a Google URL and send to the client to log in the user.\n */\n\n\nfunction urlGoogle() {\n  const auth = createConnection();\n  const url = getConnectionUrl(auth);\n  return url;\n}\n/**\n * Part 2: Take the \"code\" parameter which Google gives us once when the user logs in, then get the user's email and id.\n */\n\n\nasync function getGoogleAccountFromCode(code) {\n  const data = await axios.post(`https://oauth2.googleapis.com/token`, {\n    code: code,\n    client_id: googleConfig.clientId,\n    client_secret: googleConfig.clientSecret,\n    redirect_uri: googleConfig.redirect,\n    grant_type: \"authorization_code\",\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded\"\n    }\n  }).then(res => res.data).catch(err => err); // const auth = createConnection();\n  // const data = await auth.getToken(code);\n\n  return {\n    data\n  };\n}\n\nexport default (async (req, res) => {\n  const {\n    get\n  } = req.query;\n\n  if (get === \"link\") {\n    res.statusCode = 200;\n    const url = urlGoogle();\n    res.json({\n      url\n    });\n  } else if (get === \"user\") {\n    if (!req.query.code) {\n      res.statusCode = 500;\n    } else {\n      const {\n        code\n      } = req.query;\n      const user = await getGoogleAccountFromCode(code);\n      res.statusCode = 200;\n      res.json({\n        user\n      });\n    }\n  } else {\n    res.statusCode = 500;\n  }\n});","map":null,"metadata":{},"sourceType":"module"}