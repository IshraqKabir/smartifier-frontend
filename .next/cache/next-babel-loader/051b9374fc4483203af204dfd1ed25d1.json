{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ishraqkabir/workspace/smartifier-frontend/Components/QuizTest/Questions/SingleQuestion/Question/Question.tsx\";\nimport { Box, Typography, withStyles } from \"@material-ui/core\";\nimport { useContext } from \"react\";\nimport { QuestionContext } from \"../SingleQuestion\";\nexport default function Question({}) {\n  var _question$image, _quizInfo;\n\n  const {\n    question\n  } = useContext(QuestionContext);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(QuestionContainer, {\n      children: [(question === null || question === void 0 ? void 0 : question.question) && /*#__PURE__*/_jsxDEV(QuestionTitle, {\n        variant: \"subtitle2\",\n        children: question === null || question === void 0 ? void 0 : question.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this), (question === null || question === void 0 ? void 0 : (_question$image = question.image) === null || _question$image === void 0 ? void 0 : _question$image.image_link) && /*#__PURE__*/_jsxDEV(Avatar, {\n        src: `${backend_url}/storage/${(_quizInfo = quizInfo) === null || _quizInfo === void 0 ? void 0 : _quizInfo.image_link}`,\n        variant: \"square\",\n        style: {\n          height: 100,\n          width: 100\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\nconst Container = withStyles({\n  root: {\n    width: \"100%\",\n    padding: \"0.5rem\"\n  }\n})(Box);\nconst QuestionTitle = withStyles({\n  root: {}\n})(Typography);\nconst QuestionContainer = withStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n})(Box);","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/QuizTest/Questions/SingleQuestion/Question/Question.tsx"],"names":["Box","Typography","withStyles","useContext","QuestionContext","Question","question","image","image_link","backend_url","quizInfo","height","width","Container","root","padding","QuestionTitle","QuestionContainer","display","flexDirection","alignItems","justifyContent"],"mappings":";;AAAA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,UAA1B,QAA4C,mBAA5C;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,eAAT,QAAgC,mBAAhC;AAIA,eAAe,SAASC,QAAT,CAAkB,EAAlB,EAA8B;AAAA;;AAC3C,QAAM;AAAEC,IAAAA;AAAF,MAAeH,UAAU,CAACC,eAAD,CAA/B;AAEA,sBACE,QAAC,SAAD;AAAA,2BACE,QAAC,iBAAD;AAAA,iBACG,CAAAE,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEA,QAAV,kBACC,QAAC,aAAD;AAAe,QAAA,OAAO,EAAC,WAAvB;AAAA,kBACGA,QADH,aACGA,QADH,uBACGA,QAAQ,CAAEA;AADb;AAAA;AAAA;AAAA;AAAA,cAFJ,EAMG,CAAAA,QAAQ,SAAR,IAAAA,QAAQ,WAAR,+BAAAA,QAAQ,CAAEC,KAAV,oEAAiBC,UAAjB,kBACC,QAAC,MAAD;AACE,QAAA,GAAG,EAAG,GAAEC,WAAY,YAAf,aAA0BC,QAA1B,8CAA0B,UAAUF,UAAW,EADtD;AAEE,QAAA,OAAO,EAAC,QAFV;AAGE,QAAA,KAAK,EAAE;AAAEG,UAAAA,MAAM,EAAE,GAAV;AAAeC,UAAAA,KAAK,EAAE;AAAtB;AAHT;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;AAED,MAAMC,SAAS,GAAGX,UAAU,CAAC;AAC3BY,EAAAA,IAAI,EAAE;AACJF,IAAAA,KAAK,EAAE,MADH;AAEJG,IAAAA,OAAO,EAAE;AAFL;AADqB,CAAD,CAAV,CAKff,GALe,CAAlB;AAOA,MAAMgB,aAAa,GAAGd,UAAU,CAAC;AAC/BY,EAAAA,IAAI,EAAE;AADyB,CAAD,CAAV,CAEnBb,UAFmB,CAAtB;AAIA,MAAMgB,iBAAiB,GAAGf,UAAU,CAAC;AACnCY,EAAAA,IAAI,EAAE;AACJI,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,aAAa,EAAE,QAFX;AAGJC,IAAAA,UAAU,EAAE,QAHR;AAIJC,IAAAA,cAAc,EAAE;AAJZ;AAD6B,CAAD,CAAV,CAOvBrB,GAPuB,CAA1B","sourcesContent":["import { Box, Typography, withStyles } from \"@material-ui/core\";\nimport { useContext } from \"react\";\nimport { QuestionContext } from \"../SingleQuestion\";\n\ninterface IProps {}\n\nexport default function Question({}: IProps) {\n  const { question } = useContext(QuestionContext);\n\n  return (\n    <Container>\n      <QuestionContainer>\n        {question?.question && (\n          <QuestionTitle variant=\"subtitle2\">\n            {question?.question}\n          </QuestionTitle>\n        )}\n        {question?.image?.image_link && (\n          <Avatar\n            src={`${backend_url}/storage/${quizInfo?.image_link}`}\n            variant=\"square\"\n            style={{ height: 100, width: 100 }}\n          />\n        )}\n      </QuestionContainer>\n    </Container>\n  );\n}\n\nconst Container = withStyles({\n  root: {\n    width: \"100%\",\n    padding: \"0.5rem\",\n  },\n})(Box);\n\nconst QuestionTitle = withStyles({\n  root: {},\n})(Typography);\n\nconst QuestionContainer = withStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n})(Box);\n"]},"metadata":{},"sourceType":"module"}