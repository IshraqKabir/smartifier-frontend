{"ast":null,"code":"import { useRouter } from \"next/router\";\nimport { useEffect, useState } from \"react\";\nexport default function useBottomBar(testStatus) {\n  const {\n    0: buttonText,\n    1: setButtonText\n  } = useState(\"start\");\n  const router = useRouter();\n  useEffect(() => {\n    if (testStatus === \"retake\") {\n      setButtonText(\"retake\");\n    } else {\n      setButtonText(\"start\");\n    }\n  }, [testStatus]);\n\n  const startTest = quizId => {\n    if (!quizId || buttonText) return;\n\n    if (testStatus === \"new_test\" || testStatus === \"ongoing\" || testStatus === \"retake\") {\n      router.push(`/test/quiz/${quizId}`);\n      setButtonText(\"loading\");\n    }\n  };\n\n  return {\n    buttonText,\n    startTest\n  };\n}","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/Quizzes/Quiz/TakeQuizButton/QuizInfoModal/QuizInfo/BottomBar/useBottomBar.tsx"],"names":["useRouter","useEffect","useState","useBottomBar","testStatus","buttonText","setButtonText","router","startTest","quizId","push"],"mappings":"AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAGA,eAAe,SAASC,YAAT,CAAsBC,UAAtB,EAA+C;AAC5D,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8BJ,QAAQ,CAC1C,OAD0C,CAA5C;AAIA,QAAMK,MAAM,GAAGP,SAAS,EAAxB;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIG,UAAU,KAAK,QAAnB,EAA6B;AAC3BE,MAAAA,aAAa,CAAC,QAAD,CAAb;AACD,KAFD,MAEO;AACLA,MAAAA,aAAa,CAAC,OAAD,CAAb;AACD;AACF,GANQ,EAMN,CAACF,UAAD,CANM,CAAT;;AAQA,QAAMI,SAAS,GAAIC,MAAD,IAAoB;AACpC,QAAI,CAACA,MAAD,IAAWJ,UAAf,EAA2B;;AAE3B,QACED,UAAU,KAAK,UAAf,IACAA,UAAU,KAAK,SADf,IAEAA,UAAU,KAAK,QAHjB,EAIE;AACAG,MAAAA,MAAM,CAACG,IAAP,CAAa,cAAaD,MAAO,EAAjC;AACAH,MAAAA,aAAa,CAAC,SAAD,CAAb;AACD;AACF,GAXD;;AAaA,SAAO;AAAED,IAAAA,UAAF;AAAcG,IAAAA;AAAd,GAAP;AACD","sourcesContent":["import { useRouter } from \"next/router\";\nimport { useEffect, useState } from \"react\";\nimport TTestStatus from \"../../../../../../../Models/TTestStatus\";\n\nexport default function useBottomBar(testStatus: TTestStatus) {\n  const [buttonText, setButtonText] = useState<\"start\" | \"retake\" | \"loading\">(\n    \"start\"\n  );\n\n  const router = useRouter();\n\n  useEffect(() => {\n    if (testStatus === \"retake\") {\n      setButtonText(\"retake\");\n    } else {\n      setButtonText(\"start\");\n    }\n  }, [testStatus]);\n\n  const startTest = (quizId: number) => {\n    if (!quizId || buttonText) return;\n\n    if (\n      testStatus === \"new_test\" ||\n      testStatus === \"ongoing\" ||\n      testStatus === \"retake\"\n    ) {\n      router.push(`/test/quiz/${quizId}`);\n      setButtonText(\"loading\");\n    }\n  };\n\n  return { buttonText, startTest };\n}\n"]},"metadata":{},"sourceType":"module"}