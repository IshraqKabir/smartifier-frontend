{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport * as Cookies from \"js-cookie\";\n/**\n * useCookie - React Hook for Cookies based on js-cookie\n * @param {string} key Cookie name\n * @param {Object|string} [initialValue]  Value will be assign if cookie doesn't exist.\n * @returns {Array} Returns cookie value, and the function to update it.\n */\n\nexport function useUserCookie(key, initialValue) {\n  _s();\n\n  var _useState = useState(function () {\n    var result = Cookies.get(key) || initialValue;\n    if (result) return JSON.parse(result);\n  }),\n      user = _useState[0],\n      setItem = _useState[1];\n  /**\n   * Set value of cookie\n   * @param {Object|string} value\n   * @param {Cookies.CookieAttributes} [options]\n   */\n\n\n  var setValue = function setValue(value, options) {\n    setItem(value);\n    Cookies.set(key, value, options);\n  };\n\n  return [user, setValue];\n}\n\n_s(useUserCookie, \"UfufSWXWbEJoDr58360AtAVD5Uw=\");\n\nexport default useUserCookie;","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/custom-hooks/useUserCookie.ts"],"names":["useState","Cookies","useUserCookie","key","initialValue","result","get","JSON","parse","user","setItem","setValue","value","options","set"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,KAAKC,OAAZ,MAAyB,WAAzB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,aAAT,CAA0BC,GAA1B,EAAkCC,YAAlC,EAAkE;AAAA;;AAAA,kBAC/CJ,QAAQ,CAAI,YAAM;AACxC,QAAMK,MAAM,GAAGJ,OAAO,CAACK,GAAR,CAAYH,GAAZ,KAAoBC,YAAnC;AACA,QAAIC,MAAJ,EACA,OAAOE,IAAI,CAACC,KAAL,CAAWH,MAAX,CAAP;AACD,GAJ+B,CADuC;AAAA,MAChEI,IADgE;AAAA,MAC1DC,OAD0D;AAOvE;AACF;AACA;AACA;AACA;;;AACE,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAWC,OAAX,EAA4B;AAC3CH,IAAAA,OAAO,CAACE,KAAD,CAAP;AACAX,IAAAA,OAAO,CAACa,GAAR,CAAYX,GAAZ,EAAiBS,KAAjB,EAAwBC,OAAxB;AACD,GAHD;;AAKA,SAAO,CAACJ,IAAD,EAAOE,QAAP,CAAP;AACD;;GAlBeT,a;;AAoBhB,eAAeA,aAAf","sourcesContent":["import { useState } from \"react\";\nimport * as Cookies from \"js-cookie\";\n\n/**\n * useCookie - React Hook for Cookies based on js-cookie\n * @param {string} key Cookie name\n * @param {Object|string} [initialValue]  Value will be assign if cookie doesn't exist.\n * @returns {Array} Returns cookie value, and the function to update it.\n */\nexport function useUserCookie<T>(key: T, initialValue: T): [T, Function] {\n  const [user, setItem] = useState<T>(() => {\n    const result = Cookies.get(key) || initialValue;\n    if (result)\n    return JSON.parse(result);\n  });\n\n  /**\n   * Set value of cookie\n   * @param {Object|string} value\n   * @param {Cookies.CookieAttributes} [options]\n   */\n  const setValue = (value: T, options: any) => {\n    setItem(value);\n    Cookies.set(key, value, options);\n  };\n\n  return [user, setValue];\n}\n\nexport default useUserCookie;\n"]},"metadata":{},"sourceType":"module"}