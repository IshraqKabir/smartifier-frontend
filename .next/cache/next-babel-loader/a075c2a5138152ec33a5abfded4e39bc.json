{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ishraqkabir/workspace/smartifier-frontend/Components/QuizTest/Questions/SingleQuestion/SingleQuestion.tsx\";\nimport { Box, Slide, withStyles } from \"@material-ui/core\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { QuizTestStateContext } from \"../Questions\";\nconst QuestionContext = useCont;\nexport default function SingleQuestion({\n  question,\n  index\n}) {\n  const {\n    currentQuestionIndex\n  } = useContext(QuizTestStateContext);\n  const {\n    0: isVisible,\n    1: setIsVisible\n  } = useState(index == currentQuestionIndex);\n  const {\n    0: direction,\n    1: setDirection\n  } = useState(\"right\");\n  useEffect(() => {\n    // console.log(\n    //   `${question?.id} is ${\n    //     isVisible ? \"visible\" : \"not visible\"\n    //   } --- current: ${currentQuestionId}`\n    // );\n    if (currentQuestionIndex > index) {\n      setDirection(\"right\");\n    } else if (currentQuestionIndex < index) {\n      setDirection(\"left\");\n    }\n\n    setIsVisible(index == currentQuestionIndex);\n  }, [currentQuestionIndex]);\n  return /*#__PURE__*/_jsxDEV(Slide, {\n    in: isVisible,\n    direction: direction,\n    timeout: {\n      enter: 500,\n      exit: 100\n    },\n    mountOnEnter: true,\n    unmountOnExit: true,\n    children: isVisible ? /*#__PURE__*/_jsxDEV(Container, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 20\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 46\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\nconst Container = withStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: \"0.5rem 1rem\"\n  }\n})(Box);","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/QuizTest/Questions/SingleQuestion/SingleQuestion.tsx"],"names":["Box","Slide","withStyles","useContext","useEffect","useState","QuizTestStateContext","QuestionContext","useCont","SingleQuestion","question","index","currentQuestionIndex","isVisible","setIsVisible","direction","setDirection","enter","exit","Container","root","display","flexDirection","padding"],"mappings":";;AAAA,SAASA,GAAT,EAAcC,KAAd,EAAqBC,UAArB,QAAuC,mBAAvC;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AAEA,SAASC,oBAAT,QAAqC,cAArC;AASA,MAAMC,eAAe,GAAGC,OAAxB;AAEA,eAAe,SAASC,cAAT,CAAwB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAxB,EAAqD;AAClE,QAAM;AAAEC,IAAAA;AAAF,MAA2BT,UAAU,CAACG,oBAAD,CAA3C;AACA,QAAM;AAAA,OAACO,SAAD;AAAA,OAAYC;AAAZ,MAA4BT,QAAQ,CAACM,KAAK,IAAIC,oBAAV,CAA1C;AACA,QAAM;AAAA,OAACG,SAAD;AAAA,OAAYC;AAAZ,MAA4BX,QAAQ,CAAmB,OAAnB,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd;AACA;AACA;AACA;AACA;AACA,QAAIQ,oBAAoB,GAAGD,KAA3B,EAAkC;AAChCK,MAAAA,YAAY,CAAC,OAAD,CAAZ;AACD,KAFD,MAEO,IAAIJ,oBAAoB,GAAGD,KAA3B,EAAkC;AACvCK,MAAAA,YAAY,CAAC,MAAD,CAAZ;AACD;;AAEDF,IAAAA,YAAY,CAACH,KAAK,IAAIC,oBAAV,CAAZ;AACD,GAbQ,EAaN,CAACA,oBAAD,CAbM,CAAT;AAeA,sBACE,QAAC,KAAD;AACE,IAAA,EAAE,EAAEC,SADN;AAEE,IAAA,SAAS,EAAEE,SAFb;AAGE,IAAA,OAAO,EAAE;AAAEE,MAAAA,KAAK,EAAE,GAAT;AAAcC,MAAAA,IAAI,EAAE;AAApB,KAHX;AAIE,IAAA,YAAY,MAJd;AAKE,IAAA,aAAa,MALf;AAAA,cAOGL,SAAS,gBAAG,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAAH,gBAA6B;AAAA;AAAA;AAAA;AAAA;AAPzC;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;AAED,MAAMM,SAAS,GAAGjB,UAAU,CAAC;AAC3BkB,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,aAAa,EAAE,QAFX;AAGJC,IAAAA,OAAO,EAAE;AAHL;AADqB,CAAD,CAAV,CAMfvB,GANe,CAAlB","sourcesContent":["import { Box, Slide, withStyles } from \"@material-ui/core\";\nimport { useContext, useEffect, useState } from \"react\";\nimport IQuestion from \"../../../../Models/IQuestion\";\nimport { QuizTestStateContext } from \"../Questions\";\n\nimport Question from \"./Question/Question\";\n\ninterface IProps {\n  index: number;\n  question: IQuestion;\n}\n\nconst QuestionContext = useCont\n\nexport default function SingleQuestion({ question, index }: IProps) {\n  const { currentQuestionIndex } = useContext(QuizTestStateContext);\n  const [isVisible, setIsVisible] = useState(index == currentQuestionIndex);\n  const [direction, setDirection] = useState<\"left\" | \"right\">(\"right\");\n\n  useEffect(() => {\n    // console.log(\n    //   `${question?.id} is ${\n    //     isVisible ? \"visible\" : \"not visible\"\n    //   } --- current: ${currentQuestionId}`\n    // );\n    if (currentQuestionIndex > index) {\n      setDirection(\"right\");\n    } else if (currentQuestionIndex < index) {\n      setDirection(\"left\");\n    }\n\n    setIsVisible(index == currentQuestionIndex);\n  }, [currentQuestionIndex]);\n\n  return (\n    <Slide\n      in={isVisible}\n      direction={direction}\n      timeout={{ enter: 500, exit: 100 }}\n      mountOnEnter\n      unmountOnExit\n    >\n      {isVisible ? <Container></Container> : <div></div>}\n    </Slide>\n  );\n}\n\nconst Container = withStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: \"0.5rem 1rem\",\n  },\n})(Box);\n"]},"metadata":{},"sourceType":"module"}