{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ishraqkabir/workspace/smartifier-frontend/Components/Question/OptionContainer/OptionContainer.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Box, withStyles } from \"@material-ui/core\";\nimport { cloneElement, useContext, useEffect, useState } from \"react\";\nimport { AnswersContext } from \"../../QuizTest/QuizTest\";\nimport getIsChecked from \"../../../UtilFunctions/getIsChecked\";\n\nconst OptionContainer = props => {\n  const {\n    answers,\n    setAnswers\n  } = useContext(AnswersContext);\n  const {\n    question\n  } = useContext(QuestionContext);\n  const {\n    0: isChecked,\n    1: setIsChecked\n  } = useState(getIsChecked(props.option.id));\n  useEffect(() => {\n    console.log(`${props.option.title}:${props.option.id} is ${getIsChecked(props.option.id) ? \"checked\" : \"unchecked\"}`);\n    setIsChecked(getIsChecked(props.option.id));\n  }, [answers]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    onClick: () => setAnswers(props.option.id),\n    children: /*#__PURE__*/cloneElement(props.children, _objectSpread(_objectSpread({}, props), {}, {\n      isChecked\n    }))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\nexport default OptionContainer;\nconst Container = withStyles({\n  root: {\n    margin: 0,\n    padding: 0,\n    height: \"100%\"\n  }\n})(Box);","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/Question/OptionContainer/OptionContainer.tsx"],"names":["Box","withStyles","cloneElement","useContext","useEffect","useState","AnswersContext","getIsChecked","OptionContainer","props","answers","setAnswers","question","QuestionContext","isChecked","setIsChecked","option","id","console","log","title","children","Container","root","margin","padding","height"],"mappings":";;;;;;;;;AAAA,SAASA,GAAT,EAAcC,UAAd,QAAgC,mBAAhC;AACA,SAASC,YAAT,EAAiCC,UAAjC,EAA6CC,SAA7C,EAAwDC,QAAxD,QAAwE,OAAxE;AACA,SAASC,cAAT,QAA+B,yBAA/B;AAEA,OAAOC,YAAP,MAAyB,qCAAzB;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAA0BR,UAAU,CAACG,cAAD,CAA1C;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAeT,UAAU,CAACU,eAAD,CAA/B;AAEA,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BV,QAAQ,CACxCE,YAAY,CAACE,KAAK,CAACO,MAAN,CAAaC,EAAd,CAD4B,CAA1C;AAIAb,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,OAAO,CAACC,GAAR,CACG,GAAEV,KAAK,CAACO,MAAN,CAAaI,KAAM,IAAGX,KAAK,CAACO,MAAN,CAAaC,EAAG,OACvCV,YAAY,CAACE,KAAK,CAACO,MAAN,CAAaC,EAAd,CAAZ,GAAgC,SAAhC,GAA4C,WAC7C,EAHH;AAKAF,IAAAA,YAAY,CAACR,YAAY,CAACE,KAAK,CAACO,MAAN,CAAaC,EAAd,CAAb,CAAZ;AACD,GAPQ,EAON,CAACP,OAAD,CAPM,CAAT;AASA,sBACE,QAAC,SAAD;AAAW,IAAA,OAAO,EAAE,MAAMC,UAAU,CAACF,KAAK,CAACO,MAAN,CAAaC,EAAd,CAApC;AAAA,2BACGf,YAAY,CAACO,KAAK,CAACY,QAAP,kCAAsBZ,KAAtB;AAA6BK,MAAAA;AAA7B;AADf;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAtBD;;AAwBA,eAAeN,eAAf;AAEA,MAAMc,SAAS,GAAGrB,UAAU,CAAC;AAC3BsB,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAE,CADJ;AAEJC,IAAAA,OAAO,EAAE,CAFL;AAGJC,IAAAA,MAAM,EAAE;AAHJ;AADqB,CAAD,CAAV,CAMf1B,GANe,CAAlB","sourcesContent":["import { Box, withStyles } from \"@material-ui/core\";\nimport { cloneElement, Fragment, useContext, useEffect, useState } from \"react\";\nimport { AnswersContext } from \"../../QuizTest/QuizTest\";\n\nimport getIsChecked from \"../../../UtilFunctions/getIsChecked\";\n\nconst OptionContainer = (props) => {\n  const { answers, setAnswers } = useContext(AnswersContext);\n  const { question } = useContext(QuestionContext);\n\n  const [isChecked, setIsChecked] = useState<boolean>(\n    getIsChecked(props.option.id)\n  );\n\n  useEffect(() => {\n    console.log(\n      `${props.option.title}:${props.option.id} is ${\n        getIsChecked(props.option.id) ? \"checked\" : \"unchecked\"\n      }`\n    );\n    setIsChecked(getIsChecked(props.option.id));\n  }, [answers]);\n\n  return (\n    <Container onClick={() => setAnswers(props.option.id)}>\n      {cloneElement(props.children, { ...props, isChecked })}\n    </Container>\n  );\n};\n\nexport default OptionContainer;\n\nconst Container = withStyles({\n  root: {\n    margin: 0,\n    padding: 0,\n    height: \"100%\",\n  },\n})(Box);\n"]},"metadata":{},"sourceType":"module"}