{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport useLocalState from \"../../custom-hooks/useLocalState\";\nimport startTest from \"../../repository/QuizTest/startTest\";\nexport default function useQuizTest(quizId) {\n  _s();\n\n  var _useLocalState = useLocalState(\"user\", \"\"),\n      _useLocalState2 = _slicedToArray(_useLocalState, 1),\n      user = _useLocalState2[0];\n\n  var _useState = useState(false),\n      isLoading = _useState[0],\n      setIsLoading = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      testStatus = _useState2[0],\n      setTestStatus = _useState2[1];\n\n  var _useState3 = useState(),\n      quiz = _useState3[0],\n      setQuiz = _useState3[1];\n\n  var _useState4 = useState(),\n      test = _useState4[0],\n      setTest = _useState4[1];\n\n  useEffect(function () {\n    if (!user || !(user === null || user === void 0 ? void 0 : user.token)) return;\n    fetchStartTest();\n  }, []);\n\n  var fetchStartTest = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setIsLoading(true);\n              _context.next = 3;\n              return startTest(quizId, user === null || user === void 0 ? void 0 : user.token);\n\n            case 3:\n              response = _context.sent;\n              console.log(response === null || response === void 0 ? void 0 : response.quiz);\n              setTestStatus(response === null || response === void 0 ? void 0 : response.status);\n              setQuiz(response === null || response === void 0 ? void 0 : response.quiz);\n              setTest(response === null || response === void 0 ? void 0 : response.test);\n              setIsLoading(false);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetchStartTest() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return {\n    isLoading: isLoading,\n    testStatus: testStatus,\n    quiz: quiz,\n    test: test\n  };\n}\n\n_s(useQuizTest, \"IQ7clQuwt4js4dT2MNcVEtCKwPw=\", false, function () {\n  return [useLocalState];\n});","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/QuizTest/useQuizTest.tsx"],"names":["useEffect","useState","useLocalState","startTest","useQuizTest","quizId","user","isLoading","setIsLoading","testStatus","setTestStatus","quiz","setQuiz","test","setTest","token","fetchStartTest","response","console","log","status"],"mappings":";;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AAIA,OAAOC,SAAP,MAAsB,qCAAtB;AAEA,eAAe,SAASC,WAAT,CAAqBC,MAArB,EAAqC;AAAA;;AAAA,uBACnCH,aAAa,CAAC,MAAD,EAAS,EAAT,CADsB;AAAA;AAAA,MAC3CI,IAD2C;;AAAA,kBAEhBL,QAAQ,CAAC,KAAD,CAFQ;AAAA,MAE3CM,SAF2C;AAAA,MAEhCC,YAFgC;;AAAA,mBAGdP,QAAQ,CAAmB,EAAnB,CAHM;AAAA,MAG3CQ,UAH2C;AAAA,MAG/BC,aAH+B;;AAAA,mBAI1BT,QAAQ,EAJkB;AAAA,MAI3CU,IAJ2C;AAAA,MAIrCC,OAJqC;;AAAA,mBAK1BX,QAAQ,EALkB;AAAA,MAK3CY,IAL2C;AAAA,MAKrCC,OALqC;;AAOlDd,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAACM,IAAD,IAAS,EAACA,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAES,KAAP,CAAb,EAA2B;AAC3BC,IAAAA,cAAc;AACf,GAHQ,EAGN,EAHM,CAAT;;AAKA,MAAMA,cAAc;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACrBR,cAAAA,YAAY,CAAC,IAAD,CAAZ;AADqB;AAAA,qBAGEL,SAAS,CAACE,MAAD,EAASC,IAAT,aAASA,IAAT,uBAASA,IAAI,CAAES,KAAf,CAHX;;AAAA;AAGfE,cAAAA,QAHe;AAKrBC,cAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ,aAAYA,QAAZ,uBAAYA,QAAQ,CAAEN,IAAtB;AAEAD,cAAAA,aAAa,CAACO,QAAD,aAACA,QAAD,uBAACA,QAAQ,CAAEG,MAAX,CAAb;AACAR,cAAAA,OAAO,CAACK,QAAD,aAACA,QAAD,uBAACA,QAAQ,CAAEN,IAAX,CAAP;AACAG,cAAAA,OAAO,CAACG,QAAD,aAACA,QAAD,uBAACA,QAAQ,CAAEJ,IAAX,CAAP;AAEAL,cAAAA,YAAY,CAAC,KAAD,CAAZ;;AAXqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAdQ,cAAc;AAAA;AAAA;AAAA,KAApB;;AAcA,SAAO;AACLT,IAAAA,SAAS,EAATA,SADK;AAELE,IAAAA,UAAU,EAAVA,UAFK;AAGLE,IAAAA,IAAI,EAAJA,IAHK;AAILE,IAAAA,IAAI,EAAJA;AAJK,GAAP;AAMD;;GAhCuBT,W;UACPF,a","sourcesContent":["import { useEffect, useState } from \"react\";\nimport useLocalState from \"../../custom-hooks/useLocalState\";\nimport IQuiz from \"../../Models/IQuiz\";\nimport ITest from \"../../Models/ITest\";\nimport TTestStatus from \"../../Models/TTestStatus\";\nimport startTest from \"../../repository/QuizTest/startTest\";\n\nexport default function useQuizTest(quizId: number) {\n  const [user] = useLocalState(\"user\", \"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [testStatus, setTestStatus] = useState<TTestStatus | \"\">(\"\");\n  const [quiz, setQuiz] = useState<IQuiz>();\n  const [test, setTest] = useState<ITest>();\n\n  useEffect(() => {\n    if (!user || !user?.token) return;\n    fetchStartTest();\n  }, []);\n\n  const fetchStartTest = async () => {\n    setIsLoading(true);\n\n    const response = await startTest(quizId, user?.token);\n\n    console.log(response?.quiz);\n\n    setTestStatus(response?.status);\n    setQuiz(response?.quiz);\n    setTest(response?.test);\n\n    setIsLoading(false);\n  };\n\n  return {\n    isLoading,\n    testStatus,\n    quiz,\n    test,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}