{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar _container;\n\nimport React from \"react\";\nimport { Avatar, makeStyles, Typography } from \"@material-ui/core\";\nimport { local_backend_url } from \"../../../../url\";\n\nvar Option = function Option(_ref) {\n  var option = _ref.option,\n      position = _ref.position,\n      isChecked = _ref.isChecked;\n  var classes = useStyles({\n    isChecked: isChecked\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: classes.container,\n    children: [option.image && /*#__PURE__*/_jsx(\"div\", {\n      className: classes.imageContainer,\n      children: /*#__PURE__*/_jsx(Avatar, {\n        alt: \"\".concat(option.title),\n        src: \"\".concat(local_backend_url, \"/storage/\").concat(option.image.image_link),\n        style: {\n          width: \"100%\",\n          height: \"100%\"\n        },\n        variant: \"square\"\n      })\n    }), option.title && /*#__PURE__*/_jsx(\"div\", {\n      className: classes.textContainer,\n      children: /*#__PURE__*/_jsx(Typography, {\n        children: \"\".concat(String.fromCharCode(position + 64), \". \").concat(option.title)\n      })\n    })]\n  });\n};\n\nexport default Option;\nvar useStyles = makeStyles({\n  container: (_container = {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    maxWidth: \"25vw\",\n    minWidth: 200,\n    height: \"100%\",\n    cursor: \"pointer\",\n    background: \"transparent linear-gradient(180deg, #995FD4 0%, #1F29356E 100%) 0% 0% no-repeat padding-box\",\n    borderRadius: 10,\n    overflow: \"hidden\",\n    marginTop: \"1rem\"\n  }, _defineProperty(_container, \"@media (max-width: 600px)\", {\n    maxWidth: \"100%\"\n  }), _defineProperty(_container, \"border\", function border(props) {\n    return props.isChecked ? \"5px solid #209434\" : \"none\";\n  }), _container),\n  imageContainer: {\n    width: \"100%\"\n  },\n  textContainer: {\n    textAlign: \"center\",\n    padding: \"1rem 2rem\"\n  }\n});","map":null,"metadata":{},"sourceType":"module"}