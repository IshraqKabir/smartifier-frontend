{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useEffect, useState } from \"react\";\nimport useLocalState from \"../../../custom-hooks/useLocalState\";\nexport default function useTestState(quizId, questions) {\n  _s();\n\n  var _useLocalState = useLocalState(\"user\", \"\"),\n      _useLocalState2 = _slicedToArray(_useLocalState, 1),\n      user = _useLocalState2[0];\n\n  var _useLocalState3 = useLocalState(\"\".concat(user === null || user === void 0 ? void 0 : user.email, \"-quiz\").concat(quizId, \"-answers\"), {}),\n      _useLocalState4 = _slicedToArray(_useLocalState3, 2),\n      answers = _useLocalState4[0],\n      setAnswersState = _useLocalState4[1];\n\n  var _useState = useState(0),\n      currentQuestionIndex = _useState[0],\n      setCurrentQuestionIndex = _useState[1];\n\n  var _useState2 = useState(getProgress()),\n      progress = _useState2[0],\n      setProgress = _useState2[1];\n\n  var setAnswers = function setAnswers(optionID, question, text) {\n    setAnswersState(function (state) {\n      var tempAnswers = _objectSpread({}, state);\n\n      if (question.answer_type === \"multiple_choice\") {\n        var options = tempAnswers[\"\".concat(question === null || question === void 0 ? void 0 : question.id)];\n\n        if (options && options.includes(optionID)) {\n          tempAnswers = _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, \"\".concat(question === null || question === void 0 ? void 0 : question.id), []));\n        } else {\n          tempAnswers = _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, \"\".concat(question === null || question === void 0 ? void 0 : question.id), [optionID]));\n        }\n      } else if ((question === null || question === void 0 ? void 0 : question.answer_type) === \"checkboxes\") {\n        var _options = tempAnswers[\"\".concat(question === null || question === void 0 ? void 0 : question.id)];\n\n        if (_options && _options.includes(optionID)) {\n          tempAnswers = _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, \"\".concat(question === null || question === void 0 ? void 0 : question.id), _options.filter(function (option) {\n            return option != optionID;\n          })));\n        } else if (_options && !_options.includes(optionID)) {\n          tempAnswers = _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, \"\".concat(question === null || question === void 0 ? void 0 : question.id), [].concat(_toConsumableArray(_options), [optionID])));\n        } else {\n          tempAnswers = _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, \"\".concat(question === null || question === void 0 ? void 0 : question.id), [optionID]));\n        }\n      } else if ((question === null || question === void 0 ? void 0 : question.answer_type) === \"short_paragraph\") {\n        if (!text) return _objectSpread({}, tempAnswers);\n        tempAnswers = _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, \"\".concat(question === null || question === void 0 ? void 0 : question.id), text));\n      }\n\n      return _objectSpread({}, tempAnswers);\n    });\n  };\n\n  var goToNextQuestion = function goToNextQuestion() {\n    if (currentQuestionIndex >= (questions === null || questions === void 0 ? void 0 : questions.length) - 1) return;\n    setCurrentQuestionIndex(currentQuestionIndex + 1);\n  };\n\n  var goToPreviousQuestion = function goToPreviousQuestion() {\n    if (currentQuestionIndex <= 0) return;\n    setCurrentQuestionIndex(currentQuestionIndex - 1);\n  };\n\n  var showPrevious = currentQuestionIndex != 0;\n  var showNext = currentQuestionIndex < (questions === null || questions === void 0 ? void 0 : questions.length) - 1;\n\n  function getProgress() {\n    if ((questions === null || questions === void 0 ? void 0 : questions.length) == 0) return 100;\n    return (currentQuestionIndex + 1) * 100 / (questions === null || questions === void 0 ? void 0 : questions.length);\n  }\n\n  useEffect(function () {\n    setProgress(getProgress());\n  }, [currentQuestionIndex]);\n  return {\n    answers: answers,\n    setAnswers: setAnswers,\n    progress: progress,\n    currentQuestionIndex: currentQuestionIndex,\n    goToNextQuestion: goToNextQuestion,\n    goToPreviousQuestion: goToPreviousQuestion,\n    showPrevious: showPrevious,\n    showNext: showNext,\n    questions: questions\n  };\n}\n\n_s(useTestState, \"urnlLrQUiBTKfMrwjGsmOLA13eI=\", false, function () {\n  return [useLocalState, useLocalState];\n});","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/QuizTest/Questions/useTestState.tsx"],"names":["useEffect","useState","useLocalState","useTestState","quizId","questions","user","email","answers","setAnswersState","currentQuestionIndex","setCurrentQuestionIndex","getProgress","progress","setProgress","setAnswers","optionID","question","text","state","tempAnswers","answer_type","options","id","includes","filter","option","goToNextQuestion","length","goToPreviousQuestion","showPrevious","showNext"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport useLocalState from \"../../../custom-hooks/useLocalState\";\nimport IQuestion from \"../../../Models/IQuestion\";\n\nexport default function useTestState(quizId: number, questions: IQuestion[]) {\n  const [user] = useLocalState(\"user\", \"\");\n  const [answers, setAnswersState] = useLocalState(\n    `${user?.email}-quiz${quizId}-answers`,\n    {}\n  );\n\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState<number>(0);\n  const [progress, setProgress] = useState(getProgress());\n\n  const setAnswers = (optionID: number, question: IQuestion, text?: string) => {\n    setAnswersState((state: any) => {\n      let tempAnswers = { ...state };\n\n      if (question.answer_type === \"multiple_choice\") {\n        const options = tempAnswers[`${question?.id}`];\n\n        if (options && options.includes(optionID)) {\n          tempAnswers = { ...state, [`${question?.id}`]: [] };\n        } else {\n          tempAnswers = { ...state, [`${question?.id}`]: [optionID] };\n        }\n      } else if (question?.answer_type === \"checkboxes\") {\n        const options = tempAnswers[`${question?.id}`];\n\n        if (options && options.includes(optionID)) {\n          tempAnswers = {\n            ...state,\n            [`${question?.id}`]: options.filter(\n              (option: number) => option != optionID\n            ),\n          };\n        } else if (options && !options.includes(optionID)) {\n          tempAnswers = {\n            ...state,\n            [`${question?.id}`]: [...options, optionID],\n          };\n        } else {\n          tempAnswers = {\n            ...state,\n            [`${question?.id}`]: [optionID],\n          };\n        }\n      } else if (question?.answer_type === \"short_paragraph\") {\n        if (!text) return { ...tempAnswers };\n        tempAnswers = {\n          ...state,\n          [`${question?.id}`]: text,\n        };\n      }\n\n      return { ...tempAnswers };\n    });\n  };\n\n  const goToNextQuestion = () => {\n    if (currentQuestionIndex >= questions?.length - 1) return;\n    setCurrentQuestionIndex(currentQuestionIndex + 1);\n  };\n\n  const goToPreviousQuestion = () => {\n    if (currentQuestionIndex <= 0) return;\n    setCurrentQuestionIndex(currentQuestionIndex - 1);\n  };\n\n  const showPrevious: boolean = currentQuestionIndex != 0;\n  const showNext: boolean = currentQuestionIndex < questions?.length - 1;\n\n  function getProgress() {\n    if (questions?.length == 0) return 100;\n\n    return ((currentQuestionIndex + 1) * 100) / questions?.length;\n  }\n\n  useEffect(() => {\n    setProgress(getProgress());\n  }, [currentQuestionIndex]);\n\n  return {\n    answers,\n    setAnswers,\n    progress,\n    currentQuestionIndex,\n    goToNextQuestion,\n    goToPreviousQuestion,\n    showPrevious,\n    showNext,\n    questions,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}