{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ishraqkabir/workspace/smartifier-frontend/Components/Question/Style1/Option/Option.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { Box, makeStyles, Typography, withStyles } from \"@material-ui/core\";\nimport Image from \"next/image\";\nimport { local_backend_url } from \"../../../../url\";\nvar useStyles = makeStyles({\n  container: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginBottom: \"1rem\",\n    cursor: \"pointer\"\n  }\n});\n\nvar Option = function Option(_ref) {\n  _s();\n\n  var option = _ref.option,\n      position = _ref.position,\n      isChecked = _ref.isChecked;\n  var classes = useStyles({\n    isChecked: isChecked\n  });\n  useEffect(function () {\n    console.log(\"\".concat(option.title, \":\").concat(option.id, \" is \").concat(getIsChecked(option.id) ? \"checked\" : \"unchecked\"));\n    setIsChecked(getIsChecked(option.id));\n  }, [answers]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    onClick: function onClick() {\n      return setAnswers(option.id);\n    },\n    children: [option.image && /*#__PURE__*/_jsxDEV(ImageContainer, {\n      children: /*#__PURE__*/_jsxDEV(Image, {\n        alt: \"image\",\n        src: \"\".concat(local_backend_url, \"/storage/\").concat(option.image.image_link),\n        height: \"100%\",\n        width: \"100%\",\n        layout: \"responsive\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, _this), option.title && /*#__PURE__*/_jsxDEV(TextContainer, {\n      children: [/*#__PURE__*/_jsxDEV(OptionButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"\".concat(String.fromCharCode(position + 64), \". \").concat(option.title)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, _this), isChecked && \"checked\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Option, \"OAQf9SHEQQsOOZKjohcuI3tGtQ0=\", false, function () {\n  return [useStyles];\n});\n\n_c = Option;\nexport default Option;\nvar Container = withStyles({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginBottom: \"1rem\",\n    cursor: \"pointer\"\n  }\n})(Box);\nvar ImageContainer = withStyles({\n  root: {\n    height: 100,\n    width: 100,\n    borderRadius: 5,\n    marginRight: \"2rem\",\n    overflow: \"hidden\",\n    flexShrink: 0\n  }\n})(Box);\nvar TextContainer = withStyles({\n  root: {\n    background: \"transparent linear-gradient(180deg, #995FD4 0%, #1F29356E 100%) 0% 0% no-repeat padding-box\",\n    width: \"100%\",\n    padding: \"1rem 1rem\",\n    borderRadius: 10,\n    display: \"flex\",\n    alignItems: \"center\"\n  }\n})(Box);\nvar OptionButton = withStyles({\n  root: {\n    padding: \"0.7rem\",\n    backgroundColor: \"#17ABC2\",\n    borderRadius: \"50%\",\n    overflow: \"hidden\",\n    marginRight: \"1rem\"\n  }\n})(Box);\n\nvar _c;\n\n$RefreshReg$(_c, \"Option\");","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/Question/Style1/Option/Option.tsx"],"names":["React","useEffect","Box","makeStyles","Typography","withStyles","Image","local_backend_url","useStyles","container","display","alignItems","marginBottom","cursor","Option","option","position","isChecked","classes","console","log","title","id","getIsChecked","setIsChecked","answers","setAnswers","image","image_link","String","fromCharCode","Container","root","ImageContainer","height","width","borderRadius","marginRight","overflow","flexShrink","TextContainer","background","padding","OptionButton","backgroundColor"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAA4BC,SAA5B,QAAuD,OAAvD;AAEA,SAASC,GAAT,EAAcC,UAAd,EAA0BC,UAA1B,EAAsCC,UAAtC,QAAwD,mBAAxD;AAGA,OAAOC,KAAP,MAAkB,YAAlB;AACA,SAASC,iBAAT,QAAkC,iBAAlC;AASA,IAAMC,SAAS,GAAGL,UAAU,CAAC;AAC3BM,EAAAA,SAAS,EAAE;AACTC,IAAAA,OAAO,EAAE,MADA;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,YAAY,EAAE,MAHL;AAITC,IAAAA,MAAM,EAAE;AAJC;AADgB,CAAD,CAA5B;;AASA,IAAMC,MAAwB,GAAG,SAA3BA,MAA2B,OAAqC;AAAA;;AAAA,MAAlCC,MAAkC,QAAlCA,MAAkC;AAAA,MAA1BC,QAA0B,QAA1BA,QAA0B;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;AAGpE,MAAMC,OAAO,GAAGV,SAAS,CAAC;AAAES,IAAAA,SAAS,EAATA;AAAF,GAAD,CAAzB;AAEAhB,EAAAA,SAAS,CAAC,YAAM;AACdkB,IAAAA,OAAO,CAACC,GAAR,WACKL,MAAM,CAACM,KADZ,cACqBN,MAAM,CAACO,EAD5B,iBAEIC,YAAY,CAACR,MAAM,CAACO,EAAR,CAAZ,GAA0B,SAA1B,GAAsC,WAF1C;AAKAE,IAAAA,YAAY,CAACD,YAAY,CAACR,MAAM,CAACO,EAAR,CAAb,CAAZ;AACD,GAPQ,EAON,CAACG,OAAD,CAPM,CAAT;AASA,sBACE,QAAC,SAAD;AAAW,IAAA,OAAO,EAAE;AAAA,aAAMC,UAAU,CAACX,MAAM,CAACO,EAAR,CAAhB;AAAA,KAApB;AAAA,eACGP,MAAM,CAACY,KAAP,iBACC,QAAC,cAAD;AAAA,6BACE,QAAC,KAAD;AACE,QAAA,GAAG,EAAC,OADN;AAEE,QAAA,GAAG,YAAKpB,iBAAL,sBAAkCQ,MAAM,CAACY,KAAP,CAAaC,UAA/C,CAFL;AAGE,QAAA,MAAM,EAAE,MAHV;AAIE,QAAA,KAAK,EAAE,MAJT;AAKE,QAAA,MAAM,EAAC;AALT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aAFJ,EAYGb,MAAM,CAACM,KAAP,iBACC,QAAC,aAAD;AAAA,8BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,QAAC,UAAD;AAAA,4BACMQ,MAAM,CAACC,YAAP,CAAoBd,QAAQ,GAAG,EAA/B,CADN,eAC6CD,MAAM,CAACM,KADpD;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA,aAbJ,EAoBGJ,SAAS,IAAI,SApBhB;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAwBD,CAtCD;;GAAMH,M;UAGYN,S;;;KAHZM,M;AAwCN,eAAeA,MAAf;AAEA,IAAMiB,SAAS,GAAG1B,UAAU,CAAC;AAC3B2B,EAAAA,IAAI,EAAE;AACJtB,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,UAAU,EAAE,QAFR;AAGJC,IAAAA,YAAY,EAAE,MAHV;AAIJC,IAAAA,MAAM,EAAE;AAJJ;AADqB,CAAD,CAAV,CAOfX,GAPe,CAAlB;AASA,IAAM+B,cAAc,GAAG5B,UAAU,CAAC;AAChC2B,EAAAA,IAAI,EAAE;AACJE,IAAAA,MAAM,EAAE,GADJ;AAEJC,IAAAA,KAAK,EAAE,GAFH;AAGJC,IAAAA,YAAY,EAAE,CAHV;AAIJC,IAAAA,WAAW,EAAE,MAJT;AAKJC,IAAAA,QAAQ,EAAE,QALN;AAMJC,IAAAA,UAAU,EAAE;AANR;AAD0B,CAAD,CAAV,CASpBrC,GAToB,CAAvB;AAWA,IAAMsC,aAAa,GAAGnC,UAAU,CAAC;AAC/B2B,EAAAA,IAAI,EAAE;AACJS,IAAAA,UAAU,EACR,6FAFE;AAGJN,IAAAA,KAAK,EAAE,MAHH;AAIJO,IAAAA,OAAO,EAAE,WAJL;AAKJN,IAAAA,YAAY,EAAE,EALV;AAMJ1B,IAAAA,OAAO,EAAE,MANL;AAOJC,IAAAA,UAAU,EAAE;AAPR;AADyB,CAAD,CAAV,CAUnBT,GAVmB,CAAtB;AAYA,IAAMyC,YAAY,GAAGtC,UAAU,CAAC;AAC9B2B,EAAAA,IAAI,EAAE;AACJU,IAAAA,OAAO,EAAE,QADL;AAEJE,IAAAA,eAAe,EAAE,SAFb;AAGJR,IAAAA,YAAY,EAAE,KAHV;AAIJE,IAAAA,QAAQ,EAAE,QAJN;AAKJD,IAAAA,WAAW,EAAE;AALT;AADwB,CAAD,CAAV,CAQlBnC,GARkB,CAArB","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\n\nimport { Box, makeStyles, Typography, withStyles } from \"@material-ui/core\";\nimport IOption from \"../../../../Models/IOption\";\n\nimport Image from \"next/image\";\nimport { local_backend_url } from \"../../../../url\";\nimport { AnswersContext } from \"../../Question\";\n\ninterface IProps {\n  option: IOption;\n  position: number;\n  isChecked?: boolean;\n}\n\nconst useStyles = makeStyles({\n  container: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginBottom: \"1rem\",\n    cursor: \"pointer\",\n  },\n});\n\nconst Option: React.FC<IProps> = ({ option, position, isChecked }) => {\n\n\n  const classes = useStyles({ isChecked });\n\n  useEffect(() => {\n    console.log(\n      `${option.title}:${option.id} is ${\n        getIsChecked(option.id) ? \"checked\" : \"unchecked\"\n      }`\n    );\n    setIsChecked(getIsChecked(option.id));\n  }, [answers]);\n\n  return (\n    <Container onClick={() => setAnswers(option.id)}>\n      {option.image && (\n        <ImageContainer>\n          <Image\n            alt=\"image\"\n            src={`${local_backend_url}/storage/${option.image.image_link}`}\n            height={\"100%\"}\n            width={\"100%\"}\n            layout=\"responsive\"\n          />\n        </ImageContainer>\n      )}\n      {option.title && (\n        <TextContainer>\n          <OptionButton />\n          <Typography>\n            {`${String.fromCharCode(position + 64)}. ${option.title}`}\n          </Typography>\n        </TextContainer>\n      )}\n      {isChecked && \"checked\"}\n    </Container>\n  );\n};\n\nexport default Option;\n\nconst Container = withStyles({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginBottom: \"1rem\",\n    cursor: \"pointer\",\n  },\n})(Box);\n\nconst ImageContainer = withStyles({\n  root: {\n    height: 100,\n    width: 100,\n    borderRadius: 5,\n    marginRight: \"2rem\",\n    overflow: \"hidden\",\n    flexShrink: 0,\n  },\n})(Box);\n\nconst TextContainer = withStyles({\n  root: {\n    background:\n      \"transparent linear-gradient(180deg, #995FD4 0%, #1F29356E 100%) 0% 0% no-repeat padding-box\",\n    width: \"100%\",\n    padding: \"1rem 1rem\",\n    borderRadius: 10,\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n})(Box);\n\nconst OptionButton = withStyles({\n  root: {\n    padding: \"0.7rem\",\n    backgroundColor: \"#17ABC2\",\n    borderRadius: \"50%\",\n    overflow: \"hidden\",\n    marginRight: \"1rem\",\n  },\n})(Box);\n"]},"metadata":{},"sourceType":"module"}