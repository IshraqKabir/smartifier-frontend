{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ishraqkabir/workspace/smartifier-frontend/Components/QuizTest/Timer/Timer.tsx\";\nimport { Box, makeStyles, withStyles } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\n\nconst Timer = ({\n  start_time,\n  duration\n}) => {\n  const {\n    0: secondsRemaining,\n    1: setSecondsRemaining\n  } = useState(getTimeRemainingInSeconds(start_time, duration));\n  const {\n    0: timeRemaining,\n    1: setTimeRemaing\n  } = useState(\"\");\n  const [percentage, setPercentage] = useState < number;\n  useEffect(() => {\n    setInterval(() => {\n      setSecondsRemaining(getTimeRemainingInSeconds(start_time, duration));\n    }, 500);\n  }, []);\n  useEffect(() => {\n    if (secondsRemaining <= 0) {\n      setTimeRemaing(\"Test Finished\");\n    } else {\n      setTimeRemaing(parseSecondsToClock(secondsRemaining));\n    }\n  }, [secondsRemaining]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: `${timeRemaining}`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 10\n  }, this);\n};\n\nexport default Timer;\nconst Container = withStyles({\n  root: {\n    position: \"fixed\",\n    bottom: 0,\n    left: 0,\n    right: 0,\n    padding: \"1.5rem 5rem\",\n    background: \"transparent linear-gradient(180deg, #003EAA 0%, #002461E0 100%) 0% 0% no-repeat padding-box\",\n    color: \"white\",\n    fontWeight: \"bold\",\n    opacity: 0.6\n  }\n})(Box);\nconst useStyles = makeStyles({\n  loader: {\n    background: \"transparent linear-gradient(180deg, #003EAA 0%, #002461E0 100%) 0% 0% no-repeat padding-box\",\n    width: props => {\n      const {\n        percentage\n      } = props;\n      return percentage;\n    }\n  }\n});\n\nfunction getTimeRemainingInSeconds(start_time, duration) {\n  const totalDurationInSeconds = getSecondsFromDuration(duration);\n  const start = new Date(`${start_time}`);\n  const now = new Date();\n  const end = new Date(`${start_time}`);\n  end.setTime(start.getTime() + totalDurationInSeconds * 1000);\n  const secondsLeft = (end.getTime() - now.getTime()) / 1000;\n  return Math.floor(secondsLeft);\n}\n\nfunction getSecondsFromDuration(duration) {\n  const [hours, mins, seconds] = duration.split(\":\");\n  let totalSeconds = 0;\n  totalSeconds += parseInt(hours) * 60 * 60;\n  totalSeconds += parseInt(mins) * 60;\n  totalSeconds += parseInt(seconds);\n  return totalSeconds;\n}\n\nfunction parseSecondsToClock(secondsRemaining) {\n  const mins = Math.floor(secondsRemaining / 60);\n  const seconds = Math.floor(secondsRemaining % 60);\n  return `${mins < 10 ? `0${mins}` : mins}:${seconds < 10 ? `0${seconds}` : seconds}`;\n}\n\nfunction getPercentage(start_time, duration) {\n  const totalDurationInSeconds = getSecondsFromDuration(duration);\n  const start = new Date(`${start_time}`);\n  const now = new Date();\n  const end = new Date(`${start_time}`);\n  end.setTime(start.getTime() + totalDurationInSeconds * 1000);\n  const percentage = (now.getTime() - start.getTime()) * 1000 / totalDurationInSeconds;\n  return percentage;\n}","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/QuizTest/Timer/Timer.tsx"],"names":["Box","makeStyles","withStyles","React","useEffect","useState","Timer","start_time","duration","secondsRemaining","setSecondsRemaining","getTimeRemainingInSeconds","timeRemaining","setTimeRemaing","percentage","setPercentage","number","setInterval","parseSecondsToClock","Container","root","position","bottom","left","right","padding","background","color","fontWeight","opacity","useStyles","loader","width","props","totalDurationInSeconds","getSecondsFromDuration","start","Date","now","end","setTime","getTime","secondsLeft","Math","floor","hours","mins","seconds","split","totalSeconds","parseInt","getPercentage"],"mappings":"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","sourcesContent":["import { Box, makeStyles, withStyles } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\n\ninterface IProps {\n  start_time: string;\n  duration: string;\n}\n\nconst Timer: React.FC<IProps> = ({ start_time, duration }) => {\n  const [secondsRemaining, setSecondsRemaining] = useState<number>(\n    getTimeRemainingInSeconds(start_time, duration)\n  );\n\n  const [timeRemaining, setTimeRemaing] = useState<string>(\"\");\n  const [percentage, setPercentage] = useState<number\n\n  useEffect(() => {\n    setInterval(() => {\n      setSecondsRemaining(getTimeRemainingInSeconds(start_time, duration));\n    }, 500);\n  }, []);\n\n  useEffect(() => {\n    if (secondsRemaining <= 0) {\n      setTimeRemaing(\"Test Finished\");\n    } else {\n      setTimeRemaing(parseSecondsToClock(secondsRemaining));\n    }\n  }, [secondsRemaining]);\n\n  return <Container>{`${timeRemaining}`}</Container>;\n};\n\nexport default Timer;\n\nconst Container = withStyles({\n  root: {\n    position: \"fixed\",\n    bottom: 0,\n    left: 0,\n    right: 0,\n    padding: \"1.5rem 5rem\",\n    background:\n      \"transparent linear-gradient(180deg, #003EAA 0%, #002461E0 100%) 0% 0% no-repeat padding-box\",\n    color: \"white\",\n    fontWeight: \"bold\",\n    opacity: 0.6,\n  },\n})(Box);\n\nconst useStyles = makeStyles({\n  loader: {\n    background:\n      \"transparent linear-gradient(180deg, #003EAA 0%, #002461E0 100%) 0% 0% no-repeat padding-box\",\n    width: (props: { percentage: number }) => {\n      const { percentage } = props;\n      return percentage;\n    },\n  },\n});\n\nfunction getTimeRemainingInSeconds(\n  start_time: string,\n  duration: string\n): number {\n  const totalDurationInSeconds: number = getSecondsFromDuration(duration);\n\n  const start = new Date(`${start_time}`);\n  const now = new Date();\n  const end = new Date(`${start_time}`);\n  end.setTime(start.getTime() + totalDurationInSeconds * 1000);\n\n  const secondsLeft: number = (end.getTime() - now.getTime()) / 1000;\n\n  return Math.floor(secondsLeft);\n}\n\nfunction getSecondsFromDuration(duration: string): number {\n  const [hours, mins, seconds] = duration.split(\":\");\n\n  let totalSeconds: number = 0;\n  totalSeconds += parseInt(hours) * 60 * 60;\n  totalSeconds += parseInt(mins) * 60;\n  totalSeconds += parseInt(seconds);\n\n  return totalSeconds;\n}\n\nfunction parseSecondsToClock(secondsRemaining: number): string {\n  const mins = Math.floor(secondsRemaining / 60);\n  const seconds = Math.floor(secondsRemaining % 60);\n\n  return `${mins < 10 ? `0${mins}` : mins}:${\n    seconds < 10 ? `0${seconds}` : seconds\n  }`;\n}\n\nfunction getPercentage(start_time: string, duration: string): number {\n  const totalDurationInSeconds: number = getSecondsFromDuration(duration);\n\n  const start = new Date(`${start_time}`);\n  const now = new Date();\n  const end = new Date(`${start_time}`);\n  end.setTime(start.getTime() + totalDurationInSeconds * 1000);\n\n  const percentage: number =\n    ((now.getTime() - start.getTime()) * 1000) / totalDurationInSeconds;\n\n  return percentage;\n}\n"]},"metadata":{},"sourceType":"module"}