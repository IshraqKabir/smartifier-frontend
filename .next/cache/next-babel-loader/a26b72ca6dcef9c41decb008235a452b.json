{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ishraqkabir/workspace/smartifier-frontend/Components/Post/SinglePost/SinglePost.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { createContext, useEffect, useState } from \"react\";\nimport { makeStyles, Typography, withStyles } from \"@material-ui/core\";\nimport Tags from \"./Tags/Tags\";\nimport PostBody from \"./PostBody/PostBody\";\nimport PostFeaturedImage from \"./PostBody/PostFeaturedImage/PostFeaturedImage\";\nimport Link from \"next/link\";\nimport LCSStatus from \"./LCSStatus/LCSStatus\";\nimport CommentBox from \"./CommentBox/CommentBox\";\nimport CommentsSection from \"./CommentsSection/CommentsSection\";\nimport axios from \"axios\";\nimport { backend_url } from \"../../../url\";\nimport useLocalState from \"../../../custom-hooks/useLocalState\";\nexport var CommentsCountContext = /*#__PURE__*/createContext(null);\nexport var CommentsContext = /*#__PURE__*/createContext(null);\n\nvar Post = function Post(_ref) {\n  _s();\n\n  var _post$topic$, _post$topic$2, _post$user;\n\n  var post = _ref.post;\n\n  var _useState = useState(post === null || post === void 0 ? void 0 : post.comments_count),\n      commentsCount = _useState[0],\n      setCommentsCount = _useState[1];\n\n  var _useState2 = useState([]),\n      comments = _useState2[0],\n      setComments = _useState2[1];\n\n  var _useState3 = useState(\"empty\"),\n      likedCommentsIdsByUser = _useState3[0],\n      setLikedCommentsIdsByUser = _useState3[1];\n\n  var _useLocalState = useLocalState(\"user\", \"\"),\n      _useLocalState2 = _slicedToArray(_useLocalState, 1),\n      user = _useLocalState2[0];\n\n  useEffect(function () {\n    fetchComments();\n    getLikedCommentsIds();\n  }, []);\n  useEffect(function () {\n    getLikedCommentsIds();\n    if (!user) setLikedCommentsIdsByUser(\"empty\");\n  }, [user]);\n\n  var getLikedCommentsIds = function getLikedCommentsIds() {\n    if (user && user.token && likedCommentsIdsByUser == \"empty\") {\n      axios.get(\"\".concat(backend_url, \"/api/posts/\").concat(post.id, \"/liked-comments-ids\"), {\n        headers: {\n          Accept: \"application/json\",\n          Authorization: \"Bearer \".concat(user.token)\n        }\n      }).then(function (response) {\n        setLikedCommentsIdsByUser(response.data);\n      });\n    }\n  };\n\n  var fetchComments = function fetchComments() {\n    axios.get(\"\".concat(backend_url, \"/api/posts/\").concat(post.id, \"/comments\"), {\n      headers: {\n        Accept: \"application/json\"\n      }\n    }).then(function (response) {\n      setComments(response.data);\n    });\n  };\n\n  var classes = useStyles();\n  var postDate = new Date(post.created_at);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: [(post === null || post === void 0 ? void 0 : post.topic) && /*#__PURE__*/_jsxDEV(Link, {\n      href: \"/blog/topics/\".concat(post === null || post === void 0 ? void 0 : (_post$topic$ = post.topic[0]) === null || _post$topic$ === void 0 ? void 0 : _post$topic$.slug, \"/posts\"),\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        style: {\n          textDecoration: \"none\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.topic,\n          children: /*#__PURE__*/_jsxDEV(TopicName, {\n            children: post === null || post === void 0 ? void 0 : (_post$topic$2 = post.topic[0]) === null || _post$topic$2 === void 0 ? void 0 : _post$topic$2.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.postTitle,\n        children: [/*#__PURE__*/_jsxDEV(PostTitle, {\n          children: post === null || post === void 0 ? void 0 : post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(PostAuthor, {\n          variant: \"subtitle2\",\n          children: [\"by \", post === null || post === void 0 ? void 0 : (_post$user = post.user) === null || _post$user === void 0 ? void 0 : _post$user.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(PostDate, {\n          variant: \"caption\",\n          children: [\"\".concat(monthNames[postDate.getMonth()], \" \").concat(postDate.getDate(), \" \").concat(postDate.getFullYear()), \" \", \". \", post === null || post === void 0 ? void 0 : post.read_time]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, _this), (post === null || post === void 0 ? void 0 : post.featured_image) ? /*#__PURE__*/_jsxDEV(PostFeaturedImage, {\n        src: post === null || post === void 0 ? void 0 : post.featured_image,\n        caption: post === null || post === void 0 ? void 0 : post.featured_image_caption\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, _this) : null, /*#__PURE__*/_jsxDEV(PostBody, {\n        body: post === null || post === void 0 ? void 0 : post.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.bottomContainer,\n      children: [post.tags ? /*#__PURE__*/_jsxDEV(Tags, {\n        tags: post.tags\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 22\n      }, _this) : null, /*#__PURE__*/_jsxDEV(ReadTime, {\n        variant: \"subtitle2\",\n        children: post === null || post === void 0 ? void 0 : post.read_time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(CommentsCountContext.Provider, {\n      value: {\n        commentsCount: commentsCount,\n        setCommentsCount: setCommentsCount\n      },\n      children: [/*#__PURE__*/_jsxDEV(LCSStatus, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(CommentsContext.Provider, {\n        value: {\n          comments: comments,\n          setComments: setComments,\n          postId: post.id,\n          likedCommentsIdsByUser: likedCommentsIdsByUser,\n          setLikedCommentsIdsByUser: setLikedCommentsIdsByUser\n        },\n        children: [/*#__PURE__*/_jsxDEV(CommentBox, {\n          postId: post.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(CommentsSection, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Post, \"RnY+x/WSVuJ92VWSVAXjCRYhnus=\", false, function () {\n  return [useLocalState, useStyles];\n});\n\n_c = Post;\nexport default Post;\nvar useStyles = makeStyles({\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"100%\"\n  },\n  topic: {\n    color: \"white\",\n    cursor: \"pointer\",\n    width: 150,\n    borderRadius: 10,\n    textAlign: \"center\",\n    textTransform: \"capitalize\",\n    paddingTop: 3,\n    paddingBottom: 3,\n    backgroundColor: function backgroundColor() {\n      return colors[0];\n    },\n    whiteSpace: \"nowrap\",\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    paddingLeft: 3,\n    paddingRight: 3,\n    marginBottom: 10,\n    \"&:hover\": {\n      textDecoration: \"underline\"\n    }\n  },\n  postTitle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    width: \"100%\"\n  },\n  bottomContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    width: \"100%\",\n    marginTop: 20\n  }\n});\nvar TopicName = withStyles({\n  root: {\n    fontSize: 13\n  }\n})(Typography);\nvar PostTitle = withStyles({\n  root: {\n    color: \"#3798A7\",\n    fontSize: 22,\n    whiteSpace: \"nowrap\",\n    textTransform: \"capitalize\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      textDecoration: \"underline\"\n    }\n  }\n})(Typography);\nvar PostAuthor = withStyles({\n  root: {\n    whiteSpace: \"nowrap\",\n    color: \"#C5C5C5\",\n    marginLeft: \"auto\",\n    marginTop: 10\n  }\n})(Typography);\nvar ReadTime = withStyles({\n  root: {\n    whiteSpace: \"nowrap\",\n    color: \"#C5C5C5\",\n    marginLeft: \"auto\",\n    marginTop: 10\n  }\n})(Typography);\nvar PostDate = withStyles({\n  root: {\n    color: \"#C5C5C5\",\n    fontWeight: \"bold\"\n  }\n})(Typography);\nvar colors = [\"#97A5B8\", \"#9C95FD\", \"#F493FF\", \"#28E36E\", \"#FFE533\"];\nvar monthNames = [\"Jan\", \"Feb\", \"March\", \"April\", \"May\", \"June\", \"July\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"];\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/Post/SinglePost/SinglePost.tsx"],"names":["React","createContext","useEffect","useState","makeStyles","Typography","withStyles","Tags","PostBody","PostFeaturedImage","Link","LCSStatus","CommentBox","CommentsSection","axios","backend_url","useLocalState","CommentsCountContext","CommentsContext","Post","post","comments_count","commentsCount","setCommentsCount","comments","setComments","likedCommentsIdsByUser","setLikedCommentsIdsByUser","user","fetchComments","getLikedCommentsIds","token","get","id","headers","Accept","Authorization","then","response","data","classes","useStyles","postDate","Date","created_at","container","topic","slug","textDecoration","name","postTitle","title","monthNames","getMonth","getDate","getFullYear","read_time","featured_image","featured_image_caption","body","bottomContainer","tags","postId","display","flexDirection","width","color","cursor","borderRadius","textAlign","textTransform","paddingTop","paddingBottom","backgroundColor","colors","whiteSpace","overflow","textOverflow","paddingLeft","paddingRight","marginBottom","alignItems","marginTop","TopicName","root","fontSize","PostTitle","PostAuthor","marginLeft","ReadTime","PostDate","fontWeight"],"mappings":"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","sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\nimport { Divider, makeStyles, Typography, withStyles } from \"@material-ui/core\";\nimport IPost from \"../../../Models/IPost\";\nimport Tags from \"./Tags/Tags\";\nimport PostBody from \"./PostBody/PostBody\";\nimport PostFeaturedImage from \"./PostBody/PostFeaturedImage/PostFeaturedImage\";\n\nimport Link from \"next/link\";\nimport LCSStatus from \"./LCSStatus/LCSStatus\";\nimport CommentBox from \"./CommentBox/CommentBox\";\nimport CommentsSection from \"./CommentsSection/CommentsSection\";\nimport axios from \"axios\";\nimport { backend_url } from \"../../../url\";\nimport IPostComment from \"../../../Models/IPostComment\";\nimport useLocalState from \"../../../custom-hooks/useLocalState\";\n\ninterface IProps {\n  post: IPost;\n}\n\nexport const CommentsCountContext = createContext(null);\nexport const CommentsContext = createContext(null);\n\nconst Post: React.FC<IProps> = ({ post }) => {\n  const [commentsCount, setCommentsCount] = useState<number>(\n    post?.comments_count\n  );\n\n  const [comments, setComments] = useState<[] | IPostComment[]>([]);\n  const [likedCommentsIdsByUser, setLikedCommentsIdsByUser] = useState<\n    \"empty\" | number[]\n  >(\"empty\");\n\n  const [user] = useLocalState(\"user\", \"\");\n\n  useEffect(() => {\n    fetchComments();\n    getLikedCommentsIds();\n  }, []);\n\n  useEffect(() => {\n    getLikedCommentsIds();\n    if (!user) setLikedCommentsIdsByUser(\"empty\");\n  }, [user]);\n\n  const getLikedCommentsIds = () => {\n    if (user && user.token && likedCommentsIdsByUser == \"empty\") {\n      axios\n        .get(`${backend_url}/api/posts/${post.id}/liked-comments-ids`, {\n          headers: {\n            Accept: \"application/json\",\n            Authorization: `Bearer ${user.token}`,\n          },\n        })\n        .then((response) => {\n          setLikedCommentsIdsByUser(response.data);\n        });\n    }\n  };\n\n  const fetchComments = () => {\n    axios\n      .get(`${backend_url}/api/posts/${post.id}/comments`, {\n        headers: {\n          Accept: \"application/json\",\n        },\n      })\n      .then((response) => {\n        setComments(response.data);\n      });\n  };\n\n  const classes = useStyles();\n\n  const postDate = new Date(post.created_at);\n\n  return (\n    <div className={classes.container}>\n      {post?.topic && (\n        <Link href={`/blog/topics/${post?.topic[0]?.slug}/posts`}>\n          <a style={{ textDecoration: \"none\" }}>\n            <div className={classes.topic}>\n              <TopicName>{post?.topic[0]?.name}</TopicName>\n            </div>\n          </a>\n        </Link>\n      )}\n      <div>\n        <div className={classes.postTitle}>\n          <PostTitle>{post?.title}</PostTitle>\n          <PostAuthor variant=\"subtitle2\">by {post?.user?.name}</PostAuthor>\n        </div>\n        <div>\n          <PostDate variant=\"caption\">\n            {`${\n              monthNames[postDate.getMonth()]\n            } ${postDate.getDate()} ${postDate.getFullYear()}`}{\" \"}\n            . {post?.read_time}\n          </PostDate>\n        </div>\n        {post?.featured_image ? (\n          <PostFeaturedImage\n            src={post?.featured_image}\n            caption={post?.featured_image_caption}\n          />\n        ) : null}\n        <PostBody body={post?.body} />\n      </div>\n      <div className={classes.bottomContainer}>\n        {post.tags ? <Tags tags={post.tags} /> : null}\n        <ReadTime variant=\"subtitle2\">{post?.read_time}</ReadTime>\n      </div>\n\n      <CommentsCountContext.Provider\n        value={{\n          commentsCount: commentsCount,\n          setCommentsCount: setCommentsCount,\n        }}\n      >\n        <LCSStatus post={post} />\n        <CommentsContext.Provider\n          value={{\n            comments: comments,\n            setComments: setComments,\n            postId: post.id,\n            likedCommentsIdsByUser: likedCommentsIdsByUser,\n            setLikedCommentsIdsByUser: setLikedCommentsIdsByUser,\n          }}\n        >\n          <CommentBox postId={post.id} />\n          <CommentsSection />\n        </CommentsContext.Provider>\n      </CommentsCountContext.Provider>\n    </div>\n  );\n};\n\nexport default Post;\n\nconst useStyles = makeStyles({\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"100%\",\n  },\n  topic: {\n    color: \"white\",\n    cursor: \"pointer\",\n    width: 150,\n    borderRadius: 10,\n    textAlign: \"center\",\n    textTransform: \"capitalize\",\n    paddingTop: 3,\n    paddingBottom: 3,\n    backgroundColor: () => {\n      return colors[0];\n    },\n    whiteSpace: \"nowrap\",\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    paddingLeft: 3,\n    paddingRight: 3,\n    marginBottom: 10,\n    \"&:hover\": {\n      textDecoration: \"underline\",\n    },\n  },\n  postTitle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    width: \"100%\",\n  },\n  bottomContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    width: \"100%\",\n    marginTop: 20,\n  },\n});\n\nconst TopicName = withStyles({\n  root: {\n    fontSize: 13,\n  },\n})(Typography);\n\nconst PostTitle = withStyles({\n  root: {\n    color: \"#3798A7\",\n    fontSize: 22,\n    whiteSpace: \"nowrap\",\n    textTransform: \"capitalize\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      textDecoration: \"underline\",\n    },\n  },\n})(Typography);\n\nconst PostAuthor = withStyles({\n  root: {\n    whiteSpace: \"nowrap\",\n    color: \"#C5C5C5\",\n    marginLeft: \"auto\",\n    marginTop: 10,\n  },\n})(Typography);\n\nconst ReadTime = withStyles({\n  root: {\n    whiteSpace: \"nowrap\",\n    color: \"#C5C5C5\",\n    marginLeft: \"auto\",\n    marginTop: 10,\n  },\n})(Typography);\n\nconst PostDate = withStyles({\n  root: {\n    color: \"#C5C5C5\",\n    fontWeight: \"bold\",\n  },\n})(Typography);\n\nconst colors: string[] = [\n  \"#97A5B8\",\n  \"#9C95FD\",\n  \"#F493FF\",\n  \"#28E36E\",\n  \"#FFE533\",\n];\n\nconst monthNames = [\n  \"Jan\",\n  \"Feb\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"Aug\",\n  \"Sept\",\n  \"Oct\",\n  \"Nov\",\n  \"Dec\",\n];\n"]},"metadata":{},"sourceType":"module"}