{"ast":null,"code":"import { google } from \"googleapis\";\n\nfunction getGoogleUrl() {\n  const oauth2Client = new google.auth.OAuth2(googleConfig.clientId, googleConfig.clientSecret, googleConfig.redirect); // generate a url that asks permissions for Blogger and Google Calendar scopes\n\n  const scopes = [\"https://www.googleapis.com/auth/blogger\", \"https://www.googleapis.com/auth/calendar\"];\n  const url = oauth2Client.generateAuthUrl({\n    // 'online' (default) or 'offline' (gets refresh_token)\n    access_type: \"offline\",\n    // If you only need one scope you can pass it as a string\n    scope: scopes\n  });\n  return url;\n}\n\nexport default (async (req, res) => {\n  const {\n    get\n  } = req.query;\n\n  if (get === \"link\") {\n    res.statusCode = 200;\n    const url = getGoogleUrl();\n    res.json({\n      url\n    });\n  } else if (get === \"user\") {\n    if (!req.query.code) {\n      res.statusCode = 500;\n    } else {\n      const {\n        code\n      } = req.query;\n      const user = await getGoogleAccountFromCode(code);\n      return user;\n    }\n  } else {\n    res.statusCode = 500;\n  }\n});","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/pages/api/auth/google.ts"],"names":["google","getGoogleUrl","oauth2Client","auth","OAuth2","googleConfig","clientId","clientSecret","redirect","scopes","url","generateAuthUrl","access_type","scope","req","res","get","query","statusCode","json","code","user","getGoogleAccountFromCode"],"mappings":"AAAA,SAASA,MAAT,QAAuB,YAAvB;;AAEA,SAASC,YAAT,GAAwB;AACtB,QAAMC,YAAY,GAAG,IAAIF,MAAM,CAACG,IAAP,CAAYC,MAAhB,CACnBC,YAAY,CAACC,QADM,EAEnBD,YAAY,CAACE,YAFM,EAGnBF,YAAY,CAACG,QAHM,CAArB,CADsB,CAOtB;;AACA,QAAMC,MAAM,GAAG,CACb,yCADa,EAEb,0CAFa,CAAf;AAKA,QAAMC,GAAG,GAAGR,YAAY,CAACS,eAAb,CAA6B;AACvC;AACAC,IAAAA,WAAW,EAAE,SAF0B;AAIvC;AACAC,IAAAA,KAAK,EAAEJ;AALgC,GAA7B,CAAZ;AAQA,SAAOC,GAAP;AACD;;AAED,gBAAe,OAAOI,GAAP,EAAYC,GAAZ,KAAoB;AACjC,QAAM;AAAEC,IAAAA;AAAF,MAAUF,GAAG,CAACG,KAApB;;AAEA,MAAID,GAAG,KAAK,MAAZ,EAAoB;AAClBD,IAAAA,GAAG,CAACG,UAAJ,GAAiB,GAAjB;AACA,UAAMR,GAAG,GAAGT,YAAY,EAAxB;AACAc,IAAAA,GAAG,CAACI,IAAJ,CAAS;AAAET,MAAAA;AAAF,KAAT;AACD,GAJD,MAIO,IAAIM,GAAG,KAAK,MAAZ,EAAoB;AACzB,QAAI,CAACF,GAAG,CAACG,KAAJ,CAAUG,IAAf,EAAqB;AACnBL,MAAAA,GAAG,CAACG,UAAJ,GAAiB,GAAjB;AACD,KAFD,MAEO;AACL,YAAM;AAAEE,QAAAA;AAAF,UAAWN,GAAG,CAACG,KAArB;AAEA,YAAMI,IAAI,GAAG,MAAMC,wBAAwB,CAACF,IAAD,CAA3C;AAEA,aAAOC,IAAP;AACD;AACF,GAVM,MAUA;AACLN,IAAAA,GAAG,CAACG,UAAJ,GAAiB,GAAjB;AACD;AACF,CApBD","sourcesContent":["import { google } from \"googleapis\";\n\nfunction getGoogleUrl() {\n  const oauth2Client = new google.auth.OAuth2(\n    googleConfig.clientId,\n    googleConfig.clientSecret,\n    googleConfig.redirect\n  );\n\n  // generate a url that asks permissions for Blogger and Google Calendar scopes\n  const scopes = [\n    \"https://www.googleapis.com/auth/blogger\",\n    \"https://www.googleapis.com/auth/calendar\",\n  ];\n\n  const url = oauth2Client.generateAuthUrl({\n    // 'online' (default) or 'offline' (gets refresh_token)\n    access_type: \"offline\",\n\n    // If you only need one scope you can pass it as a string\n    scope: scopes,\n  });\n\n  return url;\n}\n\nexport default async (req, res) => {\n  const { get } = req.query;\n\n  if (get === \"link\") {\n    res.statusCode = 200;\n    const url = getGoogleUrl();\n    res.json({ url });\n  } else if (get === \"user\") {\n    if (!req.query.code) {\n      res.statusCode = 500;\n    } else {\n      const { code } = req.query;\n\n      const user = await getGoogleAccountFromCode(code);\n\n      return user;\n    }\n  } else {\n    res.statusCode = 500;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}