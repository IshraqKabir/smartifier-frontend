{"ast":null,"code":"import { useState, useEffect } from \"react\";\nimport Cookies from \"js-cookie\";\nexport default function useLocalState(key, defaultValue) {\n  var _useState = useState(function () {\n    if (true) {\n      return getValue(key);\n    }\n  }),\n      value = _useState[0],\n      setValueState = _useState[1];\n\n  useEffect(function () {\n    var listener = function listener(e) {\n      if (e.storageArea === localStorage && e.key === key) {\n        setValueState(JSON.parse(e.newValue));\n      }\n    };\n\n    window.addEventListener(\"storage\", listener);\n\n    if (!isLocalStorageWorking()) {\n      setInterval(function () {\n        if (JSON.stringify(getCookie(key)) != JSON.stringify(value)) {\n          setValueState(getCookie(key));\n        }\n      }, 500);\n    }\n\n    return function () {\n      window.removeEventListener(\"storage\", listener);\n    };\n  }, [key]);\n\n  var setValue = function setValue(newValue) {\n    setValueState(function (currentValue) {\n      var value = null;\n\n      if (typeof newValue === \"function\") {\n        value = newValue(currentValue);\n      } else {\n        value = newValue;\n      }\n\n      if (isLocalStorageWorking()) {\n        localStorage.setItem(key, JSON.stringify(value));\n      } else {\n        setCookie(key, value);\n      }\n\n      return value;\n    });\n  };\n\n  return [value, setValue];\n}\n\nvar getValue = function getValue(key) {\n  if (isLocalStorageWorking()) {\n    // return from local storage\n    var value = localStorage.getItem(key);\n    return value ? JSON.parse(value) : value;\n  } // return from cookie;\n\n\n  return getCookie(key);\n};\n\nvar isLocalStorageWorking = function isLocalStorageWorking() {\n  return true;\n  var key = \"local-storage-test\";\n  var value = 19;\n  localStorage.setItem(key, JSON.stringify(value));\n\n  if (JSON.parse(localStorage.getItem(key)) == value) {\n    console.log(\"working\");\n    return true;\n  }\n\n  console.log(\"not working\");\n  return false;\n};\n\nvar setCookie = function setCookie(key, value) {\n  Cookies.set(key ? JSON.stringify(key) : key, value ? JSON.stringify(value) : value);\n};\n\nvar getCookie = function getCookie(key) {\n  var result = Cookies.get(JSON.stringify(key));\n  return result ? JSON.parse(result) : result;\n};","map":null,"metadata":{},"sourceType":"module"}