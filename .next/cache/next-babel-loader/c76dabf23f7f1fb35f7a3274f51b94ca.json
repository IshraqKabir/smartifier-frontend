{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ishraqkabir/workspace/smartifier-frontend/Components/Layout/Topbar/NavItems/NavItem/Login/Login.tsx\";\nimport React from \"react\";\nimport { GoogleLogin } from \"react-google-login\";\nimport { backend_url } from \"../../../../../../url\";\nimport post from \"../../../../../../UtilFunctions/post\";\nimport useLocalState from \"../../../../../../custom-hooks/useLocalState\";\nimport User from \"./User/User\";\nimport { makeStyles } from \"@material-ui/core\";\nconst useStyles = makeStyles({\n  googleIcon: {\n    height: 20,\n    width: 20\n  },\n  loginButton: {\n    background: \"white\",\n    color: \"black\",\n    border: \"none\",\n    outline: \"inherit\",\n    cursor: \"pointer\",\n    padding: 0,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-around\",\n    // width: 100,\n    paddingBlock: 5,\n    paddingInline: 5,\n    borderRadius: 5\n  }\n});\n\nconst Login = () => {\n  const [user, setUser] = useLocalState(\"user\", \"\");\n  const classes = useStyles();\n\n  const responseGoogle = async googleUser => {\n    if (!googleUser.error) {\n      const id_token = googleUser.tokenId;\n      const google_id = parseInt(googleUser.profileObj.googleId);\n      post(`${backend_url}/api/auth/google/verify`, {\n        id_token: id_token,\n        google_id: google_id\n      }, response => {\n        setUser(response.data);\n      }, () => {});\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !user ? /*#__PURE__*/_jsxDEV(GoogleLogin, {\n      clientId: \"540083931812-7bt05mqtrriog1f1kdpvotbvnr01iien.apps.googleusercontent.com\",\n      buttonText: \"Login\",\n      onSuccess: responseGoogle,\n      onFailure: responseGoogle,\n      cookiePolicy: \"single_host_origin\",\n      render: renderProps => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: renderProps.onClick,\n        disabled: false,\n        className: classes.loginButton,\n        children: [/*#__PURE__*/_jsxDEV(GoogleIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this), \"Login\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(User, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\nexport default Login;\n\nconst GoogleIcon = () => {\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    className: classes.googleIcon,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 48 48\",\n    children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n      children: /*#__PURE__*/_jsxDEV(\"path\", {\n        id: \"a\",\n        d: \"M44.5 20H24v8.5h11.8C34.7 33.9 30.1 37 24 37c-7.2 0-13-5.8-13-13s5.8-13 13-13c3.1 0 5.9 1.1 8.1 2.9l6.4-6.4C34.6 4.1 29.6 2 24 2 11.8 2 2 11.8 2 24s9.8 22 22 22c11 0 21-8 21-22 0-1.3-.2-2.7-.5-4z\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"clipPath\", {\n      id: \"b\",\n      children: /*#__PURE__*/_jsxDEV(\"use\", {\n        xlinkHref: \"#a\",\n        overflow: \"visible\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      clipPath: \"url(#b)\",\n      fill: \"#FBBC05\",\n      d: \"M0 37V11l17 13z\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      clipPath: \"url(#b)\",\n      fill: \"#EA4335\",\n      d: \"M0 11l17 13 7-6.1L48 14V0H0z\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      clipPath: \"url(#b)\",\n      fill: \"#34A853\",\n      d: \"M0 37l30-23 7.9 1L48 0v48H0z\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      clipPath: \"url(#b)\",\n      fill: \"#4285F4\",\n      d: \"M48 48L17 24l-4-3 35-10z\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/Layout/Topbar/NavItems/NavItem/Login/Login.tsx"],"names":["React","GoogleLogin","backend_url","post","useLocalState","User","makeStyles","useStyles","googleIcon","height","width","loginButton","background","color","border","outline","cursor","padding","display","alignItems","justifyContent","paddingBlock","paddingInline","borderRadius","Login","user","setUser","classes","responseGoogle","googleUser","error","id_token","tokenId","google_id","parseInt","profileObj","googleId","response","data","renderProps","onClick","GoogleIcon"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport { GoogleLogin } from \"react-google-login\";\n\nimport { backend_url } from \"../../../../../../url\";\n\nimport post from \"../../../../../../UtilFunctions/post\";\nimport useLocalState from \"../../../../../../custom-hooks/useLocalState\";\nimport User from \"./User/User\";\nimport { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  googleIcon: {\n    height: 20,\n    width: 20,\n  },\n  loginButton: {\n    background: \"white\",\n    color: \"black\",\n    border: \"none\",\n    outline: \"inherit\",\n    cursor: \"pointer\",\n    padding: 0,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-around\",\n    // width: 100,\n    paddingBlock: 5,\n    paddingInline: 5,\n    borderRadius: 5,\n  }\n});\n\nconst Login: React.FC<{}> = () => {\n  const [user, setUser] = useLocalState<any>(\"user\", \"\");\n\n  const classes = useStyles();\n\n  const responseGoogle = async (googleUser) => {\n    if (!googleUser.error) {\n      const id_token = googleUser.tokenId;\n      const google_id = parseInt(googleUser.profileObj.googleId);\n\n      post(\n        `${backend_url}/api/auth/google/verify`,\n        { id_token: id_token, google_id: google_id },\n        (response) => {\n          setUser(response.data);\n        },\n        () => {}\n      );\n    }\n  };\n\n  return (\n    <>\n      {!user ? (\n        <GoogleLogin\n          clientId=\"540083931812-7bt05mqtrriog1f1kdpvotbvnr01iien.apps.googleusercontent.com\"\n          buttonText=\"Login\"\n          onSuccess={responseGoogle}\n          onFailure={responseGoogle}\n          cookiePolicy={\"single_host_origin\"}\n          render={(renderProps) => (\n            <button\n              onClick={renderProps.onClick}\n              disabled={false}\n              className={classes.loginButton}\n            >\n              <GoogleIcon />\n              Login\n            </button>\n          )}\n        />\n      ) : (\n        <User />\n      )}\n    </>\n  );\n};\n\nexport default Login;\n\nconst GoogleIcon = () => {\n  const classes = useStyles();\n\n  return (\n    <svg\n      className={classes.googleIcon}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 48 48\"\n    >\n      <defs>\n        <path\n          id=\"a\"\n          d=\"M44.5 20H24v8.5h11.8C34.7 33.9 30.1 37 24 37c-7.2 0-13-5.8-13-13s5.8-13 13-13c3.1 0 5.9 1.1 8.1 2.9l6.4-6.4C34.6 4.1 29.6 2 24 2 11.8 2 2 11.8 2 24s9.8 22 22 22c11 0 21-8 21-22 0-1.3-.2-2.7-.5-4z\"\n        />\n      </defs>\n      <clipPath id=\"b\">\n        <use xlinkHref=\"#a\" overflow=\"visible\" />\n      </clipPath>\n      <path clipPath=\"url(#b)\" fill=\"#FBBC05\" d=\"M0 37V11l17 13z\" />\n      <path\n        clipPath=\"url(#b)\"\n        fill=\"#EA4335\"\n        d=\"M0 11l17 13 7-6.1L48 14V0H0z\"\n      />\n      <path\n        clipPath=\"url(#b)\"\n        fill=\"#34A853\"\n        d=\"M0 37l30-23 7.9 1L48 0v48H0z\"\n      />\n      <path clipPath=\"url(#b)\" fill=\"#4285F4\" d=\"M48 48L17 24l-4-3 35-10z\" />\n    </svg>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}