{"ast":null,"code":"import { useState, useEffect } from \"react\";\nimport Cookies from \"js-cookie\";\n\nconst setCookie = (key, value) => {\n  Cookies.set(key ? JSON.stringify(key) : key, value ? JSON.stringify(value) : value);\n  console.log(getCookie(key));\n};\n\nconst getCookie = key => {\n  const result = Cookies.get(JSON.stringify(key));\n  return result ? JSON.parse(result) : result;\n};\n\nfunction useLocalState(key, defaultValue) {\n  const {\n    0: value,\n    1: setValue\n  } = useState(() => {\n    let result = null;\n\n    if (false) {\n      const storedValue = localStorage.getItem(key) ? JSON.parse(localStorage.getItem(key)) : localStorage.getItem(key);\n\n      if (!storedValue) {\n        result = defaultValue;\n      }\n\n      result = storedValue === null ? defaultValue : storedValue;\n    } else {\n      result = defaultValue;\n    }\n\n    if (result == \"\" || result == {} || result == []) {\n      result = getCookie(key);\n    }\n\n    return result;\n  });\n  useEffect(() => {\n    const listener = e => {\n      if (e.storageArea === localStorage && e.key === key) {\n        setValue(JSON.parse(e.newValue));\n      }\n    };\n\n    window.addEventListener(\"storage\", listener);\n    return () => {\n      window.removeEventListener(\"storage\", listener);\n    };\n  }, [key]);\n\n  const setValueInLocalStorage = newValue => {\n    setValue(currentValue => {\n      if (typeof newValue === \"function\") {\n        setCookie(key, newValue(currentValue));\n      } else {\n        setCookie(key, newValue);\n      }\n\n      const result = typeof newValue === \"function\" ? newValue(currentValue) : newValue;\n      localStorage.setItem(key, JSON.stringify(result));\n      return result;\n    });\n  };\n\n  useEffect(() => {\n    const storedValue = JSON.parse(localStorage.getItem(key));\n\n    if (storedValue) {\n      setValueInLocalStorage(storedValue);\n    } else {\n      setValueInLocalStorage(value);\n    }\n  }, []);\n  return [value, setValueInLocalStorage];\n}\n\nexport default useLocalState;","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/custom-hooks/useLocalState.ts"],"names":["useState","useEffect","Cookies","setCookie","key","value","set","JSON","stringify","console","log","getCookie","result","get","parse","useLocalState","defaultValue","setValue","storedValue","localStorage","getItem","listener","e","storageArea","newValue","window","addEventListener","removeEventListener","setValueInLocalStorage","currentValue","setItem"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport Cookies from \"js-cookie\";\n\nconst setCookie = (key, value) => {\n  Cookies.set(\n    key ? JSON.stringify(key) : key,\n    value ? JSON.stringify(value) : value\n  );\n\n  console.log(getCookie(key));\n};\n\nconst getCookie = (key) => {\n  const result = Cookies.get(JSON.stringify(key));\n  return result ? JSON.parse(result) : result;\n};\n\nfunction useLocalState<T>(key: string, defaultValue: T) {\n  const [value, setValue] = useState(() => {\n    let result = null;\n    if (process.browser) {\n      const storedValue = localStorage.getItem(key)\n        ? JSON.parse(localStorage.getItem(key))\n        : localStorage.getItem(key);\n\n      if (!storedValue) {\n        result = defaultValue;\n      }\n      result = storedValue === null ? defaultValue : storedValue;\n    } else {\n      result = defaultValue;\n    }\n\n    if (result == \"\" || result == {} || result == []) {\n      result = getCookie(key);\n    }\n\n    return result;\n  });\n\n  useEffect(() => {\n    const listener = (e) => {\n      if (e.storageArea === localStorage && e.key === key) {\n        setValue(JSON.parse(e.newValue));\n      }\n    };\n    window.addEventListener(\"storage\", listener);\n\n    return () => {\n      window.removeEventListener(\"storage\", listener);\n    };\n  }, [key]);\n\n  const setValueInLocalStorage = (newValue) => {\n    setValue((currentValue) => {\n      if (typeof newValue === \"function\") {\n        setCookie(key, newValue(currentValue));\n      } else {\n        setCookie(key, newValue);\n      }\n      const result =\n        typeof newValue === \"function\" ? newValue(currentValue) : newValue;\n      localStorage.setItem(key, JSON.stringify(result));\n      return result;\n    });\n  };\n\n  useEffect(() => {\n    const storedValue = JSON.parse(localStorage.getItem(key));\n    if (storedValue) {\n      setValueInLocalStorage(storedValue);\n    } else {\n      setValueInLocalStorage(value);\n    }\n  }, []);\n\n  return [value, setValueInLocalStorage];\n}\n\nexport default useLocalState;\n"]},"metadata":{},"sourceType":"module"}