{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ishraqkabir/workspace/smartifier-frontend/Components/Post/SinglePost/PostBody/PostBody.tsx\",\n    _this = this;\n\nimport React from \"react\";\nimport parse from \"html-react-parser\";\nimport PostBodyImage from \"./PostBodyImage/PostBodyImage\";\nimport { Box, withStyles } from \"@material-ui/core\";\nvar options = {\n  replace: function replace(_ref) {\n    var attribs = _ref.attribs,\n        children = _ref.children;\n    var image;\n\n    if (children) {\n      children.forEach(function (child) {\n        if (child.name == \"img\") {\n          var _child$attribs;\n\n          image = /*#__PURE__*/_jsxDEV(PostBodyImage, {\n            src: child.attribs.src,\n            caption: (_child$attribs = child.attribs) === null || _child$attribs === void 0 ? void 0 : _child$attribs.alt,\n            isWide: attribs[\"data-layout\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 13\n          }, _this);\n        }\n      });\n      if (image) return image;\n\n      if (children && children[0] && children[0][\"data\"]) {\n        if (children[0][\"data\"].includes(\"youtube.com\")) {\n          return /*#__PURE__*/_jsxDEV(IFramceContainer, {\n            children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n              width: \"60%\",\n              height: \"300\",\n              src: \"\".concat(children[0][\"data\"]),\n              title: \"YouTube video player\",\n              allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n              allowfullscreen: \"true\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, _this);\n        }\n      }\n    }\n  }\n};\n\nvar PostBody = function PostBody(_ref2) {\n  var body = _ref2.body;\n  var el = parse(\"\".concat(body), options);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: el\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 10\n  }, _this);\n};\n\n_c = PostBody;\nexport default PostBody;\nvar Container = withStyles({\n  root: {\n    lineHeight: 1.6,\n    fontSize: 13,\n    color: \"#686868\",\n    marginBlock: 5\n  }\n})(Box);\nvar IFramceContainer = withStyles({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: \"100%\",\n    margin: \"1rem 0rem\"\n  }\n})(Box);\n\nvar _c;\n\n$RefreshReg$(_c, \"PostBody\");","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/Post/SinglePost/PostBody/PostBody.tsx"],"names":["React","parse","PostBodyImage","Box","withStyles","options","replace","attribs","children","image","forEach","child","name","src","alt","includes","PostBody","body","el","Container","root","lineHeight","fontSize","color","marginBlock","IFramceContainer","display","alignItems","justifyContent","width","margin"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,KAAP,MAA8C,mBAA9C;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,SAASC,GAAT,EAAcC,UAAd,QAAgC,mBAAhC;AAEA,IAAMC,OAA+B,GAAG;AACtCC,EAAAA,OAAO,EAAE,uBAAgC;AAAA,QAA7BC,OAA6B,QAA7BA,OAA6B;AAAA,QAApBC,QAAoB,QAApBA,QAAoB;AACvC,QAAIC,KAAJ;;AACA,QAAID,QAAJ,EAAc;AACZA,MAAAA,QAAQ,CAACE,OAAT,CAAiB,UAACC,KAAD,EAAW;AAC1B,YAAIA,KAAK,CAACC,IAAN,IAAc,KAAlB,EAAyB;AAAA;;AACvBH,UAAAA,KAAK,gBACH,QAAC,aAAD;AACE,YAAA,GAAG,EAAEE,KAAK,CAACJ,OAAN,CAAcM,GADrB;AAEE,YAAA,OAAO,oBAAEF,KAAK,CAACJ,OAAR,mDAAE,eAAeO,GAF1B;AAGE,YAAA,MAAM,EAAEP,OAAO,CAAC,aAAD;AAHjB;AAAA;AAAA;AAAA;AAAA,mBADF;AAOD;AACF,OAVD;AAYA,UAAIE,KAAJ,EAAW,OAAOA,KAAP;;AAEX,UAAID,QAAQ,IAAIA,QAAQ,CAAC,CAAD,CAApB,IAA2BA,QAAQ,CAAC,CAAD,CAAR,CAAY,MAAZ,CAA/B,EAAoD;AAClD,YAAIA,QAAQ,CAAC,CAAD,CAAR,CAAY,MAAZ,EAAoBO,QAApB,CAA6B,aAA7B,CAAJ,EAAiD;AAC/C,8BACE,QAAC,gBAAD;AAAA,mCACE;AACE,cAAA,KAAK,EAAC,KADR;AAEE,cAAA,MAAM,EAAC,KAFT;AAGE,cAAA,GAAG,YAAKP,QAAQ,CAAC,CAAD,CAAR,CAAY,MAAZ,CAAL,CAHL;AAIE,cAAA,KAAK,EAAC,sBAJR;AAKE,cAAA,KAAK,EAAC,0FALR;AAME,cAAA,eAAe,EAAC;AANlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,mBADF;AAYD;AACF;AACF;AACF;AAnCqC,CAAxC;;AA0CA,IAAMQ,QAA0B,GAAG,SAA7BA,QAA6B,QAAc;AAAA,MAAXC,IAAW,SAAXA,IAAW;AAC/C,MAAMC,EAAE,GAAGjB,KAAK,WAAIgB,IAAJ,GAAYZ,OAAZ,CAAhB;AAEA,sBAAO,QAAC,SAAD;AAAA,cAAYa;AAAZ;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CAJD;;KAAMF,Q;AAMN,eAAeA,QAAf;AAEA,IAAMG,SAAS,GAAGf,UAAU,CAAC;AAC3BgB,EAAAA,IAAI,EAAE;AACJC,IAAAA,UAAU,EAAE,GADR;AAEJC,IAAAA,QAAQ,EAAE,EAFN;AAGJC,IAAAA,KAAK,EAAE,SAHH;AAIJC,IAAAA,WAAW,EAAE;AAJT;AADqB,CAAD,CAAV,CAOfrB,GAPe,CAAlB;AASA,IAAMsB,gBAAgB,GAAGrB,UAAU,CAAC;AAClCgB,EAAAA,IAAI,EAAE;AACJM,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,UAAU,EAAE,QAFR;AAGJC,IAAAA,cAAc,EAAE,QAHZ;AAIJC,IAAAA,KAAK,EAAE,MAJH;AAKJC,IAAAA,MAAM,EAAE;AALJ;AAD4B,CAAD,CAAV,CAQtB3B,GARsB,CAAzB","sourcesContent":["import React from \"react\";\n\nimport parse, { HTMLReactParserOptions } from \"html-react-parser\";\nimport PostBodyImage from \"./PostBodyImage/PostBodyImage\";\nimport { Box, withStyles } from \"@material-ui/core\";\n\nconst options: HTMLReactParserOptions = {\n  replace: ({ attribs, children }: any) => {\n    let image: any;\n    if (children) {\n      children.forEach((child) => {\n        if (child.name == \"img\") {\n          image = (\n            <PostBodyImage\n              src={child.attribs.src}\n              caption={child.attribs?.alt}\n              isWide={attribs[\"data-layout\"]}\n            />\n          );\n        }\n      });\n\n      if (image) return image;\n\n      if (children && children[0] && children[0][\"data\"]) {\n        if (children[0][\"data\"].includes(\"youtube.com\")) {\n          return (\n            <IFramceContainer>\n              <iframe\n                width=\"60%\"\n                height=\"300\"\n                src={`${children[0][\"data\"]}`}\n                title=\"YouTube video player\"\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                allowfullscreen=\"true\"\n              />\n            </IFramceContainer>\n          );\n        }\n      }\n    }\n  },\n};\n\ninterface IProps {\n  body: string;\n}\n\nconst PostBody: React.FC<IProps> = ({ body }) => {\n  const el = parse(`${body}`, options);\n\n  return <Container>{el}</Container>;\n};\n\nexport default PostBody;\n\nconst Container = withStyles({\n  root: {\n    lineHeight: 1.6,\n    fontSize: 13,\n    color: \"#686868\",\n    marginBlock: 5,\n  },\n})(Box);\n\nconst IFramceContainer = withStyles({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: \"100%\",\n    margin: \"1rem 0rem\",\n  },\n})(Box);\n"]},"metadata":{},"sourceType":"module"}