{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Box, withStyles } from \"@material-ui/core\";\nimport { cloneElement, useContext, useEffect, useState } from \"react\";\nimport { AnswersContext } from \"../Question\";\n\nvar OptionContainer = function OptionContainer(props) {\n  _s();\n\n  var _useContext = useContext(AnswersContext),\n      answers = _useContext.answers,\n      setAnswers = _useContext.setAnswers,\n      getIsChecked = _useContext.getIsChecked;\n\n  var _useState = useState(getIsChecked(props.option.id)),\n      isChecked = _useState[0],\n      setIsChecked = _useState[1];\n\n  useEffect(function () {\n    console.log(\"\".concat(props.option.title, \":\").concat(props.option.id, \" is \").concat(getIsChecked(props.option.id) ? \"checked\" : \"unchecked\"));\n    setIsChecked(getIsChecked(props.option.id));\n  }, [answers]);\n  return (\n    /*#__PURE__*/\n    // <Container onClick={() => setAnswers(props.option.id)}>\n    _jsxDEV(_Fragment, {\n      children: /*#__PURE__*/cloneElement(props.children, _objectSpread(_objectSpread({}, props), {}, {\n        isChecked: isChecked\n      }))\n    }, void 0, false)\n  );\n};\n\n_s(OptionContainer, \"n5UR+5e2HET8tzmx4uM/XCRcUPw=\");\n\n_c = OptionContainer;\nexport default OptionContainer;\nvar Container = withStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexWrap: \"wrap\",\n    padding: \"2rem 0rem 0rem 0rem\",\n    justifyContent: \"space-between\"\n  }\n})(Box);\n\nvar _c;\n\n$RefreshReg$(_c, \"OptionContainer\");","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/Question/OptionContainer/OptionContainer.tsx"],"names":["Box","withStyles","cloneElement","useContext","useEffect","useState","AnswersContext","OptionContainer","props","answers","setAnswers","getIsChecked","option","id","isChecked","setIsChecked","console","log","title","children","Container","root","display","flexDirection","flexWrap","padding","justifyContent"],"mappings":";;;;;;;;;;AAAA,SAASA,GAAT,EAAcC,UAAd,QAAgC,mBAAhC;AACA,SAASC,YAAT,EAAiCC,UAAjC,EAA6CC,SAA7C,EAAwDC,QAAxD,QAAwE,OAAxE;AACA,SAASC,cAAT,QAA+B,aAA/B;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAAA;;AAAA,oBACaL,UAAU,CAACG,cAAD,CADvB;AAAA,MACzBG,OADyB,eACzBA,OADyB;AAAA,MAChBC,UADgB,eAChBA,UADgB;AAAA,MACJC,YADI,eACJA,YADI;;AAAA,kBAGCN,QAAQ,CACxCM,YAAY,CAACH,KAAK,CAACI,MAAN,CAAaC,EAAd,CAD4B,CAHT;AAAA,MAG1BC,SAH0B;AAAA,MAGfC,YAHe;;AAOjCX,EAAAA,SAAS,CAAC,YAAM;AACdY,IAAAA,OAAO,CAACC,GAAR,WACKT,KAAK,CAACI,MAAN,CAAaM,KADlB,cAC2BV,KAAK,CAACI,MAAN,CAAaC,EADxC,iBAEIF,YAAY,CAACH,KAAK,CAACI,MAAN,CAAaC,EAAd,CAAZ,GAAgC,SAAhC,GAA4C,WAFhD;AAKAE,IAAAA,YAAY,CAACJ,YAAY,CAACH,KAAK,CAACI,MAAN,CAAaC,EAAd,CAAb,CAAZ;AACD,GAPQ,EAON,CAACJ,OAAD,CAPM,CAAT;AASA;AAAA;AACE;AACA;AAAA,6BACGP,YAAY,CAACM,KAAK,CAACW,QAAP,kCACRX,KADQ;AAEXM,QAAAA,SAAS,EAATA;AAFW;AADf;AAFF;AASD,CAzBD;;GAAMP,e;;KAAAA,e;AA2BN,eAAeA,eAAf;AAEA,IAAMa,SAAS,GAAGnB,UAAU,CAAC;AAC3BoB,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,aAAa,EAAE,QAFX;AAGJC,IAAAA,QAAQ,EAAE,MAHN;AAIJC,IAAAA,OAAO,EAAE,qBAJL;AAKJC,IAAAA,cAAc,EAAE;AALZ;AADqB,CAAD,CAAV,CAQf1B,GARe,CAAlB","sourcesContent":["import { Box, withStyles } from \"@material-ui/core\";\nimport { cloneElement, Fragment, useContext, useEffect, useState } from \"react\";\nimport { AnswersContext } from \"../Question\";\n\nconst OptionContainer = (props) => {\n  const { answers, setAnswers, getIsChecked } = useContext(AnswersContext);\n\n  const [isChecked, setIsChecked] = useState<boolean>(\n    getIsChecked(props.option.id)\n  );\n\n  useEffect(() => {\n    console.log(\n      `${props.option.title}:${props.option.id} is ${\n        getIsChecked(props.option.id) ? \"checked\" : \"unchecked\"\n      }`\n    );\n    setIsChecked(getIsChecked(props.option.id));\n  }, [answers]);\n\n  return (\n    // <Container onClick={() => setAnswers(props.option.id)}>\n    <>\n      {cloneElement(props.children, {\n        ...props,\n        isChecked,\n      })}\n    </>\n  );\n};\n\nexport default OptionContainer;\n\nconst Container = withStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexWrap: \"wrap\",\n    padding: \"2rem 0rem 0rem 0rem\",\n    justifyContent: \"space-between\",\n  },\n})(Box);\n"]},"metadata":{},"sourceType":"module"}