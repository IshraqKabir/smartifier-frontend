{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ishraqkabir/workspace/smartifier-frontend/Components/QuizTest/Questions/SingleQuestion/Question/Options/Option/Option.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Radio, withStyles } from \"@material-ui/core\";\nimport { useContext } from \"react\";\nimport { QuizTestStateContext } from \"../../../../Questions\";\nimport { QuestionContext } from \"../../../SingleQuestion\";\nimport useOption from \"./useOption\";\nexport default function Option(_ref) {\n  _s();\n\n  var option = _ref.option;\n\n  var _useContext = useContext(QuizTestStateContext),\n      answers = _useContext.answers,\n      setAnswers = _useContext.setAnswers;\n\n  var _useContext2 = useContext(QuestionContext),\n      question = _useContext2.question;\n\n  var _useOption = useOption(option === null || option === void 0 ? void 0 : option.id, question, answers, setAnswers),\n      isChecked = _useOption.isChecked,\n      handleClick = _useOption.handleClick;\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    onClick: handleClick,\n    children: [(question === null || question === void 0 ? void 0 : question.answer_type) === \"multiple_choice\" && /*#__PURE__*/_jsxDEV(Radio, {\n      checked: isChecked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), option === null || option === void 0 ? void 0 : option.title]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Option, \"mY+j8UEC5qCuzTh2fYl2JJ/6E6o=\", false, function () {\n  return [useOption];\n});\n\n_c = Option;\nvar Container = withStyles({\n  root: {\n    borderTop: \"1px solid gray\",\n    padding: \"0.1rem 0.5rem\",\n    display: \"flex\",\n    alignItems: \"center\",\n    cursor: \"pointer\"\n  }\n})(Box);\n\nvar _c;\n\n$RefreshReg$(_c, \"Option\");","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/QuizTest/Questions/SingleQuestion/Question/Options/Option/Option.tsx"],"names":["Box","Radio","withStyles","useContext","QuizTestStateContext","QuestionContext","useOption","Option","option","answers","setAnswers","question","id","isChecked","handleClick","answer_type","title","Container","root","borderTop","padding","display","alignItems","cursor"],"mappings":";;;;;AAAA,SAASA,GAAT,EAAcC,KAAd,EAAqBC,UAArB,QAAuC,mBAAvC;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,oBAAT,QAAqC,uBAArC;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAMA,eAAe,SAASC,MAAT,OAAoC;AAAA;;AAAA,MAAlBC,MAAkB,QAAlBA,MAAkB;;AAAA,oBACjBL,UAAU,CAACC,oBAAD,CADO;AAAA,MACzCK,OADyC,eACzCA,OADyC;AAAA,MAChCC,UADgC,eAChCA,UADgC;;AAAA,qBAE5BP,UAAU,CAACE,eAAD,CAFkB;AAAA,MAEzCM,QAFyC,gBAEzCA,QAFyC;;AAAA,mBAIdL,SAAS,CAC1CE,MAD0C,aAC1CA,MAD0C,uBAC1CA,MAAM,CAAEI,EADkC,EAE1CD,QAF0C,EAG1CF,OAH0C,EAI1CC,UAJ0C,CAJK;AAAA,MAIzCG,SAJyC,cAIzCA,SAJyC;AAAA,MAI9BC,WAJ8B,cAI9BA,WAJ8B;;AAWjD,sBACE,QAAC,SAAD;AAAW,IAAA,OAAO,EAAEA,WAApB;AAAA,eACG,CAAAH,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEI,WAAV,MAA0B,iBAA1B,iBACC,QAAC,KAAD;AAAO,MAAA,OAAO,EAAEF;AAAhB;AAAA;AAAA;AAAA;AAAA,YAFJ,EAIGL,MAJH,aAIGA,MAJH,uBAIGA,MAAM,CAAEQ,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAnBuBT,M;UAIaD,S;;;KAJbC,M;AAqBxB,IAAMU,SAAS,GAAGf,UAAU,CAAC;AAC3BgB,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAE,gBADP;AAEJC,IAAAA,OAAO,EAAE,eAFL;AAGJC,IAAAA,OAAO,EAAE,MAHL;AAIJC,IAAAA,UAAU,EAAE,QAJR;AAKJC,IAAAA,MAAM,EAAE;AALJ;AADqB,CAAD,CAAV,CAQfvB,GARe,CAAlB","sourcesContent":["import { Box, Radio, withStyles } from \"@material-ui/core\";\nimport { useContext } from \"react\";\nimport { QuizTestStateContext } from \"../../../../Questions\";\nimport { QuestionContext } from \"../../../SingleQuestion\";\nimport useOption from \"./useOption\";\n\ninterface IProps {\n  option: any;\n}\n\nexport default function Option({ option }: IProps) {\n  const { answers, setAnswers } = useContext(QuizTestStateContext);\n  const { question } = useContext(QuestionContext);\n\n  const { isChecked, handleClick } = useOption(\n    option?.id,\n    question,\n    answers,\n    setAnswers\n  );\n\n  return (\n    <Container onClick={handleClick}>\n      {question?.answer_type === \"multiple_choice\" && (\n        <Radio checked={isChecked} />\n      )}\n      {option?.title}\n    </Container>\n  );\n}\n\nconst Container = withStyles({\n  root: {\n    borderTop: \"1px solid gray\",\n    padding: \"0.1rem 0.5rem\",\n    display: \"flex\",\n    alignItems: \"center\",\n    cursor: \"pointer\",\n  },\n})(Box);\n"]},"metadata":{},"sourceType":"module"}