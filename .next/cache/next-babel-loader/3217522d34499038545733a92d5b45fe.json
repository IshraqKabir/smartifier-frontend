{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Box, CircularProgress, Typography, withStyles } from \"@material-ui/core\";\nimport Questions from \"./Questions/Questions\";\nimport useQuizTest from \"./useQuizTest\";\nexport default function QuizTest(_ref) {\n  var quizId = _ref.quizId;\n\n  var _useQuizTest = useQuizTest(quizId),\n      quiz = _useQuizTest.quiz,\n      test = _useQuizTest.test,\n      testStatus = _useQuizTest.testStatus,\n      isLoading = _useQuizTest.isLoading;\n\n  return /*#__PURE__*/_jsxs(Container, {\n    children: [isLoading && /*#__PURE__*/_jsx(CircularProgress, {}), testStatus === \"highest_attempt_count_reached\" && /*#__PURE__*/_jsx(Typography, {\n      variant: \"h6\",\n      color: \"error\",\n      children: \"You have reached the highest attempt count.\"\n    }), !isLoading && testStatus !== \"highest_attempt_count_reached\" && quiz && /*#__PURE__*/_jsx(Questions, {\n      questions: quiz === null || quiz === void 0 ? void 0 : quiz.questions,\n      quizTitle: quiz === null || quiz === void 0 ? void 0 : quiz.title,\n      isAssessment: (quiz === null || quiz === void 0 ? void 0 : quiz.assessment) !== null ? quiz.assessment : false,\n      quizId: quiz === null || quiz === void 0 ? void 0 : quiz.id,\n      duration: quiz === null || quiz === void 0 ? void 0 : quiz.duration,\n      test: test\n    })]\n  });\n}\nvar Container = withStyles({\n  root: {\n    display: \"flex\",\n    width: \"100vw\",\n    minHeight: \"calc(100vh - 100px)\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: \"5rem 0rem 0rem 0rem\",\n    backgroundColor: \"#f0f2f5\"\n  }\n})(Box);","map":null,"metadata":{},"sourceType":"module"}