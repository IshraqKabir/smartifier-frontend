{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React, { createContext, useEffect, useState } from \"react\";\nimport { Divider, makeStyles, Typography, withStyles } from \"@material-ui/core\";\nimport Tags from \"./Tags/Tags\";\nimport PostBody from \"./PostBody/PostBody\";\nimport PostFeaturedImage from \"./PostBody/PostFeaturedImage/PostFeaturedImage\";\nimport Link from \"next/link\";\nimport LCSStatus from \"./LCSStatus/LCSStatus\";\nimport CommentBox from \"./CommentBox/CommentBox\";\nimport CommentsSection from \"./CommentsSection/CommentsSection\";\nimport axios from \"axios\";\nimport { backend_url } from \"../../../url\";\nimport useLocalState from \"../../../custom-hooks/useLocalState\";\nexport const CommentsCountContext = /*#__PURE__*/createContext(null);\nexport const CommentsContext = /*#__PURE__*/createContext(null);\n\nconst Post = ({\n  post\n}) => {\n  var _post$topic$, _post$topic$2, _post$user;\n\n  const {\n    0: commentsCount,\n    1: setCommentsCount\n  } = useState(post === null || post === void 0 ? void 0 : post.comments_count);\n  const {\n    0: comments,\n    1: setComments\n  } = useState([]);\n  const {\n    0: likedCommentsIdsByUser,\n    1: setLikedCommentsIdsByUser\n  } = useState(\"empty\");\n  const [user] = useLocalState(\"user\", \"\");\n  useEffect(() => {\n    fetchComments();\n    getLikedCommentsIds();\n  }, []);\n  useEffect(() => {\n    getLikedCommentsIds();\n    if (!user) setLikedCommentsIdsByUser(\"empty\");\n  }, [user]);\n\n  const getLikedCommentsIds = () => {\n    if (user && user.token && likedCommentsIdsByUser == \"empty\") {\n      axios.get(`${backend_url}/api/posts/${post.id}/liked-comments-ids`, {\n        headers: {\n          Accept: \"application/json\",\n          Authorization: `Bearer ${user.token}`\n        }\n      }).then(response => {\n        setLikedCommentsIdsByUser(response.data);\n      });\n    }\n  };\n\n  const fetchComments = () => {\n    axios.get(`${backend_url}/api/posts/${post.id}/comments`, {\n      headers: {\n        Accept: \"application/json\"\n      }\n    }).then(response => {\n      setComments(response.data);\n    });\n  };\n\n  const classes = useStyles();\n  const postDate = new Date(post.created_at);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: classes.container,\n    children: [(post === null || post === void 0 ? void 0 : post.topic) && /*#__PURE__*/_jsx(Link, {\n      href: `/blog/topics/${post === null || post === void 0 ? void 0 : (_post$topic$ = post.topic[0]) === null || _post$topic$ === void 0 ? void 0 : _post$topic$.slug}/posts`,\n      children: /*#__PURE__*/_jsx(\"a\", {\n        style: {\n          textDecoration: \"none\"\n        },\n        children: /*#__PURE__*/_jsx(\"div\", {\n          className: classes.topic,\n          children: /*#__PURE__*/_jsx(TopicName, {\n            children: post === null || post === void 0 ? void 0 : (_post$topic$2 = post.topic[0]) === null || _post$topic$2 === void 0 ? void 0 : _post$topic$2.name\n          })\n        })\n      })\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: classes.postTitle,\n        children: [/*#__PURE__*/_jsx(PostTitle, {\n          children: post === null || post === void 0 ? void 0 : post.title\n        }), /*#__PURE__*/_jsxs(PostAuthor, {\n          variant: \"subtitle2\",\n          children: [\"by \", post === null || post === void 0 ? void 0 : (_post$user = post.user) === null || _post$user === void 0 ? void 0 : _post$user.name]\n        })]\n      }), /*#__PURE__*/_jsx(\"div\", {\n        children: /*#__PURE__*/_jsxs(PostDate, {\n          variant: \"caption\",\n          children: [`${monthNames[postDate.getMonth()]} ${postDate.getDate()} ${postDate.getFullYear()}`, \" \", \". \", post === null || post === void 0 ? void 0 : post.read_time]\n        })\n      }), (post === null || post === void 0 ? void 0 : post.featured_image) ? /*#__PURE__*/_jsx(PostFeaturedImage, {\n        src: post === null || post === void 0 ? void 0 : post.featured_image,\n        caption: post === null || post === void 0 ? void 0 : post.featured_image_caption\n      }) : null, /*#__PURE__*/_jsx(PostBody, {\n        body: post === null || post === void 0 ? void 0 : post.body\n      })]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: classes.bottomContainer,\n      children: [post.tags ? /*#__PURE__*/_jsx(Tags, {\n        tags: post.tags\n      }) : null, /*#__PURE__*/_jsx(ReadTime, {\n        variant: \"subtitle2\",\n        children: post === null || post === void 0 ? void 0 : post.read_time\n      })]\n    }), /*#__PURE__*/_jsxs(CommentsCountContext.Provider, {\n      value: {\n        commentsCount: commentsCount,\n        setCommentsCount: setCommentsCount\n      },\n      children: [/*#__PURE__*/_jsx(LCSStatus, {\n        post: post\n      }), /*#__PURE__*/_jsxs(CommentsContext.Provider, {\n        value: {\n          comments: comments,\n          setComments: setComments,\n          postId: post.id,\n          likedCommentsIdsByUser: likedCommentsIdsByUser,\n          setLikedCommentsIdsByUser: setLikedCommentsIdsByUser\n        },\n        children: [/*#__PURE__*/_jsx(CommentBox, {\n          postId: post.id\n        }), /*#__PURE__*/_jsx(CommentsSection, {})]\n      })]\n    })]\n  });\n};\n\nexport default Post;\nconst useStyles = makeStyles({\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"100%\"\n  },\n  topic: {\n    color: \"white\",\n    cursor: \"pointer\",\n    width: 150,\n    borderRadius: 10,\n    textAlign: \"center\",\n    textTransform: \"capitalize\",\n    paddingTop: 3,\n    paddingBottom: 3,\n    backgroundColor: () => {\n      return colors[0];\n    },\n    whiteSpace: \"nowrap\",\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    paddingLeft: 3,\n    paddingRight: 3,\n    marginBottom: 10,\n    \"&:hover\": {\n      textDecoration: \"underline\"\n    }\n  },\n  postTitle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    width: \"100%\"\n  },\n  bottomContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    width: \"100%\",\n    marginTop: 20\n  }\n});\nconst TopicName = withStyles({\n  root: {\n    fontSize: 13\n  }\n})(Typography);\nconst PostTitle = withStyles({\n  root: {\n    color: \"#3798A7\",\n    fontSize: 22,\n    whiteSpace: \"nowrap\",\n    textTransform: \"capitalize\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      textDecoration: \"underline\"\n    }\n  }\n})(Typography);\nconst PostAuthor = withStyles({\n  root: {\n    whiteSpace: \"nowrap\",\n    color: \"#C5C5C5\",\n    marginLeft: \"auto\",\n    marginTop: 10\n  }\n})(Typography);\nconst ReadTime = withStyles({\n  root: {\n    whiteSpace: \"nowrap\",\n    color: \"#C5C5C5\",\n    marginLeft: \"auto\",\n    marginTop: 10\n  }\n})(Typography);\nconst PostDivider = withStyles({\n  root: {\n    marginTop: 10,\n    marginBottom: 20\n  }\n})(Divider);\nconst PostDate = withStyles({\n  root: {\n    color: \"#C5C5C5\",\n    fontWeight: \"bold\"\n  }\n})(Typography);\nconst colors = [\"#97A5B8\", \"#9C95FD\", \"#F493FF\", \"#28E36E\", \"#FFE533\"];\nconst monthNames = [\"Jan\", \"Feb\", \"March\", \"April\", \"May\", \"June\", \"July\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"];","map":null,"metadata":{},"sourceType":"module"}