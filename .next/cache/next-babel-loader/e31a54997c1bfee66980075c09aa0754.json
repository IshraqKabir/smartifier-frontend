{"ast":null,"code":"import { useState, useEffect } from \"react\";\nimport Cookies from \"js-cookie\";\n\nvar setCookie = function setCookie(key, value) {\n  Cookies.set(key ? JSON.stringify(key) : key, value ? JSON.stringify(value) : value);\n};\n\nvar getCookie = function getCookie(key) {\n  var result = Cookies.get(JSON.stringify(key));\n  return result ? JSON.parse(result) : result;\n};\n\nvar isLocalStorageWorking = function isLocalStorageWorking() {\n  var _s = $RefreshSig$();\n\n  return _s(function useLocalState(key, defaultValue) {\n    _s();\n\n    var _useState = useState(function () {\n      var result = null;\n\n      if (true) {\n        var storedValue = localStorage.getItem(key) ? JSON.parse(localStorage.getItem(key)) : localStorage.getItem(key);\n\n        if (!storedValue) {\n          result = defaultValue;\n        }\n\n        result = storedValue === null ? defaultValue : storedValue;\n      } else {\n        result = defaultValue;\n      } // console.log(\"check: \");\n      // console.log(\"local storage : \");\n      // console.log(result);\n      // console.log(\"cookie: \");\n      // console.log(getCookie(key));\n\n\n      if (!result) {\n        console.log(\"none\");\n        console.log(result);\n      } else {\n        console.log(\"yes\");\n        console.log(result);\n      }\n\n      return result;\n    }),\n        value = _useState[0],\n        setValue = _useState[1];\n\n    useEffect(function () {\n      var listener = function listener(e) {\n        if (e.storageArea === localStorage && e.key === key) {\n          setValue(JSON.parse(e.newValue));\n        }\n      };\n\n      window.addEventListener(\"storage\", listener);\n      return function () {\n        window.removeEventListener(\"storage\", listener);\n      };\n    }, [key]);\n\n    var setValueInLocalStorage = function setValueInLocalStorage(newValue) {\n      setValue(function (currentValue) {\n        if (typeof newValue === \"function\") {\n          setCookie(key, newValue(currentValue));\n        } else {\n          setCookie(key, newValue);\n        }\n\n        var result = typeof newValue === \"function\" ? newValue(currentValue) : newValue;\n        localStorage.setItem(key, JSON.stringify(result));\n        return result;\n      });\n    };\n\n    useEffect(function () {\n      var storedValue = JSON.parse(localStorage.getItem(key));\n\n      if (storedValue) {\n        setValueInLocalStorage(storedValue);\n      } else {\n        setValueInLocalStorage(value);\n      }\n    }, []);\n    return [value, setValueInLocalStorage];\n  }, \"KLwtQG77F3Urjm52D4cLwxo+MZA=\");\n};\n\nexport default useLocalState;","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/custom-hooks/useLocalState.ts"],"names":["useState","useEffect","Cookies","setCookie","key","value","set","JSON","stringify","getCookie","result","get","parse","isLocalStorageWorking","useLocalState","defaultValue","storedValue","localStorage","getItem","console","log","setValue","listener","e","storageArea","newValue","window","addEventListener","removeEventListener","setValueInLocalStorage","currentValue","setItem"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,GAAD,EAAMC,KAAN,EAAgB;AAChCH,EAAAA,OAAO,CAACI,GAAR,CACEF,GAAG,GAAGG,IAAI,CAACC,SAAL,CAAeJ,GAAf,CAAH,GAAyBA,GAD9B,EAEEC,KAAK,GAAGE,IAAI,CAACC,SAAL,CAAeH,KAAf,CAAH,GAA2BA,KAFlC;AAID,CALD;;AAOA,IAAMI,SAAS,GAAG,SAAZA,SAAY,CAACL,GAAD,EAAS;AACzB,MAAMM,MAAM,GAAGR,OAAO,CAACS,GAAR,CAAYJ,IAAI,CAACC,SAAL,CAAeJ,GAAf,CAAZ,CAAf;AACA,SAAOM,MAAM,GAAGH,IAAI,CAACK,KAAL,CAAWF,MAAX,CAAH,GAAwBA,MAArC;AACD,CAHD;;AAKA,IAAMG,qBAAqB,GAAG,SAAxBA,qBAAwB;AAAA;;AAAA,YAG9B,SAASC,aAAT,CAA0BV,GAA1B,EAAuCW,YAAvC,EAAwD;AAAA;;AAAA,oBAC5Bf,QAAQ,CAAC,YAAM;AACvC,UAAIU,MAAM,GAAG,IAAb;;AACA,gBAAqB;AACnB,YAAMM,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqBd,GAArB,IAChBG,IAAI,CAACK,KAAL,CAAWK,YAAY,CAACC,OAAb,CAAqBd,GAArB,CAAX,CADgB,GAEhBa,YAAY,CAACC,OAAb,CAAqBd,GAArB,CAFJ;;AAIA,YAAI,CAACY,WAAL,EAAkB;AAChBN,UAAAA,MAAM,GAAGK,YAAT;AACD;;AACDL,QAAAA,MAAM,GAAGM,WAAW,KAAK,IAAhB,GAAuBD,YAAvB,GAAsCC,WAA/C;AACD,OATD,MASO;AACLN,QAAAA,MAAM,GAAGK,YAAT;AACD,OAbsC,CAevC;AACA;AACA;AACA;AACA;;;AAEA,UAAI,CAACL,MAAL,EAAa;AACXS,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYV,MAAZ;AACD,OAHD,MAGO;AACLS,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYV,MAAZ;AACD;;AAED,aAAOA,MAAP;AACD,KA9BiC,CADoB;AAAA,QAC/CL,KAD+C;AAAA,QACxCgB,QADwC;;AAiCtDpB,IAAAA,SAAS,CAAC,YAAM;AACd,UAAMqB,QAAQ,GAAG,SAAXA,QAAW,CAACC,CAAD,EAAO;AACtB,YAAIA,CAAC,CAACC,WAAF,KAAkBP,YAAlB,IAAkCM,CAAC,CAACnB,GAAF,KAAUA,GAAhD,EAAqD;AACnDiB,UAAAA,QAAQ,CAACd,IAAI,CAACK,KAAL,CAAWW,CAAC,CAACE,QAAb,CAAD,CAAR;AACD;AACF,OAJD;;AAKAC,MAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmCL,QAAnC;AAEA,aAAO,YAAM;AACXI,QAAAA,MAAM,CAACE,mBAAP,CAA2B,SAA3B,EAAsCN,QAAtC;AACD,OAFD;AAGD,KAXQ,EAWN,CAAClB,GAAD,CAXM,CAAT;;AAaA,QAAMyB,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACJ,QAAD,EAAc;AAC3CJ,MAAAA,QAAQ,CAAC,UAACS,YAAD,EAAkB;AACzB,YAAI,OAAOL,QAAP,KAAoB,UAAxB,EAAoC;AAClCtB,UAAAA,SAAS,CAACC,GAAD,EAAMqB,QAAQ,CAACK,YAAD,CAAd,CAAT;AACD,SAFD,MAEO;AACL3B,UAAAA,SAAS,CAACC,GAAD,EAAMqB,QAAN,CAAT;AACD;;AACD,YAAMf,MAAM,GACV,OAAOe,QAAP,KAAoB,UAApB,GAAiCA,QAAQ,CAACK,YAAD,CAAzC,GAA0DL,QAD5D;AAEAR,QAAAA,YAAY,CAACc,OAAb,CAAqB3B,GAArB,EAA0BG,IAAI,CAACC,SAAL,CAAeE,MAAf,CAA1B;AACA,eAAOA,MAAP;AACD,OAVO,CAAR;AAWD,KAZD;;AAcAT,IAAAA,SAAS,CAAC,YAAM;AACd,UAAMe,WAAW,GAAGT,IAAI,CAACK,KAAL,CAAWK,YAAY,CAACC,OAAb,CAAqBd,GAArB,CAAX,CAApB;;AACA,UAAIY,WAAJ,EAAiB;AACfa,QAAAA,sBAAsB,CAACb,WAAD,CAAtB;AACD,OAFD,MAEO;AACLa,QAAAA,sBAAsB,CAACxB,KAAD,CAAtB;AACD;AACF,KAPQ,EAON,EAPM,CAAT;AASA,WAAO,CAACA,KAAD,EAAQwB,sBAAR,CAAP;AACD,GAzE6B;AAAA,CAA9B;;AA2EA,eAAef,aAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport Cookies from \"js-cookie\";\n\nconst setCookie = (key, value) => {\n  Cookies.set(\n    key ? JSON.stringify(key) : key,\n    value ? JSON.stringify(value) : value\n  );\n};\n\nconst getCookie = (key) => {\n  const result = Cookies.get(JSON.stringify(key));\n  return result ? JSON.parse(result) : result;\n};\n\nconst isLocalStorageWorking = () =>\n\n\nfunction useLocalState<T>(key: string, defaultValue: T) {\n  const [value, setValue] = useState(() => {\n    let result = null;\n    if (process.browser) {\n      const storedValue = localStorage.getItem(key)\n        ? JSON.parse(localStorage.getItem(key))\n        : localStorage.getItem(key);\n\n      if (!storedValue) {\n        result = defaultValue;\n      }\n      result = storedValue === null ? defaultValue : storedValue;\n    } else {\n      result = defaultValue;\n    }\n\n    // console.log(\"check: \");\n    // console.log(\"local storage : \");\n    // console.log(result);\n    // console.log(\"cookie: \");\n    // console.log(getCookie(key));\n\n    if (!result) {\n      console.log(\"none\");\n      console.log(result);\n    } else {\n      console.log(\"yes\");\n      console.log(result);\n    }\n\n    return result;\n  });\n\n  useEffect(() => {\n    const listener = (e) => {\n      if (e.storageArea === localStorage && e.key === key) {\n        setValue(JSON.parse(e.newValue));\n      }\n    };\n    window.addEventListener(\"storage\", listener);\n\n    return () => {\n      window.removeEventListener(\"storage\", listener);\n    };\n  }, [key]);\n\n  const setValueInLocalStorage = (newValue) => {\n    setValue((currentValue) => {\n      if (typeof newValue === \"function\") {\n        setCookie(key, newValue(currentValue));\n      } else {\n        setCookie(key, newValue);\n      }\n      const result =\n        typeof newValue === \"function\" ? newValue(currentValue) : newValue;\n      localStorage.setItem(key, JSON.stringify(result));\n      return result;\n    });\n  };\n\n  useEffect(() => {\n    const storedValue = JSON.parse(localStorage.getItem(key));\n    if (storedValue) {\n      setValueInLocalStorage(storedValue);\n    } else {\n      setValueInLocalStorage(value);\n    }\n  }, []);\n\n  return [value, setValueInLocalStorage];\n}\n\nexport default useLocalState;\n"]},"metadata":{},"sourceType":"module"}