{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ishraqkabir/workspace/smartifier-frontend/Components/Question/Style3/Option/Option.tsx\";\nimport React from \"react\";\nimport { Avatar, Box, Typography, withStyles } from \"@material-ui/core\";\nimport { local_backend_url } from \"../../../../url\";\n\nconst Option = ({\n  option,\n  position,\n  isChecked\n}) => {\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [option.image && /*#__PURE__*/_jsxDEV(ImageContainer, {\n      children: /*#__PURE__*/_jsxDEV(Avatar, {\n        alt: `${option.title}`,\n        src: `${local_backend_url}/storage/${option.image.image_link}`,\n        style: {\n          width: \"100%\",\n          height: \"100%\"\n        },\n        variant: \"square\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), option.title && /*#__PURE__*/_jsxDEV(TextContainer, {\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: `${String.fromCharCode(position + 64)}. ${option.title}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), isChecked && \"checked\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Option;\nconst Container = withStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    maxWidth: \"25vw\",\n    minWidth: 200,\n    height: \"100%\",\n    cursor: \"pointer\",\n    background: \"transparent linear-gradient(180deg, #995FD4 0%, #1F29356E 100%) 0% 0% no-repeat padding-box\",\n    borderRadius: 10,\n    overflow: \"hidden\",\n    marginTop: \"1rem\",\n    [\"@media (max-width: 600px)\"]: {\n      width: \"100vw\"\n    }\n  }\n})(Box);\nconst ImageContainer = withStyles({\n  root: {\n    width: \"100%\"\n  }\n})(Box);\nconst TextContainer = withStyles({\n  root: {\n    textAlign: \"center\"\n  }\n})(Box);","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/Question/Style3/Option/Option.tsx"],"names":["React","Avatar","Box","Typography","withStyles","local_backend_url","Option","option","position","isChecked","image","title","image_link","width","height","String","fromCharCode","Container","root","display","flexDirection","justifyContent","maxWidth","minWidth","cursor","background","borderRadius","overflow","marginTop","ImageContainer","TextContainer","textAlign"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,MAAT,EAAiBC,GAAjB,EAAsBC,UAAtB,EAAkCC,UAAlC,QAAoD,mBAApD;AAGA,SAASC,iBAAT,QAAkC,iBAAlC;;AAQA,MAAMC,MAAwB,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,QAAV;AAAoBC,EAAAA;AAApB,CAAD,KAAqC;AACpE,sBACE,QAAC,SAAD;AAAA,eACGF,MAAM,CAACG,KAAP,iBACC,QAAC,cAAD;AAAA,6BACE,QAAC,MAAD;AACE,QAAA,GAAG,EAAG,GAAEH,MAAM,CAACI,KAAM,EADvB;AAEE,QAAA,GAAG,EAAG,GAAEN,iBAAkB,YAAWE,MAAM,CAACG,KAAP,CAAaE,UAAW,EAF/D;AAGE,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE,MAAT;AAAiBC,UAAAA,MAAM,EAAE;AAAzB,SAHT;AAIE,QAAA,OAAO,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFJ,EAWGP,MAAM,CAACI,KAAP,iBACC,QAAC,aAAD;AAAA,6BACE,QAAC,UAAD;AAAA,kBAAc,GAAEI,MAAM,CAACC,YAAP,CAAoBR,QAAQ,GAAG,EAA/B,CAAmC,KACjDD,MAAM,CAACI,KACR;AAFD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAZJ,EAkBGF,SAAS,IAAI,SAlBhB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CAvBD;;AAyBA,eAAeH,MAAf;AAEA,MAAMW,SAAS,GAAGb,UAAU,CAAC;AAC3Bc,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,aAAa,EAAE,QAFX;AAGJC,IAAAA,cAAc,EAAE,eAHZ;AAIJC,IAAAA,QAAQ,EAAE,MAJN;AAKJC,IAAAA,QAAQ,EAAE,GALN;AAMJT,IAAAA,MAAM,EAAE,MANJ;AAOJU,IAAAA,MAAM,EAAE,SAPJ;AAQJC,IAAAA,UAAU,EACR,6FATE;AAUJC,IAAAA,YAAY,EAAE,EAVV;AAWJC,IAAAA,QAAQ,EAAE,QAXN;AAYJC,IAAAA,SAAS,EAAE,MAZP;AAaJ,KAAC,2BAAD,GAA+B;AAC7Bf,MAAAA,KAAK,EAAE;AADsB;AAb3B;AADqB,CAAD,CAAV,CAkBfX,GAlBe,CAAlB;AAoBA,MAAM2B,cAAc,GAAGzB,UAAU,CAAC;AAChCc,EAAAA,IAAI,EAAE;AACJL,IAAAA,KAAK,EAAE;AADH;AAD0B,CAAD,CAAV,CAIpBX,GAJoB,CAAvB;AAMA,MAAM4B,aAAa,GAAG1B,UAAU,CAAC;AAC/Bc,EAAAA,IAAI,EAAE;AACJa,IAAAA,SAAS,EAAE;AADP;AADyB,CAAD,CAAV,CAInB7B,GAJmB,CAAtB","sourcesContent":["import React from \"react\";\n\nimport { Avatar, Box, Typography, withStyles } from \"@material-ui/core\";\nimport IOption from \"../../../../Models/IOption\";\n\nimport { local_backend_url } from \"../../../../url\";\n\ninterface IProps {\n  option: IOption;\n  position: number;\n  isChecked?: boolean;\n}\n\nconst Option: React.FC<IProps> = ({ option, position, isChecked }) => {\n  return (\n    <Container>\n      {option.image && (\n        <ImageContainer>\n          <Avatar\n            alt={`${option.title}`}\n            src={`${local_backend_url}/storage/${option.image.image_link}`}\n            style={{ width: \"100%\", height: \"100%\" }}\n            variant=\"square\"\n          />\n        </ImageContainer>\n      )}\n      {option.title && (\n        <TextContainer>\n          <Typography>{`${String.fromCharCode(position + 64)}. ${\n            option.title\n          }`}</Typography>\n        </TextContainer>\n      )}\n      {isChecked && \"checked\"}\n    </Container>\n  );\n};\n\nexport default Option;\n\nconst Container = withStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    maxWidth: \"25vw\",\n    minWidth: 200,\n    height: \"100%\",\n    cursor: \"pointer\",\n    background:\n      \"transparent linear-gradient(180deg, #995FD4 0%, #1F29356E 100%) 0% 0% no-repeat padding-box\",\n    borderRadius: 10,\n    overflow: \"hidden\",\n    marginTop: \"1rem\",\n    [\"@media (max-width: 600px)\"]: {\n      width: \"100vw\"\n    },\n  },\n})(Box);\n\nconst ImageContainer = withStyles({\n  root: {\n    width: \"100%\",\n  },\n})(Box);\n\nconst TextContainer = withStyles({\n  root: {\n    textAlign: \"center\",\n  },\n})(Box);\n"]},"metadata":{},"sourceType":"module"}