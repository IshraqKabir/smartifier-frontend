{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ishraqkabir/workspace/smartifier-frontend/Components/Posts/PostsList/Post/Post.tsx\";\nimport { Divider, makeStyles, Typography, withStyles } from \"@material-ui/core\";\nimport React from \"react\";\nconst colors = [\"#97A5B8\", \"#9C95FD\", \"#F493FF\", \"#28E36E\", \"#FFE533\"];\nconst useStyles = makeStyles({\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  topic: {\n    color: \"white\",\n    cursor: \"pointer\",\n    width: 206,\n    borderRadius: 10,\n    textAlign: \"center\",\n    textTransform: \"capitalize\",\n    paddingBlock: 3,\n    backgroundColor: props => {\n      const {\n        position\n      } = props;\n\n      if (position > colors.length) {\n        return colors[position % colors.length];\n      }\n\n      return colors[position];\n    },\n    whiteSpace: \"nowrap\",\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    paddingInline: 3\n  },\n  postTitle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    width: \"100%\"\n  },\n  tagsAndRTContainer: {\n    display: \"flex\"\n  }\n});\n\nconst Post = ({\n  post,\n  position\n}) => {\n  const classes = useStyles({\n    position\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.topic,\n      children: [\" \", /*#__PURE__*/_jsxDEV(Typography, {\n        children: post.topic[0].name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 78\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 46\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.postTitle,\n        children: [\" \", /*#__PURE__*/_jsxDEV(PostTitle, {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 173\n        }, this), \" \", /*#__PURE__*/_jsxDEV(PostAuthor, {\n          variant: \"subtitle2\",\n          children: [\"by \", post.user.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 209\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 137\n      }, this), \" \", /*#__PURE__*/_jsxDEV(PostSummary, {\n        children: `${post.summary.substr(0, 1000)} [...][...]`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 281\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 131\n    }, this), \" \", /*#__PURE__*/_jsxDEV(ReadTime, {\n      variant: \"subtitle2\",\n      children: post.read_time\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 363\n    }, this), \" \", /*#__PURE__*/_jsxDEV(PostDivider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 421\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 10\n  }, this);\n};\n\nexport default Post;\nconst PostTitle = withStyles({\n  root: {\n    color: \"#3798A7\",\n    fontSize: 30,\n    marginBlock: 15,\n    textTransform: \"capitalize\",\n    cursor: \"pointer\"\n  }\n})(Typography);\nconst PostSummary = withStyles({\n  root: {\n    color: \"#686868\",\n    fontSize: 15,\n    textTransform: \"capitalize\",\n    cursor: \"pointer\",\n    paddingRight: \"10%\"\n  }\n})(Typography);\nconst PostAuthor = withStyles({\n  root: {\n    whiteSpace: \"nowrap\",\n    color: \"#C5C5C5\",\n    marginLeft: \"auto\",\n    marginTop: 10\n  }\n})(Typography);\nconst ReadTime = withStyles({\n  root: {\n    whiteSpace: \"nowrap\",\n    color: \"#C5C5C5\",\n    marginLeft: \"auto\",\n    marginTop: 10\n  }\n})(Typography);\nconst PostDivider = withStyles({\n  root: {\n    marginTop: 10\n  }\n})(Divider);","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/Posts/PostsList/Post/Post.tsx"],"names":["Divider","makeStyles","Typography","withStyles","React","colors","useStyles","container","display","flexDirection","topic","color","cursor","width","borderRadius","textAlign","textTransform","paddingBlock","backgroundColor","props","position","length","whiteSpace","overflow","textOverflow","paddingInline","postTitle","alignItems","tagsAndRTContainer","Post","post","classes","name","title","user","summary","substr","read_time","PostTitle","root","fontSize","marginBlock","PostSummary","paddingRight","PostAuthor","marginLeft","marginTop","ReadTime","PostDivider"],"mappings":"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","sourcesContent":["import { Divider, makeStyles, Typography, withStyles } from \"@material-ui/core\";\nimport React from \"react\";\nimport IPost from \"../../../../Models/IPost\";\nimport Tags from \"./Tags/Tags\";\n\ninterface IProps {\n  post: IPost;\n  position: number;\n}\n\nconst colors: string[] = [\n  \"#97A5B8\",\n  \"#9C95FD\",\n  \"#F493FF\",\n  \"#28E36E\",\n  \"#FFE533\",\n];\n\nconst useStyles = makeStyles({\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  topic: {\n    color: \"white\",\n    cursor: \"pointer\",\n    width: 206,\n    borderRadius: 10,\n    textAlign: \"center\",\n    textTransform: \"capitalize\",\n    paddingBlock: 3,\n    backgroundColor: (props: { position: number }) => {\n      const { position } = props;\n      if (position > colors.length) {\n        return colors[position % colors.length];\n      }\n      return colors[position];\n    },\n    whiteSpace: \"nowrap\",\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    paddingInline: 3,\n  },\n  postTitle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    width: \"100%\",\n  },\n  tagsAndRTContainer: {\n    display: \"flex\",\n  },\n});\n\nconst Post: React.FC<IProps> = ({ post, position }) => {\n  const classes = useStyles({ position });\nreturn ( <div className={classes.container}> <div className={classes.topic}> <Typography>{post.topic[0].name}</Typography> </div> <div> <div className={classes.postTitle}> <PostTitle>{post.title}</PostTitle> <PostAuthor variant=\"subtitle2\">by {post.user.name}</PostAuthor> </div> <PostSummary>{`${post.summary.substr( 0, 1000)} [...][...]`}</PostSummary> </div> <ReadTime variant=\"subtitle2\">{post.read_time}</ReadTime> <PostDivider /> </div>); }; export default Post; const PostTitle = withStyles({ root: { color: \"#3798A7\", fontSize: 30, marginBlock: 15, textTransform: \"capitalize\", cursor: \"pointer\", }, })(Typography); const PostSummary = withStyles({ root: { color: \"#686868\", fontSize: 15, textTransform: \"capitalize\", cursor: \"pointer\", paddingRight: \"10%\", }, })(Typography); const PostAuthor = withStyles({ root: { whiteSpace: \"nowrap\", color: \"#C5C5C5\", marginLeft: \"auto\", marginTop: 10, }, })(Typography); const ReadTime = withStyles({ root: { whiteSpace: \"nowrap\", color: \"#C5C5C5\", marginLeft: \"auto\", marginTop: 10, }, })(Typography); const PostDivider = withStyles({ root: { marginTop: 10, }, })(Divider);\n"]},"metadata":{},"sourceType":"module"}