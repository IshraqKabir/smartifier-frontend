{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ishraqkabir/workspace/smartifier-frontend/Components/QuizTest/Submit/Submit.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport PersonIcon from '@material-ui/icons/Person';\nimport AddIcon from '@material-ui/icons/Add';\nimport Typography from '@material-ui/core/Typography';\nimport { blue } from '@material-ui/core/colors';\nvar emails = ['username@gmail.com', 'user02@gmail.com'];\nvar useStyles = makeStyles({\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600]\n  }\n});\n\nfunction SimpleDialog(props) {\n  _s();\n\n  var _this = this;\n\n  var classes = useStyles();\n  var onClose = props.onClose,\n      selectedValue = props.selectedValue,\n      open = props.open;\n\n  var handleClose = function handleClose() {\n    onClose(selectedValue);\n  };\n\n  var handleListItemClick = function handleListItemClick(value) {\n    onClose(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    onClose: handleClose,\n    \"aria-labelledby\": \"simple-dialog-title\",\n    open: open,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"simple-dialog-title\",\n      children: \"Set backup account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: [emails.map(function (email) {\n        return /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          onClick: function onClick() {\n            return handleListItemClick(email);\n          },\n          children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              className: classes.avatar,\n              children: /*#__PURE__*/_jsxDEV(PersonIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, _this)]\n        }, email, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, _this);\n      }), /*#__PURE__*/_jsxDEV(ListItem, {\n        autoFocus: true,\n        button: true,\n        onClick: function onClick() {\n          return handleListItemClick('addAccount');\n        },\n        children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: \"Add account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SimpleDialog, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = SimpleDialog;\nexport default function SubmitConfirmDialog() {\n  _s2();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var _React$useState3 = React.useState(emails[1]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      selectedValue = _React$useState4[0],\n      setSelectedValue = _React$useState4[1];\n\n  var handleClickOpen = function handleClickOpen() {\n    setOpen(true);\n  };\n\n  var handleClose = function handleClose(value) {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      children: [\"Selected: \", selectedValue]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: handleClickOpen,\n      children: \"Open simple dialog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SimpleDialog, {\n      selectedValue: selectedValue,\n      open: open,\n      onClose: handleClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(SubmitConfirmDialog, \"Do4OkZlv0qopuj/OyvdbwyP1nrE=\");\n\n_c2 = SubmitConfirmDialog;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SimpleDialog\");\n$RefreshReg$(_c2, \"SubmitConfirmDialog\");","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/QuizTest/Submit/Submit.tsx"],"names":["React","makeStyles","Button","Avatar","List","ListItem","ListItemAvatar","ListItemText","DialogTitle","Dialog","PersonIcon","AddIcon","Typography","blue","emails","useStyles","avatar","backgroundColor","color","SimpleDialog","props","classes","onClose","selectedValue","open","handleClose","handleListItemClick","value","map","email","SubmitConfirmDialog","useState","setOpen","setSelectedValue","handleClickOpen"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport PersonIcon from '@material-ui/icons/Person';\nimport AddIcon from '@material-ui/icons/Add';\nimport Typography from '@material-ui/core/Typography';\nimport { blue } from '@material-ui/core/colors';\n\nconst emails = ['username@gmail.com', 'user02@gmail.com'];\nconst useStyles = makeStyles({\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600],\n  },\n});\n\nexport interface SimpleDialogProps {\n  open: boolean;\n  selectedValue: string;\n  onClose: (value: string) => void;\n}\n\nfunction SimpleDialog(props: SimpleDialogProps) {\n  const classes = useStyles();\n  const { onClose, selectedValue, open } = props;\n\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  const handleListItemClick = (value: string) => {\n    onClose(value);\n  };\n\n  return (\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\n      <DialogTitle id=\"simple-dialog-title\">Set backup account</DialogTitle>\n      <List>\n        {emails.map((email) => (\n          <ListItem button onClick={() => handleListItemClick(email)} key={email}>\n            <ListItemAvatar>\n              <Avatar className={classes.avatar}>\n                <PersonIcon />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={email} />\n          </ListItem>\n        ))}\n        <ListItem autoFocus button onClick={() => handleListItemClick('addAccount')}>\n          <ListItemAvatar>\n            <Avatar>\n              <AddIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary=\"Add account\" />\n        </ListItem>\n      </List>\n    </Dialog>\n  );\n}\n\nexport default function SubmitConfirmDialog() {\n  const [open, setOpen] = React.useState(false);\n  const [selectedValue, setSelectedValue] = React.useState(emails[1]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (value: string) => {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  return (\n    <div>\n      <Typography variant=\"subtitle1\">Selected: {selectedValue}</Typography>\n      <br />\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Open simple dialog\n      </Button>\n      <SimpleDialog selectedValue={selectedValue} open={open} onClose={handleClose} />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}