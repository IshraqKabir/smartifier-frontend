{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Avatar, Box, Snackbar, withStyles } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport React, { useContext, useState } from \"react\";\nimport useLocalState from \"../../../../../../../custom-hooks/useLocalState\";\nimport useLoginAlert from \"../../../../../../../custom-hooks/useLoginAlert\";\nimport { backend_url } from \"../../../../../../../url\";\nimport { CommentsContext } from \"../../../../SinglePost\";\nimport { CommentContext } from \"../../Comment\";\n\nconst Likes = () => {\n  const {\n    comment\n  } = useContext(CommentContext);\n  const [user] = useLocalState(\"user\", \"\");\n  const {\n    showLoginAlert,\n    handleClickWhenLoggedOut\n  } = useLoginAlert();\n  const {\n    0: likesCount,\n    1: setLikesCount\n  } = useState(comment.likes_count ? comment.likes_count : 0);\n  const {\n    likedCommentsIdsByUser,\n    setLikedCommentsIdsByUser\n  } = useContext(CommentsContext);\n\n  const handleClick = () => {\n    if (!user || !user.token) {\n      handleClickWhenLoggedOut();\n      return;\n    }\n\n    if (likedCommentsIdsByUser == \"empty\") {\n      unLikeComment();\n      return;\n    }\n\n    if (likedCommentsIdsByUser.includes(comment.id)) {\n      unLikeComment();\n    } else {\n      likeComment();\n    }\n  };\n\n  const likeComment = () => {\n    if (user && user.token) {\n      axios.post(`${backend_url}/api/comment/like`, {\n        comment_id: comment === null || comment === void 0 ? void 0 : comment.id\n      }, {\n        headers: {\n          Accept: \"application/json\",\n          Authorization: `Bearer ${user.token}`\n        }\n      }).then(response => {\n        setLikedCommentsIdsByUser(ids => {\n          return [comment.id, ...ids];\n        });\n        setLikesCount(count => count + 1);\n      });\n    }\n  };\n\n  const unLikeComment = () => {\n    if (user && user.token) {\n      axios.post(`${backend_url}/api/comment/unlike`, {\n        comment_id: comment === null || comment === void 0 ? void 0 : comment.id\n      }, {\n        headers: {\n          Accept: \"application/json\",\n          Authorization: `Bearer ${user.token}`\n        }\n      }).then(response => {\n        setLikedCommentsIdsByUser(ids => ids.filter(id => id != comment.id));\n        setLikesCount(count => count - 1);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(Button, {\n    onClick: handleClick,\n    children: [/*#__PURE__*/_jsx(Avatar, {\n      src: `https://img.icons8.com/pastel-glyph/34/000000/facebook-like--v1.png`,\n      style: {\n        width: \"23px\",\n        height: \"23px\",\n        marginRight: \"16px\",\n        alignSelf: \"center\",\n        backgroundColor: likedCommentsIdsByUser == \"empty\" ? \"lightgrey\" : likedCommentsIdsByUser.includes(comment.id) ? \"#2d95b5\" : \"lightgrey\",\n        borderRadius: \"50%\",\n        padding: \"5px\",\n        cursor: \"pointer\"\n      }\n    }), /*#__PURE__*/_jsx(Number, {\n      children: likesCount\n    }), /*#__PURE__*/_jsxs(\"p\", {\n      children: [\"Like\", likesCount > 1 ? \"s\" : \"\"]\n    }), /*#__PURE__*/_jsx(LoginAlert, {\n      anchorOrigin: {\n        vertical: \"top\",\n        horizontal: \"center\"\n      },\n      open: showLoginAlert,\n      message: \"Please Login To Like The Comment.\"\n    }, comment.id)]\n  });\n};\n\nexport default Likes;\nconst Button = withStyles({\n  root: {\n    maxWidth: \"240px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    marginRight: \"4rem\",\n    cursor: \"pointer\",\n    margin: \"1rem 0rem 0.3rem 0rem\"\n  }\n})(Box);\nconst Number = withStyles({\n  root: {\n    display: \"inline-block\",\n    marginRight: 8\n  }\n})(Box);\nconst LoginAlert = withStyles({\n  root: {\n    zIndex: 20000\n  }\n})(Snackbar);","map":null,"metadata":{},"sourceType":"module"}