{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport Cookies from \"js-cookie\";\n\nvar useLocalState = function useLocalState(key, defaultValue) {\n  _s();\n\n  var _useState = useState(function () {\n    if (true) {\n      console.log(getValue(key));\n      return getValue(key);\n    }\n  }),\n      value = _useState[0],\n      setValueState = _useState[1];\n\n  useEffect(function () {\n    var listener = function listener(e) {\n      if (e.storageArea === localStorage && e.key === key) {\n        setValueState(JSON.parse(e.newValue));\n      }\n    };\n\n    window.addEventListener(\"storage\", listener);\n    return function () {\n      window.removeEventListener(\"storage\", listener);\n    };\n  }, [key]);\n  useEffect(function () {// console.log(Cookies.get(key));\n  }, []);\n\n  var setValue = function setValue(newValue) {\n    setValueState(function (currentValue) {\n      var value = null;\n\n      if (typeof newValue === \"function\") {\n        value = newValue(currentValue);\n      } else {\n        value = newValue;\n      }\n\n      setCookie(key, value);\n      localStorage.setItem(key, JSON.stringify(value));\n      return value;\n    });\n  };\n\n  return [value, setValue];\n};\n\n_s(useLocalState, \"27Z6F9DbDR4sBAYbyXHC/k+MIxs=\");\n\nexport default useLocalState;\n\nvar getValue = function getValue(key) {\n  if (isLocalStorageWorking()) {\n    // return from local storage\n    var value = localStorage.getItem(key);\n    return value ? JSON.parse(value) : value;\n  } // return from cookie;\n\n\n  return getCookie(key);\n};\n\nvar isLocalStorageWorking = function isLocalStorageWorking() {\n  return false;\n};\n\nvar setCookie = function setCookie(key, value) {\n  Cookies.set(key, value ? JSON.stringify(value) : value);\n};\n\nvar getCookie = function getCookie(key) {\n  var result = Cookies.get(JSON.stringify(key));\n  return JSON.parse(result);\n}; // function useLocalState<T>(key: string, defaultValue: T) {\n//   const [value, setValue] = useState(() => {\n//     if (isLocalStorageWorking() == false) {\n//       return getCookie(key);\n//     }\n//     let result = null;\n//     if (process.browser) {\n//       const storedValue = localStorage.getItem(key)\n//         ? JSON.parse(localStorage.getItem(key))\n//         : localStorage.getItem(key);\n//       if (!storedValue) {\n//         result = defaultValue;\n//       }\n//       result = storedValue === null ? defaultValue : storedValue;\n//     } else {\n//       result = defaultValue;\n//     }\n//     return result;\n//   });\n//   useEffect(() => {\n//     const listener = (e) => {\n//       if (e.storageArea === localStorage && e.key === key) {\n//         setValue(JSON.parse(e.newValue));\n//       }\n//     };\n//     window.addEventListener(\"storage\", listener);\n//     return () => {\n//       window.removeEventListener(\"storage\", listener);\n//     };\n//   }, [key]);\n//   const setValueInLocalStorage = (newValue) => {\n//     setValue((currentValue) => {\n//       let value = null;\n//       if (typeof newValue === \"function\") {\n//         setCookie(key, newValue(currentValue));\n//         value = newValue(currentValue);\n//       } else {\n//         setCookie(key, newValue);\n//         value = newValue;\n//       }\n//       // const result =\n//       //   typeof newValue === \"function\" ? newValue(currentValue) : newValue;\n//       // localStorage.setItem(key, JSON.stringify(result));\n//       return value;\n//     });\n//   };\n//   useEffect(() => {\n//     const storedValue = JSON.parse(localStorage.getItem(key));\n//     if (storedValue) {\n//       setValueInLocalStorage(storedValue);\n//     } else {\n//       setValueInLocalStorage(value);\n//     }\n//   }, []);\n//   return [value, setValueInLocalStorage];\n// }\n// export default useLocalState;","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/custom-hooks/useLocalState.ts"],"names":["useState","useEffect","Cookies","useLocalState","key","defaultValue","console","log","getValue","value","setValueState","listener","e","storageArea","localStorage","JSON","parse","newValue","window","addEventListener","removeEventListener","setValue","currentValue","setCookie","setItem","stringify","isLocalStorageWorking","getItem","getCookie","set","result","get"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport Cookies from \"js-cookie\";\n\nconst useLocalState = (key: string, defaultValue: any) => {\n  const [value, setValueState] = useState(() => {\n    if (process.browser) {\n      console.log(getValue((key)))\n      return getValue(key);\n    }\n  });\n\n  useEffect(() => {\n    const listener = (e) => {\n      if (e.storageArea === localStorage && e.key === key) {\n        setValueState(JSON.parse(e.newValue));\n      }\n    };\n    window.addEventListener(\"storage\", listener);\n\n    return () => {\n      window.removeEventListener(\"storage\", listener);\n    };\n  }, [key]);\n\n  useEffect(() => {\n    // console.log(Cookies.get(key));\n  }, []);\n\n  const setValue = (newValue) => {\n    setValueState((currentValue) => {\n      let value = null;\n\n      if (typeof newValue === \"function\") {\n        value = newValue(currentValue);\n      } else {\n        value = newValue;\n      }\n\n      setCookie(key, value);\n      localStorage.setItem(key, JSON.stringify(value));\n\n      return value;\n    });\n  };\n\n  return [value, setValue];\n};\n\nexport default useLocalState;\n\nconst getValue = (key) => {\n  if (isLocalStorageWorking()) {\n    // return from local storage\n    const value = localStorage.getItem(key);\n    return value ? JSON.parse(value) : value;\n  }\n\n  // return from cookie;\n  return getCookie(key);\n};\n\nconst isLocalStorageWorking = (): boolean => {\n  return false;\n};\n\nconst setCookie = (key, value) => {\n  Cookies.set(key, value ? JSON.stringify(value) : value);\n};\n\nconst getCookie = (key) => {\n  const result = Cookies.get(JSON.stringify(key));\n  return JSON.parse(result);\n};\n\n// function useLocalState<T>(key: string, defaultValue: T) {\n//   const [value, setValue] = useState(() => {\n//     if (isLocalStorageWorking() == false) {\n//       return getCookie(key);\n//     }\n\n//     let result = null;\n//     if (process.browser) {\n//       const storedValue = localStorage.getItem(key)\n//         ? JSON.parse(localStorage.getItem(key))\n//         : localStorage.getItem(key);\n\n//       if (!storedValue) {\n//         result = defaultValue;\n//       }\n//       result = storedValue === null ? defaultValue : storedValue;\n//     } else {\n//       result = defaultValue;\n//     }\n\n//     return result;\n//   });\n\n//   useEffect(() => {\n//     const listener = (e) => {\n//       if (e.storageArea === localStorage && e.key === key) {\n//         setValue(JSON.parse(e.newValue));\n//       }\n//     };\n//     window.addEventListener(\"storage\", listener);\n\n//     return () => {\n//       window.removeEventListener(\"storage\", listener);\n//     };\n//   }, [key]);\n\n//   const setValueInLocalStorage = (newValue) => {\n//     setValue((currentValue) => {\n//       let value = null;\n//       if (typeof newValue === \"function\") {\n//         setCookie(key, newValue(currentValue));\n//         value = newValue(currentValue);\n//       } else {\n//         setCookie(key, newValue);\n//         value = newValue;\n//       }\n//       // const result =\n//       //   typeof newValue === \"function\" ? newValue(currentValue) : newValue;\n//       // localStorage.setItem(key, JSON.stringify(result));\n//       return value;\n//     });\n//   };\n\n//   useEffect(() => {\n//     const storedValue = JSON.parse(localStorage.getItem(key));\n//     if (storedValue) {\n//       setValueInLocalStorage(storedValue);\n//     } else {\n//       setValueInLocalStorage(value);\n//     }\n//   }, []);\n\n//   return [value, setValueInLocalStorage];\n// }\n\n// export default useLocalState;\n"]},"metadata":{},"sourceType":"module"}