{"ast":null,"code":"import { useState, useEffect } from \"react\";\n\nfunction useLocalState(key, defaultValue) {\n  const {\n    0: value,\n    1: setValue\n  } = useState(() => {\n    if (false) {\n      const storedValue = JSON.parse(localStorage.getItem(key));\n\n      if (!storedValue) {\n        return defaultValue;\n      }\n\n      return storedValue === null ? defaultValue : storedValue;\n    } else {\n      return defaultValue;\n    }\n  });\n  useEffect(() => {\n    const listener = e => {\n      if (e.storageArea === localStorage && e.key === key) {\n        setValue(JSON.parse(e.newValue));\n      }\n    };\n\n    window.addEventListener(\"storage\", listener);\n    return () => {\n      window.removeEventListener(\"storage\", listener);\n    };\n  }, [key]);\n\n  const setValueInLocalStorage = newValue => {\n    setValue(currentValue => {\n      const result = typeof newValue === \"function\" ? newValue(currentValue) : newValue;\n      localStorage.setItem(key, JSON.stringify(result));\n      return result;\n    });\n    setCookie;\n  };\n\n  useEffect(() => {\n    const storedValue = JSON.parse(localStorage.getItem(key));\n\n    if (storedValue) {\n      setValueInLocalStorage(storedValue);\n    } else {\n      setValueInLocalStorage(value);\n    }\n  }, []);\n\n  function setCookie(name, value, days = 99999999) {\n    var expires = \"\";\n\n    if (days) {\n      var date = new Date();\n      date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);\n      expires = \"; expires=\" + date.toUTCString();\n    }\n\n    document.cookie = name + \"=\" + (JSON.stringify(value) || \"\") + expires + \"; path=/\";\n  }\n\n  function getCookie(name) {\n    var nameEQ = name + \"=\";\n    var ca = document.cookie.split(\";\");\n\n    for (var i = 0; i < ca.length; i++) {\n      var c = ca[i];\n\n      while (c.charAt(0) == \" \") c = c.substring(1, c.length);\n\n      if (c.indexOf(nameEQ) == 0) return JSON.parse(c.substring(nameEQ.length, c.length));\n    }\n\n    return null;\n  }\n\n  function eraseCookie(name) {\n    document.cookie = name + \"=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT;\";\n  }\n\n  return [value, setValueInLocalStorage];\n}\n\nexport default useLocalState;","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/custom-hooks/useLocalState.ts"],"names":["useState","useEffect","useLocalState","key","defaultValue","value","setValue","storedValue","JSON","parse","localStorage","getItem","listener","e","storageArea","newValue","window","addEventListener","removeEventListener","setValueInLocalStorage","currentValue","result","setItem","stringify","setCookie","name","days","expires","date","Date","setTime","getTime","toUTCString","document","cookie","getCookie","nameEQ","ca","split","i","length","c","charAt","substring","indexOf","eraseCookie"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\n\nfunction useLocalState<T>(key: string, defaultValue: T) {\n  const [value, setValue] = useState(() => {\n    if (process.browser) {\n      const storedValue = JSON.parse(localStorage.getItem(key));\n      if (!storedValue) {\n        return defaultValue;\n      }\n      return storedValue === null ? defaultValue : storedValue;\n    } else {\n      return defaultValue;\n    }\n  });\n\n  useEffect(() => {\n    const listener = (e) => {\n      if (e.storageArea === localStorage && e.key === key) {\n        setValue(JSON.parse(e.newValue));\n      }\n    };\n    window.addEventListener(\"storage\", listener);\n\n    return () => {\n      window.removeEventListener(\"storage\", listener);\n    };\n  }, [key]);\n\n  const setValueInLocalStorage = (newValue) => {\n    setValue((currentValue) => {\n      const result =\n        typeof newValue === \"function\" ? newValue(currentValue) : newValue;\n      localStorage.setItem(key, JSON.stringify(result));\n      return result;\n    });\n\n    setCookie\n  };\n\n  useEffect(() => {\n    const storedValue = JSON.parse(localStorage.getItem(key));\n    if (storedValue) {\n      setValueInLocalStorage(storedValue);\n    } else {\n      setValueInLocalStorage(value);\n    }\n  }, []);\n\n  function setCookie(name, value, days = 99999999) {\n    var expires = \"\";\n    if (days) {\n      var date = new Date();\n      date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);\n      expires = \"; expires=\" + date.toUTCString();\n    }\n    document.cookie =\n      name + \"=\" + (JSON.stringify(value) || \"\") + expires + \"; path=/\";\n  }\n\n  function getCookie(name) {\n    var nameEQ = name + \"=\";\n    var ca = document.cookie.split(\";\");\n    for (var i = 0; i < ca.length; i++) {\n      var c = ca[i];\n      while (c.charAt(0) == \" \") c = c.substring(1, c.length);\n      if (c.indexOf(nameEQ) == 0)\n        return JSON.parse(c.substring(nameEQ.length, c.length));\n    }\n    return null;\n  }\n\n  function eraseCookie(name) {\n    document.cookie =\n      name + \"=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT;\";\n  }\n\n  return [value, setValueInLocalStorage];\n}\n\nexport default useLocalState;\n"]},"metadata":{},"sourceType":"module"}