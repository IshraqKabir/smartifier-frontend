{"ast":null,"code":"import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { local_backend_url } from \"../url\";\n\nfunction useSearch(url, query) {\n  const {\n    0: data,\n    1: setData\n  } = useState([]);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: error,\n    1: setError\n  } = useState(false);\n  useEffect(() => {\n    setData([]);\n  }, [query]);\n  useEffect(() => {\n    if (!query) return () => {};\n    setLoading(true);\n    setError(false);\n    const source = axios.CancelToken.source();\n\n    const fetchData = () => {\n      axios({\n        method: \"GET\",\n        url: `${local_backend_url}${url}`,\n        params: {\n          query: query\n        },\n        cancelToken: source.token,\n        headers: {\n          Accept: \"application/json\"\n        }\n      }).then(res => {\n        let searchResults = [...res.data];\n        searchResults.map(result => {\n          if (result.posts) {\n            searchResults = [...searchResults, ...result.posts];\n          }\n        });\n        console.log(res.data);\n        setLoading(false);\n        setError(false);\n      }).catch(error => {\n        if (axios.isCancel(error)) return;\n        setError(true);\n      });\n    };\n\n    fetchData();\n    return () => {\n      source.cancel();\n    };\n  }, [query]);\n  return {\n    data,\n    loading,\n    error\n  };\n}\n\nexport default useSearch;","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/custom-hooks/useSearch.tsx"],"names":["axios","useEffect","useState","local_backend_url","useSearch","url","query","data","setData","loading","setLoading","error","setError","source","CancelToken","fetchData","method","params","cancelToken","token","headers","Accept","then","res","searchResults","map","result","posts","console","log","catch","isCancel","cancel"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,SAASC,iBAAT,QAAkC,QAAlC;;AAEA,SAASC,SAAT,CAAmBC,GAAnB,EAAgCC,KAAhC,EAA+C;AAC7C,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAA,OAACO,OAAD;AAAA,OAAUC;AAAV,MAAwBR,QAAQ,CAAU,KAAV,CAAtC;AACA,QAAM;AAAA,OAACS,KAAD;AAAA,OAAQC;AAAR,MAAoBV,QAAQ,CAAU,KAAV,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD,GAFQ,EAEN,CAACF,KAAD,CAFM,CAAT;AAIAL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACK,KAAL,EAAY,OAAO,MAAM,CAAE,CAAf;AAEZI,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,IAAAA,QAAQ,CAAC,KAAD,CAAR;AAEA,UAAMC,MAAM,GAAGb,KAAK,CAACc,WAAN,CAAkBD,MAAlB,EAAf;;AAEA,UAAME,SAAS,GAAG,MAAM;AACtBf,MAAAA,KAAK,CAAC;AACJgB,QAAAA,MAAM,EAAE,KADJ;AAEJX,QAAAA,GAAG,EAAG,GAAEF,iBAAkB,GAAEE,GAAI,EAF5B;AAGJY,QAAAA,MAAM,EAAE;AAAEX,UAAAA,KAAK,EAAEA;AAAT,SAHJ;AAIJY,QAAAA,WAAW,EAAEL,MAAM,CAACM,KAJhB;AAKJC,QAAAA,OAAO,EAAE;AACPC,UAAAA,MAAM,EAAE;AADD;AALL,OAAD,CAAL,CASGC,IATH,CASSC,GAAD,IAAS;AACb,YAAIC,aAA8B,GAAG,CAAC,GAAGD,GAAG,CAAChB,IAAR,CAArC;AAEAiB,QAAAA,aAAa,CAACC,GAAd,CAAmBC,MAAD,IAAY;AAC5B,cAAIA,MAAM,CAACC,KAAX,EAAkB;AAChBH,YAAAA,aAAa,GAAG,CAAC,GAAGA,aAAJ,EAAmB,GAAGE,MAAM,CAACC,KAA7B,CAAhB;AACD;AACF,SAJD;AAMAC,QAAAA,OAAO,CAACC,GAAR,CAAYN,GAAG,CAAChB,IAAhB;AACAG,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,QAAAA,QAAQ,CAAC,KAAD,CAAR;AACD,OArBH,EAsBGkB,KAtBH,CAsBUnB,KAAD,IAAW;AAChB,YAAIX,KAAK,CAAC+B,QAAN,CAAepB,KAAf,CAAJ,EAA2B;AAC3BC,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,OAzBH;AA0BD,KA3BD;;AA6BAG,IAAAA,SAAS;AAET,WAAO,MAAM;AACXF,MAAAA,MAAM,CAACmB,MAAP;AACD,KAFD;AAGD,GA1CQ,EA0CN,CAAC1B,KAAD,CA1CM,CAAT;AA4CA,SAAO;AAAEC,IAAAA,IAAF;AAAQE,IAAAA,OAAR;AAAiBE,IAAAA;AAAjB,GAAP;AACD;;AAED,eAAeP,SAAf","sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport ISearchResult from \"../Models/ISearchResult\";\nimport { local_backend_url } from \"../url\";\n\nfunction useSearch(url: String, query: String) {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState<boolean>(false);\n\n  useEffect(() => {\n    setData([]);\n  }, [query]);\n\n  useEffect(() => {\n    if (!query) return () => {};\n\n    setLoading(true);\n    setError(false);\n\n    const source = axios.CancelToken.source();\n\n    const fetchData = () => {\n      axios({\n        method: \"GET\",\n        url: `${local_backend_url}${url}`,\n        params: { query: query },\n        cancelToken: source.token,\n        headers: {\n          Accept: \"application/json\",\n        },\n      })\n        .then((res) => {\n          let searchResults: ISearchResult[] = [...res.data];\n\n          searchResults.map((result) => {\n            if (result.posts) {\n              searchResults = [...searchResults, ...result.posts];\n            }\n          });\n\n          console.log(res.data);\n          setLoading(false);\n          setError(false);\n        })\n        .catch((error) => {\n          if (axios.isCancel(error)) return;\n          setError(true);\n        });\n    };\n\n    fetchData();\n\n    return () => {\n      source.cancel();\n    };\n  }, [query]);\n\n  return { data, loading, error };\n}\n\nexport default useSearch;\n"]},"metadata":{},"sourceType":"module"}