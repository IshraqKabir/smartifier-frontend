{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ishraqkabir/workspace/smartifier-frontend/Components/QuizTest/Questions/Questions.tsx\";\nimport { Box, Typography, withStyles } from \"@material-ui/core\";\nimport { createContext } from \"react\";\nimport SingleQuestion from \"./SingleQuestion/SingleQuestion\";\nimport QuestionBottomBar from \"./QuestionBottomBar/QuestionBottomBar\";\nimport useTestState from \"./useTestState\";\nimport QuestionsProgressBar from \"./QuestionsProgressBar/QuestionsProgressBar\";\nimport Submit from \"../Submit/Submit\";\nexport const QuizTestStateContext = /*#__PURE__*/createContext(null);\nexport default function Questions({\n  quizTitle,\n  questions,\n  isAssessment,\n  quizId,\n  test,\n  duration\n}) {\n  const {\n    answers,\n    setAnswers,\n    currentQuestionIndex,\n    goToNextQuestion,\n    goToPreviousQuestion,\n    progress,\n    showPrevious,\n    showNext,\n    timeRemaining,\n    secondsRemaining\n  } = useTestState(quizId, questions, test, duration);\n  return /*#__PURE__*/_jsxDEV(QuizTestStateContext.Provider, {\n    value: {\n      answers,\n      setAnswers,\n      currentQuestionIndex,\n      goToNextQuestion,\n      goToPreviousQuestion,\n      showPrevious,\n      showNext,\n      questionCount: questions === null || questions === void 0 ? void 0 : questions.length,\n      timeRemaining,\n      secondsRemaining\n    },\n    children: /*#__PURE__*/_jsxDEV(OuterContainer, {\n      children: [/*#__PURE__*/_jsxDEV(QuestionsContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            color: \"inherit\",\n            children: `${quizTitle} ${isAssessment ? \"assessment\" : \"quiz\"}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), questions && (questions === null || questions === void 0 ? void 0 : questions.map((question, index) => {\n          return /*#__PURE__*/_jsxDEV(SingleQuestion, {\n            index: index,\n            question: question\n          }, question === null || question === void 0 ? void 0 : question.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this);\n        })), /*#__PURE__*/_jsxDEV(QuestionsProgressBar, {\n          progress: progress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(QuestionBottomBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Submit, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\nconst QuestionsContainer = withStyles({\n  root: {\n    backgroundColor: \"inherit\",\n    width: \"100%\",\n    borderRadius: 5,\n    overflow: \"hidden\",\n    boxShadow: \"0px 0px 8px 0px #2b579a\",\n    display: \"flex\",\n    flexDirection: \"column\"\n  }\n})(Box);\nconst OuterContainer = withStyles({\n  root: {\n    width: \"min(97%, 700px)\",\n    display: \"flex\",\n    flexDirection: \"column\"\n  }\n})(Box);\nconst Header = withStyles({\n  root: {\n    width: \"100%\",\n    textAlign: \"center\",\n    color: \"white\",\n    padding: \"0.5rem 0\",\n    background: \"transparent linear-gradient(180deg, #003EAA 0%, #002461E0 100%) 0% 0% no-repeat padding-box\",\n    textTransform: \"capitalize\"\n  }\n})(Box);","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/QuizTest/Questions/Questions.tsx"],"names":["Box","Typography","withStyles","createContext","SingleQuestion","QuestionBottomBar","useTestState","QuestionsProgressBar","Submit","QuizTestStateContext","Questions","quizTitle","questions","isAssessment","quizId","test","duration","answers","setAnswers","currentQuestionIndex","goToNextQuestion","goToPreviousQuestion","progress","showPrevious","showNext","timeRemaining","secondsRemaining","questionCount","length","map","question","index","id","QuestionsContainer","root","backgroundColor","width","borderRadius","overflow","boxShadow","display","flexDirection","OuterContainer","Header","textAlign","color","padding","background","textTransform"],"mappings":"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","sourcesContent":["import { Box, Typography, withStyles } from \"@material-ui/core\";\nimport { createContext } from \"react\";\nimport IQuestion from \"../../../Models/IQuestion\";\nimport SingleQuestion from \"./SingleQuestion/SingleQuestion\";\nimport QuestionBottomBar from \"./QuestionBottomBar/QuestionBottomBar\";\nimport useTestState from \"./useTestState\";\nimport QuestionsProgressBar from \"./QuestionsProgressBar/QuestionsProgressBar\";\nimport QuestionCountAndTimer from \"./QuestionBottomBar/QuestionCountAndTimer/QuestionCountAndTimer\";\nimport Submit from \"../Submit/Submit\";\n\ninterface IProps {\n  quizTitle: String;\n  questions: IQuestion[];\n  isAssessment: boolean;\n  quizId: number;\n  test: any;\n  duration: string;\n}\n\nexport const QuizTestStateContext = createContext(null);\n\nexport default function Questions({\n  quizTitle,\n  questions,\n  isAssessment,\n  quizId,\n  test,\n  duration,\n}: IProps) {\n  const {\n    answers,\n    setAnswers,\n    currentQuestionIndex,\n    goToNextQuestion,\n    goToPreviousQuestion,\n    progress,\n    showPrevious,\n    showNext,\n    timeRemaining,\n    secondsRemaining,\n  } = useTestState(quizId, questions, test, duration);\n\n  return (\n    <QuizTestStateContext.Provider\n      value={{\n        answers,\n        setAnswers,\n        currentQuestionIndex,\n        goToNextQuestion,\n        goToPreviousQuestion,\n        showPrevious,\n        showNext,\n        questionCount: questions?.length,\n        timeRemaining,\n        secondsRemaining,\n      }}\n    >\n      <OuterContainer>\n        <QuestionsContainer>\n          <Header>\n            <Typography variant=\"h6\" color=\"inherit\">\n              {`${quizTitle} ${isAssessment ? \"assessment\" : \"quiz\"}`}\n            </Typography>\n          </Header>\n          {questions &&\n            questions?.map((question, index) => {\n              return (\n                <SingleQuestion\n                  key={question?.id}\n                  index={index}\n                  question={question}\n                />\n              );\n            })}\n          <QuestionsProgressBar progress={progress} />\n          <QuestionBottomBar />\n        </QuestionsContainer>\n        <Submit />\n      </OuterContainer>\n    </QuizTestStateContext.Provider>\n  );\n}\n\nconst QuestionsContainer = withStyles({\n  root: {\n    backgroundColor: \"inherit\",\n    width: \"100%\",\n    borderRadius: 5,\n    overflow: \"hidden\",\n    boxShadow: \"0px 0px 8px 0px #2b579a\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n})(Box);\n\nconst OuterContainer = withStyles({\n  root: {\n    width: \"min(97%, 700px)\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n})(Box);\n\nconst Header = withStyles({\n  root: {\n    width: \"100%\",\n    textAlign: \"center\",\n    color: \"white\",\n    padding: \"0.5rem 0\",\n    background:\n      \"transparent linear-gradient(180deg, #003EAA 0%, #002461E0 100%) 0% 0% no-repeat padding-box\",\n    textTransform: \"capitalize\",\n  },\n})(Box);\n"]},"metadata":{},"sourceType":"module"}