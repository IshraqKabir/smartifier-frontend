{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ishraqkabir/workspace/smartifier-frontend/pages/authresp/google.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport { local_backend_url } from \"../../url\";\nimport useLocalState from \"../../custom-hooks/useLocalState\";\nimport { Box, withStyles } from \"@material-ui/core\";\n\nvar Google = function Google() {\n  _s();\n\n  var router = useRouter();\n  var code = router.query.code;\n\n  var _useLocalState = useLocalState(\"user\", \"\"),\n      _useLocalState2 = _slicedToArray(_useLocalState, 2),\n      user = _useLocalState2[0],\n      setUser = _useLocalState2[1];\n\n  useEffect(function () {\n    if (code) {\n      axios({\n        method: \"get\",\n        url: \"/api/auth/google?get=user&code=\".concat(code)\n      }).then(function (res) {\n        var id_token = res.data.user.data.id_token;\n        axios({\n          method: \"GET\",\n          url: \"https://oauth2.googleapis.com/tokeninfo?id_token=\".concat(id_token)\n        }).then(function (response) {\n          console.log(response.data);\n          var _response$data = response.data,\n              email = _response$data.email,\n              email_verified = _response$data.email_verified,\n              at_hash = _response$data.at_hash,\n              name = _response$data.name,\n              picture = _response$data.picture;\n          axios.post(\"\".concat(local_backend_url, \"/api/auth/googleSignIn\"), {\n            id_token: id_token,\n            email: email,\n            at_hash: at_hash,\n            email_verified: email_verified === \"true\" ? true : false,\n            name: name,\n            picture: picture\n          }).then(function (response) {\n            var token = response.data;\n            var user = {\n              email: email,\n              name: name,\n              picture: picture,\n              token: token\n            };\n            console.log(user);\n            setUser(user);\n          })[\"catch\"](function (error) {\n            return setUser(\"\");\n          });\n        });\n      });\n    }\n  }, [code]);\n  return /*#__PURE__*/_jsxDEV(Container, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 10\n  }, _this);\n};\n\n_s(Google, \"I8aHtubSf0CKljcs63vY8YN01os=\", false, function () {\n  return [useRouter, useLocalState];\n});\n\n_c = Google;\nexport default Google;\nvar Container = withStyles({\n  root: {\n    width: \"auto\",\n    display: \"flex\",\n    alignItems: \"center\"\n  }\n})(Box);\n\nvar _c;\n\n$RefreshReg$(_c, \"Google\");","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/pages/authresp/google.tsx"],"names":["React","useEffect","useRouter","axios","local_backend_url","useLocalState","Box","withStyles","Google","router","code","query","user","setUser","method","url","then","res","id_token","data","response","console","log","email","email_verified","at_hash","name","picture","post","token","error","Container","root","width","display","alignItems"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\n\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport post from \"../../UtilFunctions/post\";\nimport { backend_url, local_backend_url } from \"../../url\";\nimport reactUseCookie from \"react-use-cookie\";\nimport useLocalState from \"../../custom-hooks/useLocalState\";\nimport { Box, withStyles } from \"@material-ui/core\";\n\ninterface IProps {}\n\nconst Google: React.FC<IProps> = () => {\n  const router = useRouter();\n  const { code } = router.query;\n\n  const [user, setUser] = useLocalState(\"user\", \"\");\n\n  useEffect(() => {\n    if (code) {\n      axios({\n        method: \"get\",\n        url: `/api/auth/google?get=user&code=${code}`,\n      }).then((res) => {\n        const id_token = res.data.user.data.id_token;\n\n        axios({\n          method: \"GET\",\n          url: `https://oauth2.googleapis.com/tokeninfo?id_token=${id_token}`,\n        }).then((response: any) => {\n          console.log(response.data);\n          const {\n            email,\n            email_verified,\n            at_hash,\n            name,\n            picture,\n          } = response.data;\n\n          axios\n            .post(`${local_backend_url}/api/auth/googleSignIn`, {\n              id_token: id_token,\n              email: email,\n              at_hash: at_hash,\n              email_verified: email_verified === \"true\" ? true : false,\n              name: name,\n              picture: picture,\n            })\n            .then((response) => {\n              const token = response.data;\n\n              const user: any = {\n                email: email,\n                name: name,\n                picture: picture,\n                token: token,\n              };\n\n              console.log(user);\n\n              setUser(user);\n            })\n            .catch((error) => setUser(\"\"));\n        });\n      });\n    }\n  }, [code]);\n\n  return <Container>\n\n  </Container>\n};\n\nexport default Google;\n\nconst Container = withStyles({\n  root: {\n    width: \"auto\",\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n})(Box);\n"]},"metadata":{},"sourceType":"module"}