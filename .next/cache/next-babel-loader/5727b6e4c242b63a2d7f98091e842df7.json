{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nimport { local_backend_url } from \"../../url\";\nexport default function submitTest(_x, _x2, _x3) {\n  return _submitTest.apply(this, arguments);\n}\n\nfunction _submitTest() {\n  _submitTest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(testId, answers, token) {\n    var finalAnswers, response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            finalAnswers = Object.keys(answers).map(function (key) {\n              return {\n                options: answers[key]\n              };\n            });\n            _context.next = 3;\n            return axios.post(\"\".concat(local_backend_url, \"/api/quiz-test/answers/store\"), {\n              test_id: testId,\n              answers: finalAnswers\n            }, {\n              headers: {\n                Accept: \"Application/json\",\n                Authorization: \"Bearer \".concat(token)\n              }\n            }).then(function (response) {\n              console.log(response.data);\n              return response.data;\n            })[\"catch\"](function () {\n              return {\n                error: \"network error\"\n              };\n            });\n\n          case 3:\n            response = _context.sent;\n            return _context.abrupt(\"return\", response);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _submitTest.apply(this, arguments);\n}","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/repository/QuizTest/submitTest.tsx"],"names":["axios","local_backend_url","submitTest","testId","answers","token","finalAnswers","Object","keys","map","key","options","post","test_id","headers","Accept","Authorization","then","response","console","log","data","error"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,WAAlC;AAEA,wBAA8BC,UAA9B;AAAA;AAAA;;;yEAAe,iBACbC,MADa,EAEbC,OAFa,EAGbC,KAHa;AAAA;AAAA;AAAA;AAAA;AAAA;AAKPC,YAAAA,YALO,GAKQC,MAAM,CAACC,IAAP,CAAYJ,OAAZ,EAAqBK,GAArB,CAAyB,UAACC,GAAD,EAAS;AACrD,qBAAO;AACLC,gBAAAA,OAAO,EAAEP,OAAO,CAACM,GAAD;AADX,eAAP;AAGD,aAJoB,CALR;AAAA;AAAA,mBAWUV,KAAK,CACzBY,IADoB,WAEhBX,iBAFgB,mCAGnB;AACEY,cAAAA,OAAO,EAAEV,MADX;AAEEC,cAAAA,OAAO,EAAEE;AAFX,aAHmB,EAOnB;AACEQ,cAAAA,OAAO,EAAE;AACPC,gBAAAA,MAAM,EAAE,kBADD;AAEPC,gBAAAA,aAAa,mBAAYX,KAAZ;AAFN;AADX,aAPmB,EAcpBY,IAdoB,CAcf,UAACC,QAAD,EAAc;AAClBC,cAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACA,qBAAOH,QAAQ,CAACG,IAAhB;AACD,aAjBoB,WAkBd,YAAM;AACX,qBAAO;AAAEC,gBAAAA,KAAK,EAAE;AAAT,eAAP;AACD,aApBoB,CAXV;;AAAA;AAWPJ,YAAAA,QAXO;AAAA,6CAiCNA,QAjCM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import axios from \"axios\";\nimport { local_backend_url } from \"../../url\";\n\nexport default async function submitTest(\n  testId: number,\n  answers: any,\n  token: string\n) {\n  const finalAnswers = Object.keys(answers).map((key) => {\n    return {\n      options: answers[key],\n    };\n  });\n\n  const response = await axios\n    .post(\n      `${local_backend_url}/api/quiz-test/answers/store`,\n      {\n        test_id: testId,\n        answers: finalAnswers,\n      },\n      {\n        headers: {\n          Accept: \"Application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    )\n    .then((response) => {\n      console.log(response.data);\n      return response.data;\n    })\n    .catch(() => {\n      return { error: \"network error\" };\n    });\n\n  return response;\n}\n"]},"metadata":{},"sourceType":"module"}