{"ast":null,"code":"export default function getFormattedTime(time) {\n  let hours = 0,\n      minutes = 0,\n      seconds = 0;\n  if (time == null) return {\n    hours,\n    minutes,\n    seconds\n  };\n  const times = time === null || time === void 0 ? void 0 : time.split(\":\");\n  seconds = parseInt(times[(times === null || times === void 0 ? void 0 : times.length) - 1]);\n\n  if (times.length > 1) {\n    minutes = parseInt(times[(times === null || times === void 0 ? void 0 : times.length) - 2]);\n  }\n\n  if (times.length > 2) {\n    hours = parseInt(times[(times === null || times === void 0 ? void 0 : times.length) - 3]);\n  }\n\n  if (time == null) return {\n    hours,\n    minutes,\n    seconds\n  };\n  return {\n    hours: hours,\n    minutes: minutes,\n    seconds: seconds\n  };\n}","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/UtilFunctions/getFormattedTime.tsx"],"names":["getFormattedTime","time","hours","minutes","seconds","times","split","parseInt","length"],"mappings":"AAAA,eAAe,SAASA,gBAAT,CACbC,IADa,EAMb;AACA,MAAIC,KAAK,GAAG,CAAZ;AAAA,MACEC,OAAO,GAAG,CADZ;AAAA,MAEEC,OAAO,GAAG,CAFZ;AAIA,MAAIH,IAAI,IAAI,IAAZ,EAAkB,OAAO;AAAEC,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,GAAP;AAElB,QAAMC,KAAK,GAAGJ,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEK,KAAN,CAAY,GAAZ,CAAd;AAEAF,EAAAA,OAAO,GAAGG,QAAQ,CAACF,KAAK,CAAC,CAAAA,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEG,MAAP,IAAgB,CAAjB,CAAN,CAAlB;;AACA,MAAIH,KAAK,CAACG,MAAN,GAAe,CAAnB,EAAsB;AACpBL,IAAAA,OAAO,GAAGI,QAAQ,CAACF,KAAK,CAAC,CAAAA,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEG,MAAP,IAAgB,CAAjB,CAAN,CAAlB;AACD;;AAED,MAAIH,KAAK,CAACG,MAAN,GAAe,CAAnB,EAAsB;AACpBN,IAAAA,KAAK,GAAGK,QAAQ,CAACF,KAAK,CAAC,CAAAA,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEG,MAAP,IAAgB,CAAjB,CAAN,CAAhB;AACD;;AAED,MAAIP,IAAI,IAAI,IAAZ,EAAkB,OAAO;AAAEC,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,GAAP;AAClB,SAAO;AACLF,IAAAA,KAAK,EAAEA,KADF;AAELC,IAAAA,OAAO,EAAEA,OAFJ;AAGLC,IAAAA,OAAO,EAAEA;AAHJ,GAAP;AAKD","sourcesContent":["export default function getFormattedTime(\n  time: String\n): {\n  hours: number;\n  minutes: number;\n  seconds: number;\n} {\n  let hours = 0,\n    minutes = 0,\n    seconds = 0;\n\n  if (time == null) return { hours, minutes, seconds };\n\n  const times = time?.split(\":\");\n\n  seconds = parseInt(times[times?.length - 1]);\n  if (times.length > 1) {\n    minutes = parseInt(times[times?.length - 2]);\n  }\n\n  if (times.length > 2) {\n    hours = parseInt(times[times?.length - 3]);\n  }\n\n  if (time == null) return { hours, minutes, seconds };\n  return {\n    hours: hours,\n    minutes: minutes,\n    seconds: seconds,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}