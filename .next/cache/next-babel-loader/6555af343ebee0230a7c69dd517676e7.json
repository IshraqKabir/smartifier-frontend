{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nimport { local_backend_url } from \"../../url\";\nexport default function submitTest(_x, _x2, _x3) {\n  return _submitTest.apply(this, arguments);\n}\n\nfunction _submitTest() {\n  _submitTest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(testId, answers, token) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (answers) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            _context.next = 4;\n            return axios.post(\"\".concat(local_backend_url, \"/api/quiz-test/answers/store\"), {\n              test_id: testId,\n              options: answers\n            }, {\n              headers: {\n                Accept: \"Application/json\",\n                Authorization: \"Bearer \".concat(token)\n              }\n            }).then(function (response) {\n              return response.data;\n            })[\"catch\"](function () {\n              return {\n                error: \"network error\"\n              };\n            });\n\n          case 4:\n            response = _context.sent;\n            return _context.abrupt(\"return\", response);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _submitTest.apply(this, arguments);\n}","map":null,"metadata":{},"sourceType":"module"}