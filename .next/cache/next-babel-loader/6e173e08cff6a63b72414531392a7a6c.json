{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ishraqkabir/workspace/smartifier-frontend/Components/QuizTest/Questions/SingleQuestion/Question/Options/Option/Option.tsx\";\nimport { Box, Checkbox, Radio, withStyles } from \"@material-ui/core\";\nimport { useContext } from \"react\";\nimport { QuizTestStateContext } from \"../../../../Questions\";\nimport { QuestionContext } from \"../../../SingleQuestion\";\nimport useOption from \"./useOption\";\nexport default function Option({\n  option\n}) {\n  const {\n    answers,\n    setAnswers\n  } = useContext(QuizTestStateContext);\n  const {\n    question\n  } = useContext(QuestionContext);\n  const {\n    isChecked,\n    handleClick\n  } = useOption(option === null || option === void 0 ? void 0 : option.id, question, answers, setAnswers);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    onClick: handleClick,\n    children: [(question === null || question === void 0 ? void 0 : question.answer_type) === \"multiple_choice\" && /*#__PURE__*/_jsxDEV(Radio, {\n      checked: isChecked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), (question === null || question === void 0 ? void 0 : question.answer_type) === \"checkboxes\" && /*#__PURE__*/_jsxDEV(Checkbox, {\n      checked: isChecked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\nconst Container = withStyles({\n  root: {\n    borderTop: \"1px solid gray\",\n    padding: \"0.1rem 0rem\",\n    display: \"flex\",\n    alignItems: \"center\",\n    cursor: \"pointer\"\n  }\n})(Box);\nconst TitleAndImageContainer = withStyles({\n  root: {\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\"\n  }\n})(Box);","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/QuizTest/Questions/SingleQuestion/Question/Options/Option/Option.tsx"],"names":["Box","Checkbox","Radio","withStyles","useContext","QuizTestStateContext","QuestionContext","useOption","Option","option","answers","setAnswers","question","isChecked","handleClick","id","answer_type","Container","root","borderTop","padding","display","alignItems","cursor","TitleAndImageContainer","width","flexDirection"],"mappings":";;AAAA,SAASA,GAAT,EAAcC,QAAd,EAAwBC,KAAxB,EAA+BC,UAA/B,QAAiD,mBAAjD;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,oBAAT,QAAqC,uBAArC;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAMA,eAAe,SAASC,MAAT,CAAgB;AAAEC,EAAAA;AAAF,CAAhB,EAAoC;AACjD,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAA0BP,UAAU,CAACC,oBAAD,CAA1C;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAeR,UAAU,CAACE,eAAD,CAA/B;AAEA,QAAM;AAAEO,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA6BP,SAAS,CAC1CE,MAD0C,aAC1CA,MAD0C,uBAC1CA,MAAM,CAAEM,EADkC,EAE1CH,QAF0C,EAG1CF,OAH0C,EAI1CC,UAJ0C,CAA5C;AAOA,sBACE,QAAC,SAAD;AAAW,IAAA,OAAO,EAAEG,WAApB;AAAA,eACG,CAAAF,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEI,WAAV,MAA0B,iBAA1B,iBACC,QAAC,KAAD;AAAO,MAAA,OAAO,EAAEH;AAAhB;AAAA;AAAA;AAAA;AAAA,YAFJ,EAIG,CAAAD,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEI,WAAV,MAA0B,YAA1B,iBACC,QAAC,QAAD;AAAU,MAAA,OAAO,EAAEH;AAAnB;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;AAED,MAAMI,SAAS,GAAGd,UAAU,CAAC;AAC3Be,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAE,gBADP;AAEJC,IAAAA,OAAO,EAAE,aAFL;AAGJC,IAAAA,OAAO,EAAE,MAHL;AAIJC,IAAAA,UAAU,EAAE,QAJR;AAKJC,IAAAA,MAAM,EAAE;AALJ;AADqB,CAAD,CAAV,CAQfvB,GARe,CAAlB;AAUA,MAAMwB,sBAAsB,GAAGrB,UAAU,CAAC;AACxCe,EAAAA,IAAI,EAAE;AACJO,IAAAA,KAAK,EAAE,MADH;AAEJJ,IAAAA,OAAO,EAAE,MAFL;AAGJK,IAAAA,aAAa,EAAE;AAHX;AADkC,CAAD,CAAV,CAM5B1B,GAN4B,CAA/B","sourcesContent":["import { Box, Checkbox, Radio, withStyles } from \"@material-ui/core\";\nimport { useContext } from \"react\";\nimport { QuizTestStateContext } from \"../../../../Questions\";\nimport { QuestionContext } from \"../../../SingleQuestion\";\nimport useOption from \"./useOption\";\n\ninterface IProps {\n  option: any;\n}\n\nexport default function Option({ option }: IProps) {\n  const { answers, setAnswers } = useContext(QuizTestStateContext);\n  const { question } = useContext(QuestionContext);\n\n  const { isChecked, handleClick } = useOption(\n    option?.id,\n    question,\n    answers,\n    setAnswers\n  );\n\n  return (\n    <Container onClick={handleClick}>\n      {question?.answer_type === \"multiple_choice\" && (\n        <Radio checked={isChecked} />\n      )}\n      {question?.answer_type === \"checkboxes\" && (\n        <Checkbox checked={isChecked} />\n      )}\n      \n    </Container>\n  );\n}\n\nconst Container = withStyles({\n  root: {\n    borderTop: \"1px solid gray\",\n    padding: \"0.1rem 0rem\",\n    display: \"flex\",\n    alignItems: \"center\",\n    cursor: \"pointer\",\n  },\n})(Box);\n\nconst TitleAndImageContainer = withStyles({\n  root: {\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n})(Box);\n"]},"metadata":{},"sourceType":"module"}