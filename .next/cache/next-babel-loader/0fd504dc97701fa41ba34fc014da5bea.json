{"ast":null,"code":"import _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ishraqkabir/workspace/smartifier-frontend/Components/QuizTest/Questions/SingleQuestion/Question/Question.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Typography, withStyles } from \"@material-ui/core\";\nimport React, { useContext } from \"react\";\nimport { backend_url } from \"../../../../../url\";\nimport { QuestionContext } from \"../SingleQuestion\";\nexport default function Question(_ref) {\n  _s();\n\n  var _question$image, _question$image2;\n\n  _objectDestructuringEmpty(_ref);\n\n  var _useContext = useContext(QuestionContext),\n      question = _useContext.question;\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(QuestionContainer, {\n      children: [(question === null || question === void 0 ? void 0 : question.question) && /*#__PURE__*/_jsxDEV(QuestionTitle, {\n        variant: \"subtitle2\",\n        children: question === null || question === void 0 ? void 0 : question.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this), (question === null || question === void 0 ? void 0 : (_question$image = question.image) === null || _question$image === void 0 ? void 0 : _question$image.image_link) && /*#__PURE__*/_jsxDEV(Avatar, {\n        src: \"\".concat(backend_url, \"/storage/\").concat(question === null || question === void 0 ? void 0 : (_question$image2 = question.image) === null || _question$image2 === void 0 ? void 0 : _question$image2.image_link),\n        variant: \"square\",\n        style: {\n          height: 100,\n          width: 100\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Question, \"ufudCmQtCXPPM2sPfHbjInvAJtw=\");\n\n_c = Question;\nvar Container = withStyles({\n  root: {\n    width: \"100%\",\n    padding: \"0.5rem\"\n  }\n})(Box);\nvar QuestionTitle = withStyles({\n  root: {}\n})(Typography);\nvar QuestionContainer = withStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n})(Box);\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/QuizTest/Questions/SingleQuestion/Question/Question.tsx"],"names":["Box","Typography","withStyles","React","useContext","backend_url","QuestionContext","Question","question","image","image_link","height","width","Container","root","padding","QuestionTitle","QuestionContainer","display","flexDirection","alignItems","justifyContent"],"mappings":";;;;;;AAAA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,UAA1B,QAA4C,mBAA5C;AACA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,SAASC,eAAT,QAAgC,mBAAhC;AAIA,eAAe,SAASC,QAAT,OAA8B;AAAA;;AAAA;;AAAA;;AAAA,oBACtBH,UAAU,CAACE,eAAD,CADY;AAAA,MACnCE,QADmC,eACnCA,QADmC;;AAG3C,sBACE,QAAC,SAAD;AAAA,2BACE,QAAC,iBAAD;AAAA,iBACG,CAAAA,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEA,QAAV,kBACC,QAAC,aAAD;AAAe,QAAA,OAAO,EAAC,WAAvB;AAAA,kBACGA,QADH,aACGA,QADH,uBACGA,QAAQ,CAAEA;AADb;AAAA;AAAA;AAAA;AAAA,cAFJ,EAMG,CAAAA,QAAQ,SAAR,IAAAA,QAAQ,WAAR,+BAAAA,QAAQ,CAAEC,KAAV,oEAAiBC,UAAjB,kBACC,QAAC,MAAD;AACE,QAAA,GAAG,YAAKL,WAAL,sBAA4BG,QAA5B,aAA4BA,QAA5B,2CAA4BA,QAAQ,CAAEC,KAAtC,qDAA4B,iBAAiBC,UAA7C,CADL;AAEE,QAAA,OAAO,EAAC,QAFV;AAGE,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE,GAAV;AAAeC,UAAAA,KAAK,EAAE;AAAtB;AAHT;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GArBuBL,Q;;KAAAA,Q;AAuBxB,IAAMM,SAAS,GAAGX,UAAU,CAAC;AAC3BY,EAAAA,IAAI,EAAE;AACJF,IAAAA,KAAK,EAAE,MADH;AAEJG,IAAAA,OAAO,EAAE;AAFL;AADqB,CAAD,CAAV,CAKff,GALe,CAAlB;AAOA,IAAMgB,aAAa,GAAGd,UAAU,CAAC;AAC/BY,EAAAA,IAAI,EAAE;AADyB,CAAD,CAAV,CAEnBb,UAFmB,CAAtB;AAIA,IAAMgB,iBAAiB,GAAGf,UAAU,CAAC;AACnCY,EAAAA,IAAI,EAAE;AACJI,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,aAAa,EAAE,QAFX;AAGJC,IAAAA,UAAU,EAAE,QAHR;AAIJC,IAAAA,cAAc,EAAE;AAJZ;AAD6B,CAAD,CAAV,CAOvBrB,GAPuB,CAA1B","sourcesContent":["import { Box, Typography, withStyles } from \"@material-ui/core\";\nimport React, { useContext } from \"react\";\nimport { backend_url } from \"../../../../../url\";\nimport { QuestionContext } from \"../SingleQuestion\";\n\ninterface IProps {}\n\nexport default function Question({}: IProps) {\n  const { question } = useContext(QuestionContext);\n\n  return (\n    <Container>\n      <QuestionContainer>\n        {question?.question && (\n          <QuestionTitle variant=\"subtitle2\">\n            {question?.question}\n          </QuestionTitle>\n        )}\n        {question?.image?.image_link && (\n          <Avatar\n            src={`${backend_url}/storage/${question?.image?.image_link}`}\n            variant=\"square\"\n            style={{ height: 100, width: 100 }}\n          />\n        )}\n      </QuestionContainer>\n    </Container>\n  );\n}\n\nconst Container = withStyles({\n  root: {\n    width: \"100%\",\n    padding: \"0.5rem\",\n  },\n})(Box);\n\nconst QuestionTitle = withStyles({\n  root: {},\n})(Typography);\n\nconst QuestionContainer = withStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n})(Box);\n"]},"metadata":{},"sourceType":"module"}