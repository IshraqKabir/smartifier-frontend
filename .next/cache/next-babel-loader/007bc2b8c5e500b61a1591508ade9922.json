{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ishraqkabir/workspace/smartifier-frontend/Components/Question/Style2/Option/Option.tsx\";\nimport React, { useContext } from \"react\";\nimport { Box, makeStyles, Typography, withStyles } from \"@material-ui/core\";\nimport Image from \"next/image\";\nimport { local_backend_url } from \"../../../../url\";\nimport { QuestionContext } from \"../../../Questions/Questions\";\n\nconst Option = ({\n  option,\n  position,\n  isChecked\n}) => {\n  const {\n    answerType\n  } = useContext(QuestionContext);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [option.image && /*#__PURE__*/_jsxDEV(ImageContainer, {\n      children: /*#__PURE__*/_jsxDEV(Image, {\n        alt: \"image\",\n        src: `${local_backend_url}/storage/${option.image.image_link}`,\n        height: \"100%\",\n        width: \"100%\",\n        layout: \"responsive\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), option.title && /*#__PURE__*/_jsxDEV(TextContainer, {\n      children: [/*#__PURE__*/_jsxDEV(OptionButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: `${String.fromCharCode(position + 64)}. ${option.title}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), isChecked && \"checked!\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Option;\nconst useStyles = makeStyles({\n  container: {}\n});\nconst Container = withStyles({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    cursor: \"pointer\",\n    margin: \"0.3rem 0rem\",\n    marginBottom: \"2rem\",\n    width: \"100%\"\n  }\n})(Box);\nconst ImageContainer = withStyles({\n  root: {\n    height: 100,\n    width: 100,\n    borderRadius: 5,\n    marginRight: \"2rem\",\n    overflow: \"hidden\",\n    flexShrink: 0\n  }\n})(Box);\nconst TextContainer = withStyles({\n  root: {\n    background: \"transparent linear-gradient(180deg, #995FD4 0%, #1F29356E 100%) 0% 0% no-repeat padding-box\",\n    width: \"100%\",\n    padding: \"1rem 1rem\",\n    borderRadius: 10,\n    display: \"flex\",\n    alignItems: \"center\"\n  }\n})(Box);\nconst OptionButton = withStyles({\n  root: {\n    padding: \"0.7rem\",\n    backgroundColor: \"#17ABC2\",\n    borderRadius: \"50%\",\n    overflow: \"hidden\",\n    marginRight: \"1rem\"\n  }\n})(Box);","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/Question/Style2/Option/Option.tsx"],"names":["React","useContext","Box","makeStyles","Typography","withStyles","Image","local_backend_url","QuestionContext","Option","option","position","isChecked","answerType","image","image_link","title","String","fromCharCode","useStyles","container","Container","root","display","alignItems","cursor","margin","marginBottom","width","ImageContainer","height","borderRadius","marginRight","overflow","flexShrink","TextContainer","background","padding","OptionButton","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\n\nimport { Box, makeStyles, Typography, withStyles } from \"@material-ui/core\";\nimport IOption from \"../../../../Models/IOption\";\n\nimport Image from \"next/image\";\nimport { local_backend_url } from \"../../../../url\";\nimport { QuestionContext } from \"../../../Questions/Questions\";\n\ninterface IProps {\n  option: IOption;\n  position: number;\n  isChecked?: boolean;\n}\n\nconst Option: React.FC<IProps> = ({ option, position, isChecked }) => {\n  const { answerType } = useContext(QuestionContext);\n\n  return (\n    <Container>\n      {option.image && (\n        <ImageContainer>\n          <Image\n            alt=\"image\"\n            src={`${local_backend_url}/storage/${option.image.image_link}`}\n            height={\"100%\"}\n            width={\"100%\"}\n            layout=\"responsive\"\n          />\n        </ImageContainer>\n      )}\n      {option.title && (\n        <TextContainer>\n          <OptionButton />\n          <Typography>{`${String.fromCharCode(position + 64)}. ${\n            option.title\n          }`}</Typography>\n        </TextContainer>\n      )}\n      {isChecked && \"checked!\"}\n    </Container>\n  );\n};\n\nexport default Option;\n\nconst useStyles = makeStyles({\n  container: {\n\n  }\n})\n\nconst Container = withStyles({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    cursor: \"pointer\",\n    margin: \"0.3rem 0rem\",\n    marginBottom: \"2rem\",\n    width: \"100%\",\n  },\n})(Box);\n\nconst ImageContainer = withStyles({\n  root: {\n    height: 100,\n    width: 100,\n    borderRadius: 5,\n    marginRight: \"2rem\",\n    overflow: \"hidden\",\n    flexShrink: 0,\n  },\n})(Box);\n\nconst TextContainer = withStyles({\n  root: {\n    background:\n      \"transparent linear-gradient(180deg, #995FD4 0%, #1F29356E 100%) 0% 0% no-repeat padding-box\",\n    width: \"100%\",\n    padding: \"1rem 1rem\",\n    borderRadius: 10,\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n})(Box);\n\nconst OptionButton = withStyles({\n  root: {\n    padding: \"0.7rem\",\n    backgroundColor: \"#17ABC2\",\n    borderRadius: \"50%\",\n    overflow: \"hidden\",\n    marginRight: \"1rem\",\n  },\n})(Box);\n"]},"metadata":{},"sourceType":"module"}