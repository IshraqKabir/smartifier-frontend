{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ishraqkabir/workspace/smartifier-frontend/Components/Question/Style1/Option/Option.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport Image from \"next/image\";\nimport { local_backend_url } from \"../../../../url\";\n\nvar Option = function Option(_ref) {\n  _s();\n\n  var option = _ref.option,\n      position = _ref.position,\n      isChecked = _ref.isChecked;\n  var classes = useStyles({\n    isChecked: isChecked\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: [option.image && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.imageContainer,\n      children: /*#__PURE__*/_jsxDEV(Image, {\n        alt: \"image\",\n        src: \"\".concat(local_backend_url, \"/storage/\").concat(option.image.image_link),\n        height: \"100%\",\n        width: \"100%\",\n        layout: \"responsive\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, _this), option.title && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.textContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.optionButton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"\".concat(String.fromCharCode(position + 64), \". \").concat(option.title)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Option, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", true);\n\n_c = Option;\nexport default Option;\n\nvar _c;\n\n$RefreshReg$(_c, \"Option\");","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/Question/Style1/Option/Option.tsx"],"names":["React","Typography","Image","local_backend_url","Option","option","position","isChecked","classes","useStyles","container","image","imageContainer","image_link","title","textContainer","optionButton","String","fromCharCode"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAuD,OAAvD;AAEA,SAA0BC,UAA1B,QAAwD,mBAAxD;AAGA,OAAOC,KAAP,MAAkB,YAAlB;AACA,SAASC,iBAAT,QAAkC,iBAAlC;;AAUA,IAAMC,MAAwB,GAAG,SAA3BA,MAA2B,OAAqC;AAAA;;AAAA,MAAlCC,MAAkC,QAAlCA,MAAkC;AAAA,MAA1BC,QAA0B,QAA1BA,QAA0B;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;AACpE,MAAMC,OAAO,GAAGC,SAAS,CAAC;AAAEF,IAAAA,SAAS,EAATA;AAAF,GAAD,CAAzB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAEC,OAAO,CAACE,SAAxB;AAAA,eACGL,MAAM,CAACM,KAAP,iBACC;AAAK,MAAA,SAAS,EAAEH,OAAO,CAACI,cAAxB;AAAA,6BACE,QAAC,KAAD;AACE,QAAA,GAAG,EAAC,OADN;AAEE,QAAA,GAAG,YAAKT,iBAAL,sBAAkCE,MAAM,CAACM,KAAP,CAAaE,UAA/C,CAFL;AAGE,QAAA,MAAM,EAAE,MAHV;AAIE,QAAA,KAAK,EAAE,MAJT;AAKE,QAAA,MAAM,EAAC;AALT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aAFJ,EAYGR,MAAM,CAACS,KAAP,iBACC;AAAK,MAAA,SAAS,EAAEN,OAAO,CAACO,aAAxB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAEP,OAAO,CAACQ;AAAxB;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,QAAC,UAAD;AAAA,4BACMC,MAAM,CAACC,YAAP,CAAoBZ,QAAQ,GAAG,EAA/B,CADN,eAC6CD,MAAM,CAACS,KADpD;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA,aAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAuBD,CA1BD;;GAAMV,M;;KAAAA,M;AA4BN,eAAeA,MAAf","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\n\nimport { Box, makeStyles, Typography, withStyles } from \"@material-ui/core\";\nimport IOption from \"../../../../Models/IOption\";\n\nimport Image from \"next/image\";\nimport { local_backend_url } from \"../../../../url\";\nimport { AnswersContext } from \"../../Question\";\n\ninterface IProps {\n  option: IOption;\n  position: number;\n  isChecked?: boolean;\n}\n\n\nconst Option: React.FC<IProps> = ({ option, position, isChecked }) => {\n  const classes = useStyles({ isChecked });\n\n  return (\n    <div className={classes.container}>\n      {option.image && (\n        <div className={classes.imageContainer}>\n          <Image\n            alt=\"image\"\n            src={`${local_backend_url}/storage/${option.image.image_link}`}\n            height={\"100%\"}\n            width={\"100%\"}\n            layout=\"responsive\"\n          />\n        </div>\n      )}\n      {option.title && (\n        <div className={classes.textContainer}>\n          <div className={classes.optionButton} />\n          <Typography>\n            {`${String.fromCharCode(position + 64)}. ${option.title}`}\n          </Typography>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Option;\n"]},"metadata":{},"sourceType":"module"}