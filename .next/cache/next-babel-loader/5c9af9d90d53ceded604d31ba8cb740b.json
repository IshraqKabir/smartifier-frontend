{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ishraqkabir/workspace/smartifier-frontend/Components/QuizTest2/Timer/Timer.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Box, makeStyles, Typography, withStyles } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\n\nvar Timer = function Timer(_ref) {\n  _s();\n\n  var start_time = _ref.start_time,\n      duration = _ref.duration,\n      secondsRemaining = _ref.secondsRemaining,\n      setSecondsRemaining = _ref.setSecondsRemaining;\n\n  var _useState = useState(\"\"),\n      timeRemaining = _useState[0],\n      setTimeRemaing = _useState[1];\n\n  var _useState2 = useState(getPercentage(start_time, duration)),\n      percentage = _useState2[0],\n      setPercentage = _useState2[1];\n\n  var classes = useStyles({\n    percentage: percentage,\n    secondsRemaining: secondsRemaining\n  });\n  useEffect(function () {\n    setInterval(function () {\n      setSecondsRemaining(getTimeRemainingInSeconds(start_time, duration));\n    }, 500);\n  }, []);\n  useEffect(function () {\n    if (secondsRemaining <= 0) {\n      setTimeRemaing(\"Test Finished\");\n    } else {\n      setPercentage(getPercentage(start_time, duration));\n      setTimeRemaing(parseSecondsToClock(secondsRemaining));\n    }\n  }, [secondsRemaining]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.loader,\n      children: /*#__PURE__*/_jsxDEV(Time, {\n        variant: \"h6\",\n        children: \"\".concat(timeRemaining)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Timer, \"c8V2rGQMG4Lvpigs6MSHmSBT6+M=\", false, function () {\n  return [useStyles];\n});\n\n_c = Timer;\nexport default Timer;\nvar Container = withStyles({\n  root: _defineProperty({\n    position: \"fixed\",\n    top: 100,\n    zIndex: 4000,\n    left: 0,\n    textAlign: \"center\",\n    right: 0,\n    backgroundColor: \"transparent\",\n    fontWeight: \"bold\"\n  }, \"@media (max-width: 700px)\", {\n    top: 135\n  })\n})(Box);\nvar MINUTE_LEFT_FOR_WARNING = 1;\nvar useStyles = makeStyles({\n  loader: {\n    display: \"relative\",\n    backgroundColor: function backgroundColor(props) {\n      var secondsRemaining = props.secondsRemaining;\n\n      if (secondsRemaining <= MINUTE_LEFT_FOR_WARNING * 60) {\n        return \"#cc3300\";\n      }\n\n      return \"#209434\";\n    },\n    opacity: 1,\n    width: function width(props) {\n      var percentage = props.percentage;\n      return \"\".concat(percentage, \"%\");\n    }\n  }\n});\nvar Time = withStyles({\n  root: {\n    color: \"white\",\n    opacity: 1\n  }\n})(Typography);\nexport function getTimeRemainingInSeconds(start_time, duration) {\n  var totalDurationInSeconds = getSecondsFromDuration(duration);\n  var start = new Date(\"\".concat(start_time));\n  var now = new Date();\n  var end = new Date(\"\".concat(start_time));\n  end.setTime(start.getTime() + totalDurationInSeconds * 1000);\n  var secondsLeft = (end.getTime() - now.getTime()) / 1000;\n  return Math.floor(secondsLeft);\n}\n\nfunction getSecondsFromDuration(duration) {\n  var _duration$split = duration.split(\":\"),\n      _duration$split2 = _slicedToArray(_duration$split, 3),\n      hours = _duration$split2[0],\n      mins = _duration$split2[1],\n      seconds = _duration$split2[2];\n\n  var totalSeconds = 0;\n  totalSeconds += parseInt(hours) * 60 * 60;\n  totalSeconds += parseInt(mins) * 60;\n  totalSeconds += parseInt(seconds);\n  return totalSeconds;\n}\n\nfunction parseSecondsToClock(secondsRemaining) {\n  var mins = Math.floor(secondsRemaining / 60);\n  var seconds = Math.floor(secondsRemaining % 60);\n  return \"\".concat(mins < 10 ? \"0\".concat(mins) : mins, \":\").concat(seconds < 10 ? \"0\".concat(seconds) : seconds);\n}\n\nfunction getPercentage(start_time, duration) {\n  var totalDurationInSeconds = getSecondsFromDuration(duration);\n  var start = new Date(\"\".concat(start_time));\n  var now = new Date();\n  var end = new Date(\"\".concat(start_time));\n  end.setTime(start.getTime() + totalDurationInSeconds * 1000);\n  var percentage = (now.getTime() - start.getTime()) / (totalDurationInSeconds * 10);\n  return percentage + 1;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/QuizTest2/Timer/Timer.tsx"],"names":["Box","makeStyles","Typography","withStyles","React","useEffect","useState","Timer","start_time","duration","secondsRemaining","setSecondsRemaining","timeRemaining","setTimeRemaing","getPercentage","percentage","setPercentage","classes","useStyles","setInterval","getTimeRemainingInSeconds","parseSecondsToClock","loader","Container","root","position","top","zIndex","left","textAlign","right","backgroundColor","fontWeight","MINUTE_LEFT_FOR_WARNING","display","props","opacity","width","Time","color","totalDurationInSeconds","getSecondsFromDuration","start","Date","now","end","setTime","getTime","secondsLeft","Math","floor","split","hours","mins","seconds","totalSeconds","parseInt"],"mappings":"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","sourcesContent":["import { Box, makeStyles, Typography, withStyles } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\n\ninterface IProps {\n  start_time: string;\n  duration: string;\n  secondsRemaining: number;\n  setSecondsRemaining: Function;\n}\n\nconst Timer: React.FC<IProps> = ({\n  start_time,\n  duration,\n  secondsRemaining,\n  setSecondsRemaining,\n}) => {\n  const [timeRemaining, setTimeRemaing] = useState<string>(\"\");\n  const [percentage, setPercentage] = useState<number>(\n    getPercentage(start_time, duration)\n  );\n\n  const classes = useStyles({ percentage, secondsRemaining });\n\n  useEffect(() => {\n    setInterval(() => {\n      setSecondsRemaining(getTimeRemainingInSeconds(start_time, duration));\n    }, 500);\n  }, []);\n\n  useEffect(() => {\n    if (secondsRemaining <= 0) {\n      setTimeRemaing(\"Test Finished\");\n    } else {\n      setPercentage(getPercentage(start_time, duration));\n      setTimeRemaing(parseSecondsToClock(secondsRemaining));\n    }\n  }, [secondsRemaining]);\n\n  return (\n    <Container>\n      <div className={classes.loader}>\n        <Time variant=\"h6\">{`${timeRemaining}`}</Time>\n      </div>\n    </Container>\n  );\n};\n\nexport default Timer;\n\nconst Container = withStyles({\n  root: {\n    position: \"fixed\",\n    top: 100,\n    zIndex: 4000,\n    left: 0,\n    textAlign: \"center\",\n    right: 0,\n    backgroundColor: \"transparent\",\n    fontWeight: \"bold\",\n    [\"@media (max-width: 700px)\"]: {\n      top: 135,\n    },\n  },\n})(Box);\n\nconst MINUTE_LEFT_FOR_WARNING: number = 1;\n\ninterface IStyleProp {\n  percentage: number;\n  secondsRemaining: number;\n}\n\nconst useStyles = makeStyles({\n  loader: {\n    display: \"relative\",\n    backgroundColor: (props: IStyleProp) => {\n      const { secondsRemaining } = props;\n\n      if (secondsRemaining <= MINUTE_LEFT_FOR_WARNING * 60) {\n        return \"#cc3300\";\n      }\n\n      return \"#209434\";\n    },\n    opacity: 1,\n    width: (props: IStyleProp) => {\n      const { percentage } = props;\n\n      return `${percentage}%`;\n    },\n  },\n});\n\nconst Time = withStyles({\n  root: {\n    color: \"white\",\n    opacity: 1,\n  },\n})(Typography);\n\nexport function getTimeRemainingInSeconds(\n  start_time: string,\n  duration: string\n): number {\n  const totalDurationInSeconds: number = getSecondsFromDuration(duration);\n\n  const start = new Date(`${start_time}`);\n  const now = new Date();\n  const end = new Date(`${start_time}`);\n  end.setTime(start.getTime() + totalDurationInSeconds * 1000);\n\n  const secondsLeft: number = (end.getTime() - now.getTime()) / 1000;\n\n  return Math.floor(secondsLeft);\n}\n\nfunction getSecondsFromDuration(duration: string): number {\n  const [hours, mins, seconds] = duration.split(\":\");\n\n  let totalSeconds: number = 0;\n  totalSeconds += parseInt(hours) * 60 * 60;\n  totalSeconds += parseInt(mins) * 60;\n  totalSeconds += parseInt(seconds);\n\n  return totalSeconds;\n}\n\nfunction parseSecondsToClock(secondsRemaining: number): string {\n  const mins = Math.floor(secondsRemaining / 60);\n  const seconds = Math.floor(secondsRemaining % 60);\n\n  return `${mins < 10 ? `0${mins}` : mins}:${\n    seconds < 10 ? `0${seconds}` : seconds\n  }`;\n}\n\nfunction getPercentage(start_time: string, duration: string): number {\n  const totalDurationInSeconds: number = getSecondsFromDuration(duration);\n\n  const start = new Date(`${start_time}`);\n  const now = new Date();\n  const end = new Date(`${start_time}`);\n  end.setTime(start.getTime() + totalDurationInSeconds * 1000);\n\n  const percentage: number =\n    (now.getTime() - start.getTime()) / (totalDurationInSeconds * 10);\n\n  return percentage + 1;\n}\n"]},"metadata":{},"sourceType":"module"}