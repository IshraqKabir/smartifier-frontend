{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nexport default function useTextAnswer(question, answers, setAnswers) {\n  _s();\n\n  var _useState = useState(getTextValue()),\n      text = _useState[0],\n      setText = _useState[1];\n\n  function getTextValue() {\n    var _answers$$;\n\n    if (!answers || !answers[\"\".concat(question === null || question === void 0 ? void 0 : question.id)] || !answers[\"\".concat(question === null || question === void 0 ? void 0 : question.id)]) return \"\";\n    return (_answers$$ = answers[\"\".concat(question === null || question === void 0 ? void 0 : question.id)][0]) === null || _answers$$ === void 0 ? void 0 : _answers$$.text;\n  }\n\n  function handleChange(e) {\n    var _e$target, _question$options$, _e$target2;\n\n    setText(e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.value);\n    setAnswers(question === null || question === void 0 ? void 0 : (_question$options$ = question.options[0]) === null || _question$options$ === void 0 ? void 0 : _question$options$.id, question, e === null || e === void 0 ? void 0 : (_e$target2 = e.target) === null || _e$target2 === void 0 ? void 0 : _e$target2.value);\n  }\n\n  return {\n    text: text,\n    handleChange: handleChange\n  };\n}\n\n_s(useTextAnswer, \"o8iMR1cd222cNpxIsbxiB0qQCTw=\");","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/QuizTest/Questions/SingleQuestion/Question/Options/TextAnswer/useTextAnswer.tsx"],"names":["useState","useTextAnswer","question","answers","setAnswers","getTextValue","text","setText","id","handleChange","e","target","value","options"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,eAAe,SAASC,aAAT,CACbC,QADa,EAEbC,OAFa,EAGbC,UAHa,EAIb;AAAA;;AAAA,kBACwBJ,QAAQ,CAACK,YAAY,EAAb,CADhC;AAAA,MACOC,IADP;AAAA,MACaC,OADb;;AAGA,WAASF,YAAT,GAAgC;AAAA;;AAC9B,QAAI,CAACF,OAAD,IAAY,CAACA,OAAO,WAAID,QAAJ,aAAIA,QAAJ,uBAAIA,QAAQ,CAAEM,EAAd,EAApB,IAA2C,CAACL,OAAO,WAAID,QAAJ,aAAIA,QAAJ,uBAAIA,QAAQ,CAAEM,EAAd,EAAvD,EAA4E,OAAO,EAAP;AAE5E,yBAAOL,OAAO,WAAID,QAAJ,aAAIA,QAAJ,uBAAIA,QAAQ,CAAEM,EAAd,EAAP,CAA2B,CAA3B,CAAP,+CAAO,WAA+BF,IAAtC;AACD;;AAED,WAASG,YAAT,CAAsBC,CAAtB,EAA8B;AAAA;;AAC5BH,IAAAA,OAAO,CAACG,CAAD,aAACA,CAAD,oCAACA,CAAC,CAAEC,MAAJ,8CAAC,UAAWC,KAAZ,CAAP;AACAR,IAAAA,UAAU,CAACF,QAAD,aAACA,QAAD,6CAACA,QAAQ,CAAEW,OAAV,CAAkB,CAAlB,CAAD,uDAAC,mBAAsBL,EAAvB,EAA2BN,QAA3B,EAAqCQ,CAArC,aAAqCA,CAArC,qCAAqCA,CAAC,CAAEC,MAAxC,+CAAqC,WAAWC,KAAhD,CAAV;AACD;;AAED,SAAO;AAAEN,IAAAA,IAAI,EAAJA,IAAF;AAAQG,IAAAA,YAAY,EAAZA;AAAR,GAAP;AACD;;GAnBuBR,a","sourcesContent":["import { useState } from \"react\";\n\nexport default function useTextAnswer(\n  question: any,\n  answers: any,\n  setAnswers: (optionID: number, question: any, text?: string) => void\n) {\n  const [text, setText] = useState(getTextValue());\n\n  function getTextValue(): string {\n    if (!answers || !answers[`${question?.id}`] || !answers[`${question?.id}`]) return \"\";\n\n    return answers[`${question?.id}`][0]?.text;\n  }\n\n  function handleChange(e: any) {\n    setText(e?.target?.value);\n    setAnswers(question?.options[0]?.id, question, e?.target?.value);\n  }\n\n  return { text, handleChange };\n}\n"]},"metadata":{},"sourceType":"module"}