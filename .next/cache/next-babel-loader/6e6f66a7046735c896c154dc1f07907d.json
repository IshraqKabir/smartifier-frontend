{"ast":null,"code":"import { useRouter } from \"next/router\";\nimport { useEffect, useState } from \"react\";\nimport useLocalState from \"../../../../../../custom-hooks/useLocalState\";\nimport getQuizInfo from \"../../../../../../repository/QuizInfo/getQuizInfo\";\nexport default function useQuizInfo(quizId) {\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  const {\n    0: testStatus,\n    1: setTestStatus\n  } = useState(\"unknown\");\n  const {\n    0: quizInfo,\n    1: setQuizInfo\n  } = useState({});\n  const {\n    0: userInfo,\n    1: setUserInfo\n  } = useState({});\n  const [user] = useLocalState(\"user\", \"\");\n  const router = useRouter();\n  useEffect(() => {\n    fetchQuizInfo();\n  }, []);\n\n  const fetchQuizInfo = async () => {\n    setIsLoading(true);\n    const response = await getQuizInfo(quizId, user === null || user === void 0 ? void 0 : user.token);\n\n    if ((response === null || response === void 0 ? void 0 : response.test_status) === \"ongoing\") {\n      router.push(`/test/quiz/${quizId}`);\n      return;\n    }\n\n    setIsLoading(false);\n\n    const _testStatus = response === null || response === void 0 ? void 0 : response.test_status;\n\n    if (_testStatus !== \"new_test\" && _testStatus !== \"retake\" && _testStatus !== \"highest_attempt_count_reached\" && _testStatus !== \"ongoing\") {\n      setTestStatus(\"unknown\");\n      return;\n    }\n\n    setTestStatus(response === null || response === void 0 ? void 0 : response.test_status);\n    setQuizInfo(response === null || response === void 0 ? void 0 : response.quiz_info);\n    setUserInfo(response === null || response === void 0 ? void 0 : response.user_info);\n    console.log(response);\n  };\n\n  return {\n    testStatus,\n    quizInfo,\n    userInfo,\n    isLoading\n  };\n}","map":null,"metadata":{},"sourceType":"module"}