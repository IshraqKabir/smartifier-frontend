{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ishraqkabir/workspace/smartifier-frontend/Components/Question/OptionContainer/OptionContainer.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { cloneElement, useContext, useEffect, useState } from \"react\";\nimport { AnswersContext } from \"../Question\";\n\nvar OptionContainer = function OptionContainer(props) {\n  _s();\n\n  var _useContext = useContext(AnswersContext),\n      answers = _useContext.answers,\n      setAnswers = _useContext.setAnswers,\n      getIsChecked = _useContext.getIsChecked;\n\n  var _useState = useState(getIsChecked(props.option.id)),\n      isChecked = _useState[0],\n      setIsChecked = _useState[1];\n\n  useEffect(function () {\n    console.log(\"\".concat(props.option.title, \":\").concat(props.option.id, \" is \").concat(getIsChecked(props.option.id) ? \"checked\" : \"unchecked\"));\n    setIsChecked(getIsChecked(props.option.id));\n  }, [answers]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: function onClick() {\n      return setAnswers(props.option.id);\n    },\n    children: /*#__PURE__*/cloneElement(props.children, props)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(OptionContainer, \"n5UR+5e2HET8tzmx4uM/XCRcUPw=\");\n\n_c = OptionContainer;\nexport default OptionContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"OptionContainer\");","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/Question/OptionContainer/OptionContainer.tsx"],"names":["cloneElement","useContext","useEffect","useState","AnswersContext","OptionContainer","props","answers","setAnswers","getIsChecked","option","id","isChecked","setIsChecked","console","log","title","children"],"mappings":";;;;;;AAAA,SAASA,YAAT,EAAiCC,UAAjC,EAA6CC,SAA7C,EAAwDC,QAAxD,QAAwE,OAAxE;AACA,SAASC,cAAT,QAA+B,aAA/B;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAAA;;AAAA,oBACaL,UAAU,CAACG,cAAD,CADvB;AAAA,MACzBG,OADyB,eACzBA,OADyB;AAAA,MAChBC,UADgB,eAChBA,UADgB;AAAA,MACJC,YADI,eACJA,YADI;;AAAA,kBAGCN,QAAQ,CACxCM,YAAY,CAACH,KAAK,CAACI,MAAN,CAAaC,EAAd,CAD4B,CAHT;AAAA,MAG1BC,SAH0B;AAAA,MAGfC,YAHe;;AAOjCX,EAAAA,SAAS,CAAC,YAAM;AACdY,IAAAA,OAAO,CAACC,GAAR,WACKT,KAAK,CAACI,MAAN,CAAaM,KADlB,cAC2BV,KAAK,CAACI,MAAN,CAAaC,EADxC,iBAEIF,YAAY,CAACH,KAAK,CAACI,MAAN,CAAaC,EAAd,CAAZ,GAAgC,SAAhC,GAA4C,WAFhD;AAKAE,IAAAA,YAAY,CAACJ,YAAY,CAACH,KAAK,CAACI,MAAN,CAAaC,EAAd,CAAb,CAAZ;AACD,GAPQ,EAON,CAACJ,OAAD,CAPM,CAAT;AASA,sBACE;AAAK,IAAA,OAAO,EAAE;AAAA,aAAMC,UAAU,CAACF,KAAK,CAACI,MAAN,CAAaC,EAAd,CAAhB;AAAA,KAAd;AAAA,2BACGX,YAAY,CAACM,KAAK,CAACW,QAAP,EAAiBX,KAAjB;AADf;AAAA;AAAA;AAAA;AAAA,WADF;AAKD,CArBD;;GAAMD,e;;KAAAA,e;AAuBN,eAAeA,eAAf","sourcesContent":["import { cloneElement, Fragment, useContext, useEffect, useState } from \"react\";\nimport { AnswersContext } from \"../Question\";\n\nconst OptionContainer = (props) => {\n  const { answers, setAnswers, getIsChecked } = useContext(AnswersContext);\n\n  const [isChecked, setIsChecked] = useState<boolean>(\n    getIsChecked(props.option.id)\n  );\n\n  useEffect(() => {\n    console.log(\n      `${props.option.title}:${props.option.id} is ${\n        getIsChecked(props.option.id) ? \"checked\" : \"unchecked\"\n      }`\n    );\n    setIsChecked(getIsChecked(props.option.id));\n  }, [answers]);\n\n  return (\n    <div onClick={() => setAnswers(props.option.id)}>\n      {cloneElement(props.children, props)}\n    </div>\n  );\n};\n\nexport default OptionContainer;\n"]},"metadata":{},"sourceType":"module"}