{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ishraqkabir/workspace/smartifier-frontend/Components/QuizTest/CheckTestStatus/CheckTestStatus.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Box, CircularProgress, withStyles } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport useLocalState from \"../../../custom-hooks/useLocalState\";\nimport { local_backend_url } from \"../../../url\";\nimport Topbar from \"../../Layout/Topbar/Topbar\";\nimport QuizTest from \"../QuizTest\";\nimport RetakePrompt from \"./RetakePrompt/RetakePrompt\";\n\nvar CheckTestStatus = function CheckTestStatus(_ref) {\n  _s();\n\n  var quizID = _ref.quizID;\n\n  var _useState = useState(\"unknown\"),\n      status = _useState[0],\n      setStatus = _useState[1];\n\n  var _useState2 = useState(0),\n      percentage = _useState2[0],\n      setPercentage = _useState2[1];\n\n  var _useState3 = useState(null),\n      quiz = _useState3[0],\n      setQuiz = _useState3[1];\n\n  var _useState4 = useState(true),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  var _useLocalState = useLocalState(\"user\", \"\"),\n      _useLocalState2 = _slicedToArray(_useLocalState, 1),\n      user = _useLocalState2[0];\n\n  var _useState5 = useState(false),\n      showTest = _useState5[0],\n      _setShowTest = _useState5[1];\n\n  useEffect(function () {\n    axios.get(\"\".concat(local_backend_url, \"/api/quiz-test/\").concat(quizID, \"/check-status\"), {\n      headers: {\n        Accept: \"Application/json\",\n        Authorization: \"Bearer \".concat(user.token)\n      }\n    }).then(function (response) {\n      setStatus(response.data.status);\n\n      if (response.data.status == \"retake\") {\n        setPercentage(response.data.percentage);\n        setQuiz(response.data.quiz);\n      } else if (response.data.status == \"ongoing\") {\n        setStatus(\"ongoing\");\n\n        _setShowTest(true);\n      } else if (response.data.status == \"new_test\") {\n        setStatus(\"new_test\");\n\n        _setShowTest(true);\n      }\n\n      setIsLoading(false);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Topbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [isLoading && /*#__PURE__*/_jsxDEV(LoadingContainer, {\n        children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n          color: \"secondary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, _this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, _this), status == \"unknown\" && !isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Some Error Occured. Please Refresh or Go Back.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, _this), status == \"retake\" && !isLoading && !showTest && /*#__PURE__*/_jsxDEV(RetakePrompt, {\n        quizID: quizID,\n        percentage: percentage,\n        quiz: quiz,\n        setShowTest: function setShowTest() {\n          return _setShowTest(true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, _this), showTest && !isLoading && /*#__PURE__*/_jsxDEV(QuizTest, {\n        id: quizID,\n        status: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 36\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(CheckTestStatus, \"0fh5aGVCE7AfPEy09UeGddSfP24=\", false, function () {\n  return [useLocalState];\n});\n\n_c = CheckTestStatus;\nexport default CheckTestStatus;\nvar Container = withStyles({\n  root: {\n    width: \"100vw\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    backgroundColor: \"#5D00A5\",\n    minHeight: \"100vh\",\n    color: \"white\"\n  }\n})(Box);\nvar LoadingContainer = withStyles({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: \"100%\"\n  }\n})(Box);\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckTestStatus\");","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/QuizTest/CheckTestStatus/CheckTestStatus.tsx"],"names":["Box","CircularProgress","withStyles","axios","React","useEffect","useState","useLocalState","local_backend_url","Topbar","QuizTest","RetakePrompt","CheckTestStatus","quizID","status","setStatus","percentage","setPercentage","quiz","setQuiz","isLoading","setIsLoading","user","showTest","setShowTest","get","headers","Accept","Authorization","token","then","response","data","Container","root","width","display","flexDirection","alignItems","backgroundColor","minHeight","color","LoadingContainer","justifyContent"],"mappings":"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","sourcesContent":["import { Box, CircularProgress, withStyles } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport useLocalState from \"../../../custom-hooks/useLocalState\";\nimport IQuiz from \"../../../Models/IQuiz\";\nimport { local_backend_url } from \"../../../url\";\nimport Topbar from \"../../Layout/Topbar/Topbar\";\nimport QuizTest from \"../QuizTest\";\nimport RetakePrompt from \"./RetakePrompt/RetakePrompt\";\n\ninterface IProps {\n  quizID: number;\n}\n\nconst CheckTestStatus: React.FC<IProps> = ({ quizID }) => {\n  const [status, setStatus] = useState<\n    \"ongoing\" | \"retake\" | \"new_test\" | \"unknown\"\n  >(\"unknown\");\n  const [percentage, setPercentage] = useState<Number>(0);\n  const [quiz, setQuiz] = useState<IQuiz>(null);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [user] = useLocalState(\"user\", \"\");\n\n  const [showTest, setShowTest] = useState<boolean>(false);\n\n  useEffect(() => {\n    axios\n      .get(`${local_backend_url}/api/quiz-test/${quizID}/check-status`, {\n        headers: {\n          Accept: \"Application/json\",\n          Authorization: `Bearer ${user.token}`,\n        },\n      })\n      .then((response) => {\n        setStatus(response.data.status);\n\n        if (response.data.status == \"retake\") {\n          setPercentage(response.data.percentage);\n          setQuiz(response.data.quiz);\n        } else if (response.data.status == \"ongoing\") {\n          setStatus(\"ongoing\");\n          setShowTest(true);\n        } else if (response.data.status == \"new_test\") {\n          setStatus(\"new_test\");\n          setShowTest(true);\n        }\n\n        setIsLoading(false);\n      });\n  }, []);\n\n  return (\n    <>\n      <Topbar />\n      <Container>\n        {isLoading && (\n          <LoadingContainer>\n            <CircularProgress color=\"secondary\" />{\" \"}\n          </LoadingContainer>\n        )}\n        {status == \"unknown\" && !isLoading && (\n          <p>Some Error Occured. Please Refresh or Go Back.</p>\n        )}\n        {status == \"retake\" && !isLoading && !showTest && (\n          <RetakePrompt\n            quizID={quizID}\n            percentage={percentage}\n            quiz={quiz}\n            setShowTest={() => setShowTest(true)}\n          />\n        )}\n\n        {showTest && !isLoading && <QuizTest id={quizID} status={status} />}\n      </Container>\n    </>\n  );\n};\n\nexport default CheckTestStatus;\n\nconst Container = withStyles({\n  root: {\n    width: \"100vw\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    backgroundColor: \"#5D00A5\",\n    minHeight: \"100vh\",\n    color: \"white\",\n  },\n})(Box);\n\nconst LoadingContainer = withStyles({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: \"100%\",\n  },\n})(Box);\n"]},"metadata":{},"sourceType":"module"}