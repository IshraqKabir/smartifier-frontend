{"ast":null,"code":"import _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ishraqkabir/workspace/smartifier-frontend/Components/QuizTest/Questions/SingleQuestion/Question/Options/Options.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, withStyles } from \"@material-ui/core\";\nimport { useContext } from \"react\";\nimport { QuestionContext } from \"../../SingleQuestion\";\nimport Option from \"./Option/Option\";\nexport default function Options(_ref) {\n  _s();\n\n  var _this = this;\n\n  _objectDestructuringEmpty(_ref);\n\n  var _useContext = useContext(QuestionContext),\n      question = _useContext.question;\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [(question === null || question === void 0 ? void 0 : question.options) && (question === null || question === void 0 ? void 0 : question.answer_type) != \"short_paragraph\" && (question === null || question === void 0 ? void 0 : question.options.map(function (option) {\n      return /*#__PURE__*/_jsxDEV(Option, {\n        option: option\n      }, option === null || option === void 0 ? void 0 : option.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 18\n      }, _this);\n    })), (question === null || question === void 0 ? void 0 : question.answer_type) != \"short_paragraph\" && (question === null || question === void 0 ? void 0 : question.options.map(function (option) {\n      return /*#__PURE__*/_jsxDEV(Option, {\n        option: option\n      }, option === null || option === void 0 ? void 0 : option.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 18\n      }, _this);\n    }))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Options, \"ufudCmQtCXPPM2sPfHbjInvAJtw=\");\n\n_c = Options;\nvar Container = withStyles({\n  root: {\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    backgroundColor: \"#eef3f7\",\n    marginTop: \"0.5rem\",\n    padding: \"0 0.5rem\"\n  }\n})(Box);\n\nvar _c;\n\n$RefreshReg$(_c, \"Options\");","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/QuizTest/Questions/SingleQuestion/Question/Options/Options.tsx"],"names":["Box","withStyles","useContext","QuestionContext","Option","Options","question","options","answer_type","map","option","id","Container","root","width","display","flexDirection","backgroundColor","marginTop","padding"],"mappings":";;;;;;AAAA,SAASA,GAAT,EAAcC,UAAd,QAAgC,mBAAhC;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,eAAT,QAAgC,sBAAhC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAIA,eAAe,SAASC,OAAT,OAA6B;AAAA;;AAAA;;AAAA;;AAAA,oBACrBH,UAAU,CAACC,eAAD,CADW;AAAA,MAClCG,QADkC,eAClCA,QADkC;;AAG1C,sBACE,QAAC,SAAD;AAAA,eACG,CAAAA,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEC,OAAV,KACC,CAAAD,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEE,WAAV,KAAyB,iBAD1B,KAECF,QAFD,aAECA,QAFD,uBAECA,QAAQ,CAAEC,OAAV,CAAkBE,GAAlB,CAAsB,UAACC,MAAD,EAAY;AAChC,0BAAO,QAAC,MAAD;AAAyB,QAAA,MAAM,EAAEA;AAAjC,SAAaA,MAAb,aAAaA,MAAb,uBAAaA,MAAM,CAAEC,EAArB;AAAA;AAAA;AAAA;AAAA,eAAP;AACD,KAFD,CAFD,CADH,EAOI,CAAAL,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEE,WAAV,KAAyB,iBAAzB,KACAF,QADA,aACAA,QADA,uBACAA,QAAQ,CAAEC,OAAV,CAAkBE,GAAlB,CAAsB,UAACC,MAAD,EAAY;AAChC,0BAAO,QAAC,MAAD;AAAyB,QAAA,MAAM,EAAEA;AAAjC,SAAaA,MAAb,aAAaA,MAAb,uBAAaA,MAAM,CAAEC,EAArB;AAAA;AAAA;AAAA;AAAA,eAAP;AACD,KAFD,CADA,CAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAjBuBN,O;;KAAAA,O;AAmBxB,IAAMO,SAAS,GAAGX,UAAU,CAAC;AAC3BY,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,MADH;AAEJC,IAAAA,OAAO,EAAE,MAFL;AAGJC,IAAAA,aAAa,EAAE,QAHX;AAIJC,IAAAA,eAAe,EAAE,SAJb;AAKJC,IAAAA,SAAS,EAAE,QALP;AAMJC,IAAAA,OAAO,EAAE;AANL;AADqB,CAAD,CAAV,CASfnB,GATe,CAAlB","sourcesContent":["import { Box, withStyles } from \"@material-ui/core\";\nimport { useContext } from \"react\";\nimport { QuestionContext } from \"../../SingleQuestion\";\nimport Option from \"./Option/Option\";\n\ninterface IProps {}\n\nexport default function Options({}: IProps) {\n  const { question } = useContext(QuestionContext);\n\n  return (\n    <Container>\n      {question?.options &&\n        question?.answer_type != \"short_paragraph\" &&\n        question?.options.map((option) => {\n          return <Option key={option?.id} option={option} />;\n        })}\n      {\n        question?.answer_type != \"short_paragraph\" &&\n        question?.options.map((option) => {\n          return <Option key={option?.id} option={option} />;\n        })}\n    </Container>\n  );\n}\n\nconst Container = withStyles({\n  root: {\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    backgroundColor: \"#eef3f7\",\n    marginTop: \"0.5rem\",\n    padding: \"0 0.5rem\",\n  },\n})(Box);\n"]},"metadata":{},"sourceType":"module"}