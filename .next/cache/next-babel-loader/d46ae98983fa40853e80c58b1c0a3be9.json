{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ishraqkabir/workspace/smartifier-frontend/Components/Questions/Questions.tsx\",\n    _this = this,\n    _root;\n\nimport React, { createContext } from \"react\";\nimport Question from \"../Question/Question\";\nimport { Box, withStyles } from \"@material-ui/core\";\nexport var QuestionContext = /*#__PURE__*/createContext(null);\n\nvar Questions = function Questions(_ref) {\n  var questions = _ref.questions;\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: questions && questions.map(function (question, index) {\n      return /*#__PURE__*/_jsxDEV(QuestionContext.Provider, {\n        value: {\n          questionID: question.id,\n          answerType: question.answer_type,\n          question: question\n        },\n        children: /*#__PURE__*/_jsxDEV(Question, {\n          question: question,\n          position: index + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }, _this)\n      }, question.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = Questions;\nexport default Questions;\nvar Container = withStyles({\n  root: (_root = {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    width: \"100%\",\n    padding: \"2rem 4rem\"\n  }, _defineProperty(_root, \"@media (max-width: 1000px)\", {\n    padding: \"2rem 2rem\"\n  }), _defineProperty(_root, \"@media (max-width: 800px)\", {\n    padding: \"2rem 1rem\"\n  }), _root)\n})(Box);\n\nvar _c;\n\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/Questions/Questions.tsx"],"names":["React","createContext","Question","Box","withStyles","QuestionContext","Questions","questions","map","question","index","questionID","id","answerType","answer_type","Container","root","display","flexDirection","alignItems","width","padding"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AAEA,OAAOC,QAAP,MAAqB,sBAArB;AAEA,SAASC,GAAT,EAAcC,UAAd,QAAgC,mBAAhC;AAMA,OAAO,IAAMC,eAAe,gBAAGJ,aAAa,CAAC,IAAD,CAArC;;AAEP,IAAMK,SAA2B,GAAG,SAA9BA,SAA8B,OAAmB;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;AACrD,sBACE,QAAC,SAAD;AAAA,cACGA,SAAS,IACRA,SAAS,CAACC,GAAV,CAAc,UAACC,QAAD,EAAWC,KAAX,EAAqB;AACjC,0BACE,QAAC,eAAD,CAAiB,QAAjB;AACE,QAAA,KAAK,EAAE;AACLC,UAAAA,UAAU,EAAEF,QAAQ,CAACG,EADhB;AAELC,UAAAA,UAAU,EAAEJ,QAAQ,CAACK,WAFhB;AAGLL,UAAAA,QAAQ,EAAEA;AAHL,SADT;AAAA,+BAQE,QAAC,QAAD;AAAU,UAAA,QAAQ,EAAEA,QAApB;AAA8B,UAAA,QAAQ,EAAEC,KAAK,GAAG;AAAhD;AAAA;AAAA;AAAA;AAAA;AARF,SAMOD,QAAQ,CAACG,EANhB;AAAA;AAAA;AAAA;AAAA,eADF;AAYD,KAbD;AAFJ;AAAA;AAAA;AAAA;AAAA,WADF;AAmBD,CApBD;;KAAMN,S;AAsBN,eAAeA,SAAf;AAEA,IAAMS,SAAS,GAAGX,UAAU,CAAC;AAC3BY,EAAAA,IAAI;AACFC,IAAAA,OAAO,EAAE,MADP;AAEFC,IAAAA,aAAa,EAAE,QAFb;AAGFC,IAAAA,UAAU,EAAE,QAHV;AAIFC,IAAAA,KAAK,EAAE,MAJL;AAKFC,IAAAA,OAAO,EAAE;AALP,4BAMD,4BANC,EAM8B;AAC9BA,IAAAA,OAAO,EAAE;AADqB,GAN9B,0BASD,2BATC,EAS6B;AAC7BA,IAAAA,OAAO,EAAE;AADoB,GAT7B;AADuB,CAAD,CAAV,CAcflB,GAde,CAAlB","sourcesContent":["import React, { createContext } from \"react\";\n\nimport Question from \"../Question/Question\";\nimport IQuestion from \"../../Models/IQuestion\";\nimport { Box, withStyles } from \"@material-ui/core\";\n\ninterface IProps {\n  questions: IQuestion[];\n}\n\nexport const QuestionContext = createContext(null);\n\nconst Questions: React.FC<IProps> = ({ questions }) => {\n  return (\n    <Container>\n      {questions &&\n        questions.map((question, index) => {\n          return (\n            <QuestionContext.Provider\n              value={{\n                questionID: question.id,\n                answerType: question.answer_type,\n                question: question\n              }}\n              key={question.id}\n            >\n              <Question question={question} position={index + 1} />\n            </QuestionContext.Provider>\n          );\n        })}\n    </Container>\n  );\n};\n\nexport default Questions;\n\nconst Container = withStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    width: \"100%\",\n    padding: \"2rem 4rem\",\n    [\"@media (max-width: 1000px)\"]: {\n      padding: \"2rem 2rem\",\n    },\n    [\"@media (max-width: 800px)\"]: {\n      padding: \"2rem 1rem\",\n    },\n  },\n})(Box);\n"]},"metadata":{},"sourceType":"module"}