{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ishraqkabir/workspace/smartifier-frontend/Components/Post/SinglePost/CommentsSection/Comment/RepliesSection/RepliesSection.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Box, withStyles } from \"@material-ui/core\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { CommentContext } from \"../Comment\";\nimport Reply from \"./Reply/Reply\";\nimport ReplyBox from \"./ReplyBox/ReplyBox\";\n\nconst RepliesSection = ({}) => {\n  const {\n    comment,\n    setComment,\n    setRepliesCount\n  } = useContext(CommentContext);\n  const {\n    0: replies,\n    1: setReplies\n  } = useState((comment === null || comment === void 0 ? void 0 : comment.replies) ? comment === null || comment === void 0 ? void 0 : comment.replies : []);\n  useEffect(() => {\n    setComment(state => {\n      const comment = _objectSpread({}, state);\n\n      comment.replies = [];\n      comment.replies = [...replies];\n      return comment;\n    });\n    setRepliesCount();\n  }, [replies]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(ReplyBox, {\n      commentId: comment === null || comment === void 0 ? void 0 : comment.id,\n      setReplies: setReplies,\n      setComment: setComment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), replies && replies.map(reply => {\n      return /*#__PURE__*/_jsxDEV(Reply, {\n        reply: reply\n      }, reply.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 18\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\nexport default RepliesSection;\nconst Container = withStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    borderBottom: \"1px solid grey\",\n    paddingBottom: \"0.5rem\",\n    paddingLeft: \"5rem\"\n  }\n})(Box);","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/Post/SinglePost/CommentsSection/Comment/RepliesSection/RepliesSection.tsx"],"names":["Box","withStyles","React","useContext","useEffect","useState","CommentContext","Reply","ReplyBox","RepliesSection","comment","setComment","setRepliesCount","replies","setReplies","state","id","map","reply","Container","root","display","flexDirection","borderBottom","paddingBottom","paddingLeft"],"mappings":";;;;;;;;;AAAA,SAASA,GAAT,EAAcC,UAAd,QAAgC,mBAAhC;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AAEA,SAASC,cAAT,QAA+B,YAA/B;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,QAAP,MAAqB,qBAArB;;AAIA,MAAMC,cAAgC,GAAG,CAAC,EAAD,KAAQ;AAC/C,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,UAAX;AAAuBC,IAAAA;AAAvB,MAA2CT,UAAU,CAACG,cAAD,CAA3D;AACA,QAAM;AAAA,OAACO,OAAD;AAAA,OAAUC;AAAV,MAAwBT,QAAQ,CACpC,CAAAK,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEG,OAAT,IAAmBH,OAAnB,aAAmBA,OAAnB,uBAAmBA,OAAO,CAAEG,OAA5B,GAAsC,EADF,CAAtC;AAIAT,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,UAAU,CAAEI,KAAD,IAAW;AACpB,YAAML,OAAO,qBAAQK,KAAR,CAAb;;AACAL,MAAAA,OAAO,CAACG,OAAR,GAAkB,EAAlB;AACAH,MAAAA,OAAO,CAACG,OAAR,GAAkB,CAAC,GAAGA,OAAJ,CAAlB;AACA,aAAOH,OAAP;AACD,KALS,CAAV;AAOAE,IAAAA,eAAe;AAChB,GATQ,EASN,CAACC,OAAD,CATM,CAAT;AAWA,sBACE,QAAC,SAAD;AAAA,4BACE,QAAC,QAAD;AACE,MAAA,SAAS,EAAEH,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEM,EADtB;AAEE,MAAA,UAAU,EAAEF,UAFd;AAGE,MAAA,UAAU,EAAEH;AAHd;AAAA;AAAA;AAAA;AAAA,YADF,EAMGE,OAAO,IACNA,OAAO,CAACI,GAAR,CAAaC,KAAD,IAA8B;AACxC,0BAAO,QAAC,KAAD;AAAsB,QAAA,KAAK,EAAEA;AAA7B,SAAYA,KAAK,CAACF,EAAlB;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,CAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CA9BD;;AAgCA,eAAeP,cAAf;AAEA,MAAMU,SAAS,GAAGlB,UAAU,CAAC;AAC3BmB,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,aAAa,EAAE,QAFX;AAGJC,IAAAA,YAAY,EAAE,gBAHV;AAIJC,IAAAA,aAAa,EAAE,QAJX;AAKJC,IAAAA,WAAW,EAAE;AALT;AADqB,CAAD,CAAV,CAQfzB,GARe,CAAlB","sourcesContent":["import { Box, withStyles } from \"@material-ui/core\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport IPostCommentReply from \"../../../../../../Models/IPostCommentReply\";\nimport { CommentContext } from \"../Comment\";\nimport Reply from \"./Reply/Reply\";\nimport ReplyBox from \"./ReplyBox/ReplyBox\";\n\ninterface IProps {}\n\nconst RepliesSection: React.FC<IProps> = ({}) => {\n  const { comment, setComment, setRepliesCount } = useContext(CommentContext);\n  const [replies, setReplies] = useState<IPostCommentReply[] | []>(\n    comment?.replies ? comment?.replies : []\n  );\n\n  useEffect(() => {\n    setComment((state) => {\n      const comment = { ...state };\n      comment.replies = [];\n      comment.replies = [...replies];\n      return comment;\n    });\n\n    setRepliesCount()\n  }, [replies]);\n\n  return (\n    <Container>\n      <ReplyBox\n        commentId={comment?.id}\n        setReplies={setReplies}\n        setComment={setComment}\n      />\n      {replies &&\n        replies.map((reply: IPostCommentReply) => {\n          return <Reply key={reply.id} reply={reply} />;\n        })}\n    </Container>\n  );\n};\n\nexport default RepliesSection;\n\nconst Container = withStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    borderBottom: \"1px solid grey\",\n    paddingBottom: \"0.5rem\",\n    paddingLeft: \"5rem\",\n  },\n})(Box);\n"]},"metadata":{},"sourceType":"module"}