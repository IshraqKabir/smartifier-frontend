{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport useLocalState from \"../../../custom-hooks/useLocalState\";\nimport getBadgeImageLink from \"../../../repository/QuizTest/getBadgeImageLink\";\nexport default function useBadge(testId) {\n  _s();\n\n  var _useLocalState = useLocalState(\"user\", \"\"),\n      _useLocalState2 = _slicedToArray(_useLocalState, 1),\n      user = _useLocalState2[0];\n\n  var _useState = useState(false),\n      isLoading = _useState[0],\n      setIsLoading = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      badgeImageLink = _useState2[0],\n      setBadgeImageLink = _useState2[1];\n\n  useEffect(function () {\n    if (user) fetchBadgeImageLink();\n  }, []);\n\n  function fetchBadgeImageLink() {\n    return _fetchBadgeImageLink.apply(this, arguments);\n  }\n\n  function _fetchBadgeImageLink() {\n    _fetchBadgeImageLink = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setIsLoading(true);\n              _context.next = 3;\n              return getBadgeImageLink(testId, user === null || user === void 0 ? void 0 : user.token);\n\n            case 3:\n              response = _context.sent;\n              console.log(response);\n              setIsLoading(false);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _fetchBadgeImageLink.apply(this, arguments);\n  }\n\n  return {\n    isLoading: isLoading,\n    badgeImageLink: badgeImageLink\n  };\n}\n\n_s(useBadge, \"bS4299E+UPRXoWDxBBrALHU2y7Y=\", false, function () {\n  return [useLocalState];\n});","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/QuizTestResult/Badge/useBadge.tsx"],"names":["useEffect","useState","useLocalState","getBadgeImageLink","useBadge","testId","user","isLoading","setIsLoading","badgeImageLink","setBadgeImageLink","fetchBadgeImageLink","token","response","console","log"],"mappings":";;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AACA,OAAOC,iBAAP,MAA8B,gDAA9B;AAEA,eAAe,SAASC,QAAT,CAAkBC,MAAlB,EAAkC;AAAA;;AAAA,uBAChCH,aAAa,CAAC,MAAD,EAAS,EAAT,CADmB;AAAA;AAAA,MACxCI,IADwC;;AAAA,kBAEbL,QAAQ,CAAU,KAAV,CAFK;AAAA,MAExCM,SAFwC;AAAA,MAE7BC,YAF6B;;AAAA,mBAGHP,QAAQ,CAAS,EAAT,CAHL;AAAA,MAGxCQ,cAHwC;AAAA,MAGxBC,iBAHwB;;AAK/CV,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIM,IAAJ,EAAUK,mBAAmB;AAC9B,GAFQ,EAEN,EAFM,CAAT;;AAL+C,WAShCA,mBATgC;AAAA;AAAA;;AAAA;AAAA,oFAS/C;AAAA;AAAA;AAAA;AAAA;AAAA;AACEH,cAAAA,YAAY,CAAC,IAAD,CAAZ;AADF;AAAA,qBAEyBL,iBAAiB,CAACE,MAAD,EAASC,IAAT,aAASA,IAAT,uBAASA,IAAI,CAAEM,KAAf,CAF1C;;AAAA;AAEQC,cAAAA,QAFR;AAGEC,cAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAL,cAAAA,YAAY,CAAC,KAAD,CAAZ;;AAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAT+C;AAAA;AAAA;;AAkB/C,SAAO;AACLD,IAAAA,SAAS,EAATA,SADK;AAELE,IAAAA,cAAc,EAAdA;AAFK,GAAP;AAID;;GAtBuBL,Q;UACPF,a","sourcesContent":["import { useEffect, useState } from \"react\";\nimport useLocalState from \"../../../custom-hooks/useLocalState\";\nimport getBadgeImageLink from \"../../../repository/QuizTest/getBadgeImageLink\";\n\nexport default function useBadge(testId: number) {\n  const [user] = useLocalState(\"user\", \"\");\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [badgeImageLink, setBadgeImageLink] = useState<string>(\"\");\n\n  useEffect(() => {\n    if (user) fetchBadgeImageLink();\n  }, []);\n\n  async function fetchBadgeImageLink() {\n    setIsLoading(true);\n    const response = await getBadgeImageLink(testId, user?.token);\n    console.log(response);\n    setIsLoading(false);\n\n    \n  }\n\n  return {\n    isLoading,\n    badgeImageLink,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}