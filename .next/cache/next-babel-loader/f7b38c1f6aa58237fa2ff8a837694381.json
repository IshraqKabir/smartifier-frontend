{"ast":null,"code":"import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport useLocalState from \"../../custom-hooks/useLocalState\";\nimport { local_backend_url } from \"../../url\";\nexport default function useStartTest(id, status) {\n  const [user] = useLocalState(\"user\", \"\");\n  const {\n    0: test,\n    1: setTest\n  } = useState();\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(true);\n  const {\n    0: isError,\n    1: setIsError\n  } = useState(true);\n  useEffect(() => {\n    if (status == \"unknown\") return;\n    const url = `${local_backend_url}/api/quiz-test/${status == \"new_test\" ? \"start\" : status == \"ongoing\" ? \"resume\" : \"retake\"}`;\n    axios.post(url, {\n      quiz_id: id\n    }, {\n      headers: {\n        Accept: \"Application/json\",\n        Authorization: `Bearer ${user.token}`\n      }\n    }).then(response => {\n      setTest(response.data);\n      setIsLoading(false);\n      setIsError(false);\n    }).catch(() => {\n      setIsLoading(false);\n      setIsError(true);\n    });\n  }, []);\n  return {\n    test,\n    isLoading,\n    isError\n  };\n}","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/QuizTest/useStartTest.ts"],"names":["axios","useEffect","useState","useLocalState","local_backend_url","useStartTest","id","status","user","test","setTest","isLoading","setIsLoading","isError","setIsError","url","post","quiz_id","headers","Accept","Authorization","token","then","response","data","catch"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AAEA,SAASC,iBAAT,QAAkC,WAAlC;AAEA,eAAe,SAASC,YAAT,CACbC,EADa,EAEbC,MAFa,EAGb;AACA,QAAM,CAACC,IAAD,IAASL,aAAa,CAAC,MAAD,EAAS,EAAT,CAA5B;AACA,QAAM;AAAA,OAACM,IAAD;AAAA,OAAOC;AAAP,MAAkBR,QAAQ,EAAhC;AACA,QAAM;AAAA,OAACS,SAAD;AAAA,OAAYC;AAAZ,MAA4BV,QAAQ,CAAU,IAAV,CAA1C;AACA,QAAM;AAAA,OAACW,OAAD;AAAA,OAAUC;AAAV,MAAwBZ,QAAQ,CAAU,IAAV,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,MAAM,IAAI,SAAd,EAAyB;AAEzB,UAAMQ,GAAW,GAAI,GAAEX,iBAAkB,kBACvCG,MAAM,IAAI,UAAV,GAAuB,OAAvB,GAAiCA,MAAM,IAAI,SAAV,GAAsB,QAAtB,GAAiC,QACnE,EAFD;AAIAP,IAAAA,KAAK,CACFgB,IADH,CAEID,GAFJ,EAGI;AACEE,MAAAA,OAAO,EAAEX;AADX,KAHJ,EAMI;AACEY,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEPC,QAAAA,aAAa,EAAG,UAASZ,IAAI,CAACa,KAAM;AAF7B;AADX,KANJ,EAaGC,IAbH,CAaSC,QAAD,IAAc;AAClBb,MAAAA,OAAO,CAACa,QAAQ,CAACC,IAAV,CAAP;AACAZ,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAjBH,EAkBGW,KAlBH,CAkBS,MAAM;AACXb,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD,KArBH;AAsBD,GA7BQ,EA6BN,EA7BM,CAAT;AA+BA,SAAO;AAAEL,IAAAA,IAAF;AAAQE,IAAAA,SAAR;AAAmBE,IAAAA;AAAnB,GAAP;AACD","sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport useLocalState from \"../../custom-hooks/useLocalState\";\nimport ITest from \"../../Models/ITest\";\nimport { local_backend_url } from \"../../url\";\n\nexport default function useStartTest(\n  id: number,\n  status: \"retake\" | \"ongoing\" | \"new_test\" | \"unknown\"\n) {\n  const [user] = useLocalState(\"user\", \"\");\n  const [test, setTest] = useState<ITest>();\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [isError, setIsError] = useState<boolean>(true);\n\n  useEffect(() => {\n    if (status == \"unknown\") return;\n\n    const url: string = `${local_backend_url}/api/quiz-test/${\n      status == \"new_test\" ? \"start\" : status == \"ongoing\" ? \"resume\" : \"retake\"\n    }`;\n\n    axios\n      .post(\n        url,\n        {\n          quiz_id: id,\n        },\n        {\n          headers: {\n            Accept: \"Application/json\",\n            Authorization: `Bearer ${user.token}`,\n          },\n        }\n      )\n      .then((response) => {\n        setTest(response.data);\n        setIsLoading(false);\n        setIsError(false);\n      })\n      .catch(() => {\n        setIsLoading(false);\n        setIsError(true);\n      });\n  }, []);\n\n  return { test, isLoading, isError };\n}\n"]},"metadata":{},"sourceType":"module"}