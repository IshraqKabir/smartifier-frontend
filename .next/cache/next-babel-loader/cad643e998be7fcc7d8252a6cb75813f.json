{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ishraqkabir/workspace/smartifier-frontend/Components/QuizTest/CheckTestStatus/CheckTestStatus.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Box, withStyles } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport useLocalState from \"../../../custom-hooks/useLocalState\";\nimport { local_backend_url } from \"../../../url\";\nimport Topbar from \"../../Layout/Topbar/Topbar\";\nimport QuizTest from \"../QuizTest\";\nimport RetakePrompt from \"./RetakePrompt/RetakePrompt\";\n\nvar CheckTestStatus = function CheckTestStatus(_ref) {\n  _s();\n\n  var quizID = _ref.quizID;\n\n  var _useState = useState(\"unknown\"),\n      status = _useState[0],\n      setStatus = _useState[1];\n\n  var _useState2 = useState(0),\n      percentage = _useState2[0],\n      setPercentage = _useState2[1];\n\n  var _useState3 = useState(null),\n      quiz = _useState3[0],\n      setQuiz = _useState3[1];\n\n  var _useState4 = useState(true),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  var _useLocalState = useLocalState(\"user\", \"\"),\n      _useLocalState2 = _slicedToArray(_useLocalState, 1),\n      user = _useLocalState2[0];\n\n  var _useState5 = useState(false),\n      showTest = _useState5[0],\n      setShowTest = _useState5[1];\n\n  useEffect(function () {\n    axios.get(\"\".concat(local_backend_url, \"/api/quiz-test/\").concat(quizID, \"/check-status\"), {\n      headers: {\n        Accept: \"Application/json\",\n        Authorization: \"Bearer \".concat(user.token)\n      }\n    }).then(function (response) {\n      setStatus(response.data.status);\n\n      if (response.data.status == \"retake\") {\n        setPercentage(response.data.percentage);\n        setQuiz(response.data.quiz);\n      }\n\n      setIsLoading(false);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Topbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [status == \"unknown\" && !isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Some Error Occured. Please Refresh or Go Back.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, _this), status == \"retake\" && !isLoading && !showTest && /*#__PURE__*/_jsxDEV(RetakePrompt, {\n        quizID: quizID,\n        percentage: percentage,\n        quiz: quiz\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, _this), showTest && !isLoading( /*#__PURE__*/_jsxDEV(QuizTest, {\n        id: quizID,\n        status: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 33\n      }, _this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(CheckTestStatus, \"0fh5aGVCE7AfPEy09UeGddSfP24=\", false, function () {\n  return [useLocalState];\n});\n\n_c = CheckTestStatus;\nexport default CheckTestStatus;\nvar Container = withStyles({\n  root: {\n    width: \"100vw\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    backgroundColor: \"#5D00A5\",\n    minHeight: \"100vh\",\n    color: \"white\"\n  }\n})(Box);\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckTestStatus\");","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/QuizTest/CheckTestStatus/CheckTestStatus.tsx"],"names":["Box","withStyles","axios","React","useEffect","useState","useLocalState","local_backend_url","Topbar","QuizTest","RetakePrompt","CheckTestStatus","quizID","status","setStatus","percentage","setPercentage","quiz","setQuiz","isLoading","setIsLoading","user","showTest","setShowTest","get","headers","Accept","Authorization","token","then","response","data","Container","root","width","display","flexDirection","alignItems","backgroundColor","minHeight","color"],"mappings":"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","sourcesContent":["import { Box, withStyles } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport useLocalState from \"../../../custom-hooks/useLocalState\";\nimport IQuiz from \"../../../Models/IQuiz\";\nimport { local_backend_url } from \"../../../url\";\nimport Topbar from \"../../Layout/Topbar/Topbar\";\nimport QuizTest from \"../QuizTest\";\nimport RetakePrompt from \"./RetakePrompt/RetakePrompt\";\n\ninterface IProps {\n  quizID: Number;\n}\n\nconst CheckTestStatus: React.FC<IProps> = ({ quizID }) => {\n  const [status, setStatus] = useState<String>(\"unknown\");\n  const [percentage, setPercentage] = useState<Number>(0);\n  const [quiz, setQuiz] = useState<IQuiz>(null);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [user] = useLocalState(\"user\", \"\");\n\n  const [showTest, setShowTest] = useState<boolean>(false);\n\n  useEffect(() => {\n    axios\n      .get(`${local_backend_url}/api/quiz-test/${quizID}/check-status`, {\n        headers: {\n          Accept: \"Application/json\",\n          Authorization: `Bearer ${user.token}`,\n        },\n      })\n      .then((response) => {\n        setStatus(response.data.status);\n\n        if (response.data.status == \"retake\") {\n          setPercentage(response.data.percentage);\n          setQuiz(response.data.quiz);\n        }\n\n        setIsLoading(false);\n      });\n  }, []);\n\n  return (\n    <>\n      <Topbar />\n      <Container>\n        {status == \"unknown\" && !isLoading && (\n          <p>Some Error Occured. Please Refresh or Go Back.</p>\n        )}\n        {status == \"retake\" && !isLoading && !showTest && (\n          <RetakePrompt quizID={quizID} percentage={percentage} quiz={quiz} />\n        )}\n\n        {showTest && !isLoading(<QuizTest id={quizID} status={status} />)}\n      </Container>\n    </>\n  );\n};\n\nexport default CheckTestStatus;\n\nconst Container = withStyles({\n  root: {\n    width: \"100vw\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    backgroundColor: \"#5D00A5\",\n    minHeight: \"100vh\",\n    color: \"white\",\n  },\n})(Box);\n"]},"metadata":{},"sourceType":"module"}