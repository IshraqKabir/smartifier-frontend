{"ast":null,"code":"import { useEffect, useState } from \"react\";\nimport useLocalState from \"../../../custom-hooks/useLocalState\";\nimport getBadgeImageLink from \"../../../repository/QuizTest/getBadgeImageLink\";\nexport default function useBadge(testId, isAssessment) {\n  const [user] = useLocalState(\"user\", \"\");\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  const {\n    0: badgeImageLink,\n    1: setBadgeImageLink\n  } = useState(\"\");\n  const {\n    0: error,\n    1: setError\n  } = useState(\"\");\n  useEffect(() => {\n    if (user) fetchBadgeImageLink();\n  }, []);\n\n  async function fetchBadgeImageLink() {\n    setIsLoading(true);\n    const response = await getBadgeImageLink(testId, user === null || user === void 0 ? void 0 : user.token);\n    setIsLoading(false);\n\n    if (response.error) {\n      setError(\"Something went wrong. Please contact our support.\");\n    }\n\n    if (response == \"not_quiz\" || response == \"failed\") {\n      setError(\"Some Error has occured, sorry. Please contact our support.\");\n      return;\n    }\n\n    if (response == \"badge_not_ready_yet\") {\n      setError(\"Sorry, we are still working on your badge.\");\n      return;\n    }\n\n    setBadgeImageLink(response);\n  }\n\n  function getWidth() {\n    if (isAssessment) {\n      return \"min(1200px, 95%)\";\n    }\n\n    return \"min(400px, 95%)\";\n  }\n\n  function getHeight() {\n    if (isAssessment) {\n      return \"100%\";\n    }\n\n    return \"100%\";\n  }\n\n  return {\n    isLoading,\n    error,\n    badgeImageLink,\n    getHeight,\n    getWidth\n  };\n}","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/QuizTestResult/Badge/useBadge.tsx"],"names":["useEffect","useState","useLocalState","getBadgeImageLink","useBadge","testId","isAssessment","user","isLoading","setIsLoading","badgeImageLink","setBadgeImageLink","error","setError","fetchBadgeImageLink","response","token","getWidth","getHeight"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AACA,OAAOC,iBAAP,MAA8B,gDAA9B;AAEA,eAAe,SAASC,QAAT,CAAkBC,MAAlB,EAAkCC,YAAlC,EAAyD;AACtE,QAAM,CAACC,IAAD,IAASL,aAAa,CAAC,MAAD,EAAS,EAAT,CAA5B;AACA,QAAM;AAAA,OAACM,SAAD;AAAA,OAAYC;AAAZ,MAA4BR,QAAQ,CAAU,KAAV,CAA1C;AACA,QAAM;AAAA,OAACS,cAAD;AAAA,OAAiBC;AAAjB,MAAsCV,QAAQ,CAAS,EAAT,CAApD;AACA,QAAM;AAAA,OAACW,KAAD;AAAA,OAAQC;AAAR,MAAoBZ,QAAQ,CAAS,EAAT,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,IAAJ,EAAUO,mBAAmB;AAC9B,GAFQ,EAEN,EAFM,CAAT;;AAIA,iBAAeA,mBAAf,GAAqC;AACnCL,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,UAAMM,QAAQ,GAAG,MAAMZ,iBAAiB,CAACE,MAAD,EAASE,IAAT,aAASA,IAAT,uBAASA,IAAI,CAAES,KAAf,CAAxC;AAEAP,IAAAA,YAAY,CAAC,KAAD,CAAZ;;AAEA,QAAIM,QAAQ,CAACH,KAAb,EAAoB;AAClBC,MAAAA,QAAQ,CAAC,mDAAD,CAAR;AACD;;AAED,QAAIE,QAAQ,IAAI,UAAZ,IAA0BA,QAAQ,IAAI,QAA1C,EAAoD;AAClDF,MAAAA,QAAQ,CAAC,4DAAD,CAAR;AACA;AACD;;AAED,QAAIE,QAAQ,IAAI,qBAAhB,EAAuC;AACrCF,MAAAA,QAAQ,CAAC,4CAAD,CAAR;AACA;AACD;;AAEDF,IAAAA,iBAAiB,CAACI,QAAD,CAAjB;AACD;;AAED,WAASE,QAAT,GAAoB;AAClB,QAAIX,YAAJ,EAAkB;AAChB,aAAO,kBAAP;AACD;;AAED,WAAO,iBAAP;AACD;;AAED,WAASY,SAAT,GAAqB;AACnB,QAAIZ,YAAJ,EAAkB;AAChB,aAAO,MAAP;AACD;;AAED,WAAO,MAAP;AACD;;AAED,SAAO;AACLE,IAAAA,SADK;AAELI,IAAAA,KAFK;AAGLF,IAAAA,cAHK;AAILQ,IAAAA,SAJK;AAKLD,IAAAA;AALK,GAAP;AAOD","sourcesContent":["import { useEffect, useState } from \"react\";\nimport useLocalState from \"../../../custom-hooks/useLocalState\";\nimport getBadgeImageLink from \"../../../repository/QuizTest/getBadgeImageLink\";\n\nexport default function useBadge(testId: number, isAssessment: boolean) {\n  const [user] = useLocalState(\"user\", \"\");\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [badgeImageLink, setBadgeImageLink] = useState<string>(\"\");\n  const [error, setError] = useState<string>(\"\");\n\n  useEffect(() => {\n    if (user) fetchBadgeImageLink();\n  }, []);\n\n  async function fetchBadgeImageLink() {\n    setIsLoading(true);\n    const response = await getBadgeImageLink(testId, user?.token);\n\n    setIsLoading(false);\n\n    if (response.error) {\n      setError(\"Something went wrong. Please contact our support.\");\n    }\n\n    if (response == \"not_quiz\" || response == \"failed\") {\n      setError(\"Some Error has occured, sorry. Please contact our support.\");\n      return;\n    }\n\n    if (response == \"badge_not_ready_yet\") {\n      setError(\"Sorry, we are still working on your badge.\");\n      return;\n    }\n\n    setBadgeImageLink(response);\n  }\n\n  function getWidth() {\n    if (isAssessment) {\n      return \"min(1200px, 95%)\";\n    }\n\n    return \"min(400px, 95%)\";\n  }\n\n  function getHeight() {\n    if (isAssessment) {\n      return \"100%\";\n    }\n\n    return \"100%\";\n  }\n\n  return {\n    isLoading,\n    error,\n    badgeImageLink,\n    getHeight,\n    getWidth,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}