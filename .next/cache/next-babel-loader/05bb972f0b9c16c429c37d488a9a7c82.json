{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ishraqkabir/workspace/smartifier-frontend/Components/QuizTest/Questions/SingleQuestion/Question/Options/Option/Option.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Checkbox, Radio, Typography, withStyles } from \"@material-ui/core\";\nimport React, { useContext } from \"react\";\nimport { QuizTestStateContext } from \"../../../../Questions\";\nimport { QuestionContext } from \"../../../SingleQuestion\";\nimport useOption from \"./useOption\";\nexport default function Option(_ref) {\n  _s();\n\n  var _option$image, _question$image;\n\n  var option = _ref.option;\n\n  var _useContext = useContext(QuizTestStateContext),\n      answers = _useContext.answers,\n      setAnswers = _useContext.setAnswers;\n\n  var _useContext2 = useContext(QuestionContext),\n      question = _useContext2.question;\n\n  var _useOption = useOption(option === null || option === void 0 ? void 0 : option.id, question, answers, setAnswers),\n      isChecked = _useOption.isChecked,\n      handleClick = _useOption.handleClick;\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    onClick: handleClick,\n    children: [(question === null || question === void 0 ? void 0 : question.answer_type) === \"multiple_choice\" && /*#__PURE__*/_jsxDEV(Radio, {\n      checked: isChecked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), (question === null || question === void 0 ? void 0 : question.answer_type) === \"checkboxes\" && /*#__PURE__*/_jsxDEV(Checkbox, {\n      checked: isChecked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TitleAndImageContainer, {\n      children: [(option === null || option === void 0 ? void 0 : option.title) && /*#__PURE__*/_jsxDEV(Title, {\n        children: option === null || option === void 0 ? void 0 : option.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 27\n      }, this), (option === null || option === void 0 ? void 0 : (_option$image = option.image) === null || _option$image === void 0 ? void 0 : _option$image.image_link) && /*#__PURE__*/_jsxDEV(Avatar, {\n        src: \"\".concat(backend_url, \"/storage/\").concat(question === null || question === void 0 ? void 0 : (_question$image = question.image) === null || _question$image === void 0 ? void 0 : _question$image.image_link),\n        variant: \"square\",\n        style: {\n          height: 200,\n          width: 200,\n          margin: \"0.2rem 0\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Option, \"mY+j8UEC5qCuzTh2fYl2JJ/6E6o=\", false, function () {\n  return [useOption];\n});\n\n_c = Option;\nvar Container = withStyles({\n  root: {\n    borderTop: \"1px solid gray\",\n    padding: \"0.1rem 0rem\",\n    display: \"flex\",\n    alignItems: \"center\",\n    cursor: \"pointer\"\n  }\n})(Box);\nvar TitleAndImageContainer = withStyles({\n  root: {\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\"\n  }\n})(Box);\nvar Title = withStyles({\n  root: {}\n})(Typography);\n\nvar _c;\n\n$RefreshReg$(_c, \"Option\");","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/QuizTest/Questions/SingleQuestion/Question/Options/Option/Option.tsx"],"names":["Box","Checkbox","Radio","Typography","withStyles","React","useContext","QuizTestStateContext","QuestionContext","useOption","Option","option","answers","setAnswers","question","id","isChecked","handleClick","answer_type","title","image","image_link","backend_url","height","width","margin","Container","root","borderTop","padding","display","alignItems","cursor","TitleAndImageContainer","flexDirection","Title"],"mappings":"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","sourcesContent":["import {\n  Box,\n  Checkbox,\n  Radio,\n  Typography,\n  withStyles,\n} from \"@material-ui/core\";\nimport React, { useContext } from \"react\";\nimport { QuizTestStateContext } from \"../../../../Questions\";\nimport { QuestionContext } from \"../../../SingleQuestion\";\nimport useOption from \"./useOption\";\n\ninterface IProps {\n  option: any;\n}\n\nexport default function Option({ option }: IProps) {\n  const { answers, setAnswers } = useContext(QuizTestStateContext);\n  const { question } = useContext(QuestionContext);\n\n  const { isChecked, handleClick } = useOption(\n    option?.id,\n    question,\n    answers,\n    setAnswers\n  );\n\n  return (\n    <Container onClick={handleClick}>\n      {question?.answer_type === \"multiple_choice\" && (\n        <Radio checked={isChecked} />\n      )}\n      {question?.answer_type === \"checkboxes\" && (\n        <Checkbox checked={isChecked} />\n      )}\n      <TitleAndImageContainer>\n        {option?.title && <Title>{option?.title}</Title>}\n        {option?.image?.image_link && (\n          <Avatar\n            src={`${backend_url}/storage/${question?.image?.image_link}`}\n            variant=\"square\"\n            style={{ height: 200, width: 200, margin: \"0.2rem 0\" }}\n          />\n        )}\n      </TitleAndImageContainer>\n    </Container>\n  );\n}\n\nconst Container = withStyles({\n  root: {\n    borderTop: \"1px solid gray\",\n    padding: \"0.1rem 0rem\",\n    display: \"flex\",\n    alignItems: \"center\",\n    cursor: \"pointer\",\n  },\n})(Box);\n\nconst TitleAndImageContainer = withStyles({\n  root: {\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n})(Box);\n\nconst Title = withStyles({\n  root: {},\n})(Typography);\n"]},"metadata":{},"sourceType":"module"}