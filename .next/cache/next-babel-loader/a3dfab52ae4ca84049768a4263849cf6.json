{"ast":null,"code":"import _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ishraqkabir/workspace/smartifier-frontend/Components/QuizTest/Questions/Question/Question.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Slide, withStyles } from \"@material-ui/core\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { QuizTestStateContext } from \"../Questions\";\nexport default function Question(_ref) {\n  _s();\n\n  var question = _ref.question,\n      index = _ref.index;\n\n  var _useContext = useContext(QuizTestStateContext);\n\n  _objectDestructuringEmpty(_useContext);\n\n  var _useState = useState(index == currentQuestionIndex),\n      isVisible = _useState[0],\n      setIsVisible = _useState[1];\n\n  var _useState2 = useState(\"right\"),\n      direction = _useState2[0],\n      setDirection = _useState2[1];\n\n  useEffect(function () {\n    // console.log(\n    //   `${question?.id} is ${\n    //     isVisible ? \"visible\" : \"not visible\"\n    //   } --- current: ${currentQuestionId}`\n    // );\n    if (currentQuestionIndex > index) {\n      setDirection(\"right\");\n    } else if (currentQuestionIndex < index) {\n      setDirection(\"left\");\n    }\n\n    setIsVisible(index == currentQuestionIndex);\n  }, [currentQuestionIndex]);\n  return /*#__PURE__*/_jsxDEV(Slide, {\n    \"in\": isVisible,\n    direction: direction,\n    timeout: {\n      enter: 500,\n      exit: 100\n    },\n    mountOnEnter: true,\n    unmountOnExit: true,\n    children: isVisible ? /*#__PURE__*/_jsxDEV(Container, {\n      children: \"\".concat(question === null || question === void 0 ? void 0 : question.id, \".\").concat(question === null || question === void 0 ? void 0 : question.question)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Question, \"ApzDb9hfqgJm5FdY4MbziUAJHCw=\");\n\n_c = Question;\nvar Container = withStyles({\n  root: {\n    padding: \"0.5rem 1rem\"\n  }\n})(Box);\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/QuizTest/Questions/Question/Question.tsx"],"names":["Box","Slide","withStyles","useContext","useEffect","useState","QuizTestStateContext","Question","question","index","currentQuestionIndex","isVisible","setIsVisible","direction","setDirection","enter","exit","id","Container","root","padding"],"mappings":";;;;;;AAAA,SAASA,GAAT,EAAcC,KAAd,EAAqBC,UAArB,QAAuC,mBAAvC;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AAEA,SAASC,oBAAT,QAAqC,cAArC;AAOA,eAAe,SAASC,QAAT,OAA+C;AAAA;;AAAA,MAA3BC,QAA2B,QAA3BA,QAA2B;AAAA,MAAjBC,KAAiB,QAAjBA,KAAiB;;AAAA,oBACjDN,UAAU,CAACG,oBAAD,CADuC;;AAAA;;AAAA,kBAE1BD,QAAQ,CAACI,KAAK,IAAIC,oBAAV,CAFkB;AAAA,MAErDC,SAFqD;AAAA,MAE1CC,YAF0C;;AAAA,mBAG1BP,QAAQ,CAAmB,OAAnB,CAHkB;AAAA,MAGrDQ,SAHqD;AAAA,MAG1CC,YAH0C;;AAK5DV,EAAAA,SAAS,CAAC,YAAM;AACd;AACA;AACA;AACA;AACA;AACA,QAAIM,oBAAoB,GAAGD,KAA3B,EAAkC;AAChCK,MAAAA,YAAY,CAAC,OAAD,CAAZ;AACD,KAFD,MAEO,IAAIJ,oBAAoB,GAAGD,KAA3B,EAAkC;AACvCK,MAAAA,YAAY,CAAC,MAAD,CAAZ;AACD;;AAEDF,IAAAA,YAAY,CAACH,KAAK,IAAIC,oBAAV,CAAZ;AACD,GAbQ,EAaN,CAACA,oBAAD,CAbM,CAAT;AAeA,sBACE,QAAC,KAAD;AACE,UAAIC,SADN;AAEE,IAAA,SAAS,EAAEE,SAFb;AAGE,IAAA,OAAO,EAAE;AAAEE,MAAAA,KAAK,EAAE,GAAT;AAAcC,MAAAA,IAAI,EAAE;AAApB,KAHX;AAIE,IAAA,YAAY,MAJd;AAKE,IAAA,aAAa,MALf;AAAA,cAOGL,SAAS,gBACR,QAAC,SAAD;AAAA,0BAAeH,QAAf,aAAeA,QAAf,uBAAeA,QAAQ,CAAES,EAAzB,cAA+BT,QAA/B,aAA+BA,QAA/B,uBAA+BA,QAAQ,CAAEA,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA,YADQ,gBAGR;AAAA;AAAA;AAAA;AAAA;AAVJ;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAnCuBD,Q;;KAAAA,Q;AAqCxB,IAAMW,SAAS,GAAGhB,UAAU,CAAC;AAC3BiB,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE;AADL;AADqB,CAAD,CAAV,CAIfpB,GAJe,CAAlB","sourcesContent":["import { Box, Slide, withStyles } from \"@material-ui/core\";\nimport { useContext, useEffect, useState } from \"react\";\nimport IQuestion from \"../../../../Models/IQuestion\";\nimport { QuizTestStateContext } from \"../Questions\";\n\ninterface IProps {\n  index: number;\n  question: IQuestion;\n}\n\nexport default function Question({ question, index }: IProps) {\n  const {} = useContext(QuizTestStateContext);\n  const [isVisible, setIsVisible] = useState(index == currentQuestionIndex);\n  const [direction, setDirection] = useState<\"left\" | \"right\">(\"right\");\n\n  useEffect(() => {\n    // console.log(\n    //   `${question?.id} is ${\n    //     isVisible ? \"visible\" : \"not visible\"\n    //   } --- current: ${currentQuestionId}`\n    // );\n    if (currentQuestionIndex > index) {\n      setDirection(\"right\");\n    } else if (currentQuestionIndex < index) {\n      setDirection(\"left\");\n    }\n\n    setIsVisible(index == currentQuestionIndex);\n  }, [currentQuestionIndex]);\n\n  return (\n    <Slide\n      in={isVisible}\n      direction={direction}\n      timeout={{ enter: 500, exit: 100 }}\n      mountOnEnter\n      unmountOnExit\n    >\n      {isVisible ? (\n        <Container>{`${question?.id}.${question?.question}`}</Container>\n      ) : (\n        <div></div>\n      )}\n    </Slide>\n  );\n}\n\nconst Container = withStyles({\n  root: {\n    padding: \"0.5rem 1rem\",\n  },\n})(Box);\n"]},"metadata":{},"sourceType":"module"}