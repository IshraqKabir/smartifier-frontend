{"ast":null,"code":"import { useEffect, useState } from \"react\";\nimport useLocalState from \"../../../custom-hooks/useLocalState\";\nimport getBadgeImageLink from \"../../../repository/QuizTest/getBadgeImageLink\";\nexport default function useBadge(testId, isAssessment) {\n  const [user] = useLocalState(\"user\", \"\");\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  const {\n    0: badgeImageLink,\n    1: setBadgeImageLink\n  } = useState(\"\");\n  const {\n    0: error,\n    1: setError\n  } = useState(\"\");\n  useEffect(() => {\n    if (user) fetchBadgeImageLink();\n  }, []);\n\n  async function fetchBadgeImageLink() {\n    setIsLoading(true);\n    const response = await getBadgeImageLink(testId, user === null || user === void 0 ? void 0 : user.token);\n    setIsLoading(false);\n\n    if (response.error) {\n      setError(\"Something went wrong. Please contact our support.\");\n    }\n\n    if (response == \"not_quiz\" || response == \"failed\") {\n      setError(\"Some Error has occured, sorry. Please contact our support.\");\n      return;\n    }\n\n    if (response == \"badge_not_ready_yet\") {\n      setError(\"Sorry, we are still working on your badge.\");\n      return;\n    }\n\n    setBadgeImageLink(response);\n  }\n\n  function getWidth() {\n    if (isAssessment) {\n      return \"95%\";\n    }\n\n    return \"min(400px, 95%)\";\n  }\n\n  function getHeight() {\n    if (isAssessment) {\n      return \"100%\";\n    }\n\n    return \"100%\";\n  }\n\n  return {\n    isLoading,\n    error,\n    badgeImageLink,\n    getHeight,\n    getWidth\n  };\n}","map":null,"metadata":{},"sourceType":"module"}