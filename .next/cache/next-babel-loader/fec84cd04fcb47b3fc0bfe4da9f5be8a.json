{"ast":null,"code":"import { useState, useEffect } from \"react\";\nimport Cookies from \"js-cookie\";\nexport default function useLocalState(key, defaultValue) {\n  const {\n    0: value,\n    1: setValueState\n  } = useState(() => {\n    if (false) {\n      return getValue(key);\n    }\n  });\n  useEffect(() => {\n    const listener = e => {\n      if (e.storageArea === localStorage && e.key === key) {\n        setValueState(JSON.parse(e.newValue));\n      }\n    };\n\n    window.addEventListener(\"storage\", listener);\n\n    if (!isLocalStorageWorking()) {\n      setInterval(() => {\n        if (JSON.stringify(getCookie(key)) != JSON.stringify(value)) {\n          setValueState(getCookie(key));\n        }\n      }, 500);\n    }\n\n    return () => {\n      window.removeEventListener(\"storage\", listener);\n    };\n  }, [key]);\n\n  const setValue = newValue => {\n    setValueState(currentValue => {\n      let value = null;\n\n      if (typeof newValue === \"function\") {\n        value = newValue(currentValue);\n      } else {\n        value = newValue;\n      }\n\n      if (isLocalStorageWorking()) {\n        localStorage.setItem(key, JSON.stringify(value));\n      } else {\n        setCookie(key, value);\n      }\n\n      return value;\n    });\n  };\n\n  return [value, setValue];\n}\n\nconst getValue = key => {\n  if (isLocalStorageWorking()) {\n    // return from local storage\n    const value = localStorage.getItem(key);\n    return value ? JSON.parse(value) : value;\n  } // return from cookie;\n\n\n  return getCookie(key);\n};\n\nconst isLocalStorageWorking = () => {\n  const key = \"local-storage-test\";\n  const value = 19;\n  localStorage.setItem(key, JSON.stringify(value));\n\n  if (JSON.parse(localStorage.getItem(key)) == value) {\n    console.log(\"working\");\n    return true;\n  }\n\n  console.log(\"not working\");\n  return false;\n};\n\nconst setCookie = (key, value) => {\n  Cookies.set(key ? JSON.stringify(key) : key, value ? JSON.stringify(value) : value);\n};\n\nconst getCookie = key => {\n  const result = Cookies.get(JSON.stringify(key));\n  return result ? JSON.parse(result) : result;\n};","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/custom-hooks/useLocalState.ts"],"names":["useState","useEffect","Cookies","useLocalState","key","defaultValue","value","setValueState","getValue","listener","e","storageArea","localStorage","JSON","parse","newValue","window","addEventListener","isLocalStorageWorking","setInterval","stringify","getCookie","removeEventListener","setValue","currentValue","setItem","setCookie","getItem","console","log","set","result","get"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport Cookies from \"js-cookie\";\n\nexport default function useLocalState<T>(key: string, defaultValue: any) {\n  const [value, setValueState] = useState(() => {\n    if (process.browser) {\n      return getValue(key);\n    }\n  });\n\n  useEffect(() => {\n    const listener = (e) => {\n      if (e.storageArea === localStorage && e.key === key) {\n        setValueState(JSON.parse(e.newValue));\n      }\n    };\n    window.addEventListener(\"storage\", listener);\n\n    if (!isLocalStorageWorking()) {\n      setInterval(() => {\n        if (JSON.stringify(getCookie(key)) != JSON.stringify(value)) {\n          setValueState(getCookie(key));\n        }\n      }, 500);\n    }\n\n    return () => {\n      window.removeEventListener(\"storage\", listener);\n    };\n  }, [key]);\n\n  const setValue = (newValue) => {\n    setValueState((currentValue) => {\n      let value = null;\n\n      if (typeof newValue === \"function\") {\n        value = newValue(currentValue);\n      } else {\n        value = newValue;\n      }\n\n      if (isLocalStorageWorking()) {\n        localStorage.setItem(key, JSON.stringify(value));\n      } else {\n        setCookie(key, value);\n      }\n\n      return value;\n    });\n  };\n\n  return [value, setValue];\n}\n\nconst getValue = (key) => {\n  if (isLocalStorageWorking()) {\n    // return from local storage\n    const value = localStorage.getItem(key);\n    return value ? JSON.parse(value) : value;\n  }\n\n  // return from cookie;\n  return getCookie(key);\n};\n\nconst isLocalStorageWorking = (): boolean => {\n  const key = \"local-storage-test\";\n  const value = 19;\n\n  localStorage.setItem(key, JSON.stringify(value));\n\n  if (JSON.parse(localStorage.getItem(key)) == value) {\n    console.log(\"working\");\n    return true;\n  }\n\n  console.log(\"not working\");\n  return false;\n};\n\nconst setCookie = (key, value) => {\n  Cookies.set(\n    key ? JSON.stringify(key) : key,\n    value ? JSON.stringify(value) : value\n  );\n};\n\nconst getCookie = (key) => {\n  const result = Cookies.get(JSON.stringify(key));\n  return result ? JSON.parse(result) : result;\n};"]},"metadata":{},"sourceType":"module"}