{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ishraqkabir/workspace/smartifier-frontend/Components/Post/SinglePost/LCSStatus/Likes/Likes.tsx\";\nimport { Avatar, Box, Snackbar, withStyles } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport useLocalState from \"../../../../../custom-hooks/useLocalState\";\nimport { backend_url } from \"../../../../../url\";\n\nconst Likes = ({\n  post\n}) => {\n  const [user] = useLocalState(\"user\", \"\");\n  const {\n    0: showLoginAlert,\n    1: setShowLoginAlert\n  } = useState(false);\n\n  const handleClick = () => {\n    if (!user.token) {\n      setShowLoginAlert(true);\n      setTimeout(() => {\n        setShowLoginAlert(false);\n      }, 3000);\n      return;\n    }\n  };\n\n  useEffect(() => {\n    getIfUserHasLikedThePost();\n  }, []);\n  useEffect(() => {\n    getIfUserHasLikedThePost();\n  }, [user]);\n\n  const getIfUserHasLikedThePost = () => {\n    if (user.token) {\n      axios.get(`${backend_url}/api/posts/${post === null || post === void 0 ? void 0 : post.slug}/is-liked-by-user`, {\n        headers: {\n          Accept: \"application/json\",\n          Authorization: `Bearer ${user.token}`\n        }\n      }).then(response => {\n        console.log(response.data);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Button, {\n    onClick: handleClick,\n    children: [/*#__PURE__*/_jsxDEV(Avatar, {\n      src: `https://img.icons8.com/pastel-glyph/34/000000/facebook-like--v1.png`,\n      style: imageStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), post.likes_count ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Number, {\n        children: post === null || post === void 0 ? void 0 : post.likes_count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Like\", (post === null || post === void 0 ? void 0 : post.likes_count) > 1 ? \"s\" : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Number, {\n        children: \"0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Like\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(LoginAlert, {\n      anchorOrigin: {\n        vertical: \"top\",\n        horizontal: \"center\"\n      },\n      open: showLoginAlert,\n      message: \"Please Login To Like The Post.\"\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Likes;\nconst imageStyle = {\n  width: \"23px\",\n  height: \"23px\",\n  marginRight: \"16px\",\n  alignSelf: \"center\",\n  backgroundColor: \"lightgray\",\n  borderRadius: \"50%\",\n  padding: \"5px\",\n  cursor: \"pointer\"\n};\nconst Button = withStyles({\n  root: {\n    maxWidth: \"240px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    marginRight: \"16px\"\n  }\n})(Box);\nconst Container = withStyles({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    cursor: \"pointer\"\n  }\n})(Box);\nconst Number = withStyles({\n  root: {\n    display: \"inline-block\",\n    marginRight: 8\n  }\n})(Box);\nconst LoginAlert = withStyles({\n  root: {\n    zIndex: 20000\n  }\n})(Snackbar);","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/Post/SinglePost/LCSStatus/Likes/Likes.tsx"],"names":["Avatar","Box","Snackbar","withStyles","axios","React","useEffect","useState","useLocalState","backend_url","Likes","post","user","showLoginAlert","setShowLoginAlert","handleClick","token","setTimeout","getIfUserHasLikedThePost","get","slug","headers","Accept","Authorization","then","response","console","log","data","imageStyle","likes_count","vertical","horizontal","id","width","height","marginRight","alignSelf","backgroundColor","borderRadius","padding","cursor","Button","root","maxWidth","display","alignItems","Container","Number","LoginAlert","zIndex"],"mappings":"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","sourcesContent":["import { Avatar, Box, Snackbar, withStyles } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport useLocalState from \"../../../../../custom-hooks/useLocalState\";\nimport IPost from \"../../../../../Models/IPost\";\nimport { backend_url } from \"../../../../../url\";\n\ninterface IProps {\n  post: IPost;\n}\n\nconst Likes: React.FC<IProps> = ({ post }) => {\n  const [user] = useLocalState(\"user\", \"\");\n  const [showLoginAlert, setShowLoginAlert] = useState<boolean>(false);\n\n  const handleClick = () => {\n    if (!user.token) {\n      setShowLoginAlert(true);\n      setTimeout(() => {\n        setShowLoginAlert(false);\n      }, 3000);\n\n      return;\n    }\n  };\n\n  useEffect(() => {\n    getIfUserHasLikedThePost();\n  }, []);\n\n  useEffect(() => {\n    getIfUserHasLikedThePost();\n  }, [user]);\n\n  const getIfUserHasLikedThePost = () => {\n    if (user.token) {\n      axios\n        .get(`${backend_url}/api/posts/${post?.slug}/is-liked-by-user`, {\n          headers: {\n            Accept: \"application/json\",\n            Authorization: `Bearer ${user.token}`,\n          },\n        })\n        .then((response) => {\n          console.log(response.data);\n        });\n    }\n  };\n\n  return (\n    <Button onClick={handleClick}>\n      <Avatar\n        src={`https://img.icons8.com/pastel-glyph/34/000000/facebook-like--v1.png`}\n        style={imageStyle}\n      />\n      {post.likes_count ? (\n        <>\n          <Number>{post?.likes_count}</Number>\n          <p>Like{post?.likes_count > 1 ? \"s\" : \"\"}</p>\n        </>\n      ) : (\n        <>\n          <Number>0</Number>\n          <p>Like</p>\n        </>\n      )}\n      <LoginAlert\n        key={post.id}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n        open={showLoginAlert}\n        message=\"Please Login To Like The Post.\"\n      />\n    </Button>\n  );\n};\n\nexport default Likes;\n\nconst imageStyle = {\n  width: \"23px\",\n  height: \"23px\",\n  marginRight: \"16px\",\n  alignSelf: \"center\",\n  backgroundColor: \"lightgray\",\n  borderRadius: \"50%\",\n  padding: \"5px\",\n  cursor: \"pointer\",\n};\n\nconst Button = withStyles({\n  root: {\n    maxWidth: \"240px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    marginRight: \"16px\",\n  },\n})(Box);\n\nconst Container = withStyles({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    cursor: \"pointer\",\n  },\n})(Box);\n\nconst Number = withStyles({\n  root: {\n    display: \"inline-block\",\n    marginRight: 8,\n  },\n})(Box);\n\nconst LoginAlert = withStyles({\n  root: {\n    zIndex: 20000,\n  },\n})(Snackbar);\n"]},"metadata":{},"sourceType":"module"}