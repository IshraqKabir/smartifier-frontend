{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport Cookies from \"js-cookie\";\n\nvar setCookie = function setCookie(key, value) {\n  Cookies.set(key ? JSON.stringify(key) : key, value ? JSON.stringify(value) : value);\n};\n\nvar getCookie = function getCookie(key) {\n  var result = Cookies.get(JSON.stringify(key));\n  return result ? JSON.parse(result) : result;\n};\n\nvar isLocalStorageWorking = function isLocalStorageWorking() {\n  return false;\n};\n\nfunction useLocalState(key, defaultValue) {\n  _s();\n\n  var _useState = useState(function () {\n    if (isLocalStorageWorking() == false) {\n      console.log(getCookie(key));\n      return getCookie(key);\n    }\n\n    var result = null;\n\n    if (true) {\n      var storedValue = localStorage.getItem(key) ? JSON.parse(localStorage.getItem(key)) : localStorage.getItem(key);\n\n      if (!storedValue) {\n        result = defaultValue;\n      }\n\n      result = storedValue === null ? defaultValue : storedValue;\n    } else {\n      result = defaultValue;\n    }\n\n    return result;\n  }),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  useEffect(function () {\n    var listener = function listener(e) {\n      if (e.storageArea === localStorage && e.key === key) {\n        setValue(JSON.parse(e.newValue));\n      }\n    };\n\n    window.addEventListener(\"storage\", listener);\n    return function () {\n      window.removeEventListener(\"storage\", listener);\n    };\n  }, [key]);\n\n  var setValueInLocalStorage = function setValueInLocalStorage(newValue) {\n    setValue(function (currentValue) {\n      if (typeof newValue === \"function\") {\n        setCookie(key, newValue(currentValue));\n      } else {\n        setCookie(key, newValue);\n      }\n\n      var result = typeof newValue === \"function\" ? newValue(currentValue) : newValue;\n      localStorage.setItem(key, JSON.stringify(result)); // return result;\n    });\n  };\n\n  useEffect(function () {\n    var storedValue = JSON.parse(localStorage.getItem(key));\n\n    if (storedValue) {\n      setValueInLocalStorage(storedValue);\n    } else {\n      setValueInLocalStorage(value);\n    }\n  }, []);\n  return [value, setValueInLocalStorage];\n}\n\n_s(useLocalState, \"TUkySDC+9Z+w2Kc05ZMFHj/cndk=\");\n\nexport default useLocalState;","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/custom-hooks/useLocalState.ts"],"names":["useState","useEffect","Cookies","setCookie","key","value","set","JSON","stringify","getCookie","result","get","parse","isLocalStorageWorking","useLocalState","defaultValue","console","log","storedValue","localStorage","getItem","setValue","listener","e","storageArea","newValue","window","addEventListener","removeEventListener","setValueInLocalStorage","currentValue","setItem"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport Cookies from \"js-cookie\";\n\nconst setCookie = (key, value) => {\n  Cookies.set(\n    key ? JSON.stringify(key) : key,\n    value ? JSON.stringify(value) : value\n  );\n};\n\nconst getCookie = (key) => {\n  const result = Cookies.get(JSON.stringify(key));\n  return result ? JSON.parse(result) : result;\n};\n\nconst isLocalStorageWorking = (): boolean => {\n  return false;\n};\n\nfunction useLocalState<T>(key: string, defaultValue: T) {\n  const [value, setValue] = useState(() => {\n    if (isLocalStorageWorking() == false) {\n      console.log(getCookie(key));\n      return getCookie(key);\n    }\n\n    let result = null;\n    if (process.browser) {\n      const storedValue = localStorage.getItem(key)\n        ? JSON.parse(localStorage.getItem(key))\n        : localStorage.getItem(key);\n\n      if (!storedValue) {\n        result = defaultValue;\n      }\n      result = storedValue === null ? defaultValue : storedValue;\n    } else {\n      result = defaultValue;\n    }\n\n    return result;\n  });\n\n  useEffect(() => {\n    const listener = (e) => {\n      if (e.storageArea === localStorage && e.key === key) {\n        setValue(JSON.parse(e.newValue));\n      }\n    };\n    window.addEventListener(\"storage\", listener);\n\n    return () => {\n      window.removeEventListener(\"storage\", listener);\n    };\n  }, [key]);\n\n  const setValueInLocalStorage = (newValue) => {\n    setValue((currentValue) => {\n      if (typeof newValue === \"function\") {\n        setCookie(key, newValue(currentValue));\n      } else {\n        setCookie(key, newValue);\n      }\n      const result =\n        typeof newValue === \"function\" ? newValue(currentValue) : newValue;\n      localStorage.setItem(key, JSON.stringify(result));\n      // return result;\n    });\n  };\n\n  useEffect(() => {\n    const storedValue = JSON.parse(localStorage.getItem(key));\n    if (storedValue) {\n      setValueInLocalStorage(storedValue);\n    } else {\n      setValueInLocalStorage(value);\n    }\n  }, []);\n\n  return [value, setValueInLocalStorage];\n}\n\nexport default useLocalState;\n"]},"metadata":{},"sourceType":"module"}