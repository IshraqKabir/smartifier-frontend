{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ishraqkabir/workspace/smartifier-frontend/Components/Quizzes/Quiz/TakeQuizButton/TakeQuizButton.tsx\";\nimport { Box, Snackbar, withStyles } from \"@material-ui/core\";\nimport { useRouter } from \"next/router\";\nimport React, { useState } from \"react\";\nimport useLocalState from \"../../../../custom-hooks/useLocalState\";\n\nconst TakeQuizButton = ({\n  quiz\n}) => {\n  const {\n    0: showLoginAlert,\n    1: setShowLoginAlert\n  } = useState(false);\n  const [user] = useLocalState(\"user\", \"\");\n  const router = useRouter();\n\n  const handleClick = () => {\n    if (!user || !user.token) {\n      setShowLoginAlert(true);\n      setTimeout(() => {\n        setShowLoginAlert(false);\n      }, 3000);\n      return;\n    }\n\n    router.push(`/test/quiz/${quiz.id}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => handleClick(),\n      children: \"Take the Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoginAlert, {\n      anchorOrigin: {\n        vertical: \"top\",\n        horizontal: \"center\"\n      },\n      open: showLoginAlert,\n      onClose: () => setShowLoginAlert(false),\n      message: \"Please Login To Take The Quiz.\"\n    }, quiz.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\nexport default TakeQuizButton;\nconst Button = withStyles({\n  root: {\n    maxWidth: 400,\n    marginTop: 20,\n    cursor: \"pointer\",\n    width: \"100%\",\n    padding: \"10px 0px\",\n    borderRadius: 10,\n    textAlign: \"center\",\n    background: \"transparent linear-gradient(180deg, #995FD4 0%, #1F29356E 100%) 0% 0% no-repeat padding-box\"\n  }\n})(Box);\nconst LoginAlert = withStyles({\n  root: {\n    zIndex: 20000\n  }\n})(Snackbar);","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/Quizzes/Quiz/TakeQuizButton/TakeQuizButton.tsx"],"names":["Box","Snackbar","withStyles","useRouter","React","useState","useLocalState","TakeQuizButton","quiz","showLoginAlert","setShowLoginAlert","user","router","handleClick","token","setTimeout","push","id","vertical","horizontal","Button","root","maxWidth","marginTop","cursor","width","padding","borderRadius","textAlign","background","LoginAlert","zIndex"],"mappings":";;AAAA,SAASA,GAAT,EAAcC,QAAd,EAAwBC,UAAxB,QAA0C,mBAA1C;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,aAAP,MAA0B,wCAA1B;;AAOA,MAAMC,cAAgC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AACrD,QAAM;AAAA,OAACC,cAAD;AAAA,OAAiBC;AAAjB,MAAsCL,QAAQ,CAAU,KAAV,CAApD;AAEA,QAAM,CAACM,IAAD,IAASL,aAAa,CAAC,MAAD,EAAS,EAAT,CAA5B;AACA,QAAMM,MAAM,GAAGT,SAAS,EAAxB;;AAEA,QAAMU,WAAW,GAAG,MAAM;AACxB,QAAI,CAACF,IAAD,IAAS,CAACA,IAAI,CAACG,KAAnB,EAA0B;AACxBJ,MAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACAK,MAAAA,UAAU,CAAC,MAAM;AACfL,QAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,OAFS,EAEP,IAFO,CAAV;AAGA;AACD;;AAEDE,IAAAA,MAAM,CAACI,IAAP,CAAa,cAAaR,IAAI,CAACS,EAAG,EAAlC;AACD,GAVD;;AAYA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAMJ,WAAW,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,UAAD;AAA0B,MAAA,YAAY,EAAE;AAAEK,QAAAA,QAAQ,EAAE,KAAZ;AAAmBC,QAAAA,UAAU,EAAE;AAA/B,OAAxC;AAAmF,MAAA,IAAI,EAAEV,cAAzF;AAAyG,MAAA,OAAO,EAAE,MAAMC,iBAAiB,CAAC,KAAD,CAAzI;AACE,MAAA,OAAO,EAAC;AADV,OAAiBF,IAAI,CAACS,EAAtB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CA1BD;;AA4BA,eAAeV,cAAf;AAEA,MAAMa,MAAM,GAAGlB,UAAU,CAAC;AACxBmB,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE,GADN;AAEJC,IAAAA,SAAS,EAAE,EAFP;AAGJC,IAAAA,MAAM,EAAE,SAHJ;AAIJC,IAAAA,KAAK,EAAE,MAJH;AAKJC,IAAAA,OAAO,EAAE,UALL;AAMJC,IAAAA,YAAY,EAAE,EANV;AAOJC,IAAAA,SAAS,EAAE,QAPP;AAQJC,IAAAA,UAAU,EACR;AATE;AADkB,CAAD,CAAV,CAYZ7B,GAZY,CAAf;AAcA,MAAM8B,UAAU,GAAG5B,UAAU,CAAC;AAC5BmB,EAAAA,IAAI,EAAE;AACJU,IAAAA,MAAM,EAAE;AADJ;AADsB,CAAD,CAAV,CAIhB9B,QAJgB,CAAnB","sourcesContent":["import { Box, Snackbar, withStyles } from \"@material-ui/core\";\nimport { useRouter } from \"next/router\";\nimport React, { useState } from \"react\";\nimport useLocalState from \"../../../../custom-hooks/useLocalState\";\nimport IQuiz from \"../../../../Models/IQuiz\";\n\ninterface IProps {\n  quiz: IQuiz;\n}\n\nconst TakeQuizButton: React.FC<IProps> = ({ quiz }) => {\n  const [showLoginAlert, setShowLoginAlert] = useState<boolean>(false);\n\n  const [user] = useLocalState(\"user\", \"\");\n  const router = useRouter();\n\n  const handleClick = () => {\n    if (!user || !user.token) {\n      setShowLoginAlert(true);\n      setTimeout(() => {\n        setShowLoginAlert(false);\n      }, 3000);\n      return;\n    }\n\n    router.push(`/test/quiz/${quiz.id}`);\n  };\n\n  return (\n    <div>\n      <Button onClick={() => handleClick()}>Take the Quiz</Button>\n      <LoginAlert key={quiz.id} anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }} open={showLoginAlert} onClose={() => setShowLoginAlert(false)}\n        message=\"Please Login To Take The Quiz.\"\n      />\n    </div>\n  );\n};\n\nexport default TakeQuizButton;\n\nconst Button = withStyles({\n  root: {\n    maxWidth: 400,\n    marginTop: 20,\n    cursor: \"pointer\",\n    width: \"100%\",\n    padding: \"10px 0px\",\n    borderRadius: 10,\n    textAlign: \"center\",\n    background:\n      \"transparent linear-gradient(180deg, #995FD4 0%, #1F29356E 100%) 0% 0% no-repeat padding-box\",\n  },\n})(Box);\n\nconst LoginAlert = withStyles({\n  root: {\n    zIndex: 20000,\n  },\n})(Snackbar);\n"]},"metadata":{},"sourceType":"module"}