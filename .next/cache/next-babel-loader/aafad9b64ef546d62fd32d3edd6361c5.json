{"ast":null,"code":"import { useState, useEffect } from \"react\";\nimport Cookies from \"js-cookie\";\n\nfunction useLocalState(key, defaultValue) {\n  const {\n    0: value,\n    1: setValue\n  } = useState(() => {\n    let result = null;\n\n    if (false) {\n      const storedValue = JSON.parse(localStorage.getItem(key));\n\n      if (!storedValue) {\n        result = defaultValue;\n      }\n\n      result = storedValue === null ? defaultValue : storedValue;\n    } else {\n      result = defaultValue;\n    }\n\n    if (!result) {\n      result = getCookie();\n    }\n\n    return result;\n  });\n  useEffect(() => {\n    const listener = e => {\n      if (e.storageArea === localStorage && e.key === key) {\n        setValue(JSON.parse(e.newValue));\n      }\n    };\n\n    window.addEventListener(\"storage\", listener);\n    return () => {\n      window.removeEventListener(\"storage\", listener);\n    };\n  }, [key]);\n\n  const setValueInLocalStorage = newValue => {\n    if (typeof newValue === \"function\") {\n      setCookie(value);\n    } else {\n      setCookie(newValue);\n    }\n\n    setValue(currentValue => {\n      const result = typeof newValue === \"function\" ? newValue(currentValue) : newValue;\n      localStorage.setItem(key, JSON.stringify(result));\n      return result;\n    });\n  };\n\n  const setCookie = (key, ivalue) => {\n    Cookies.set(JSON.stringify(key), JSON.stringify(value));\n  };\n\n  const getCookie = key => {\n    return JSON.parse(Cookies.get(JSON.stringify(key)));\n  };\n\n  useEffect(() => {\n    const storedValue = JSON.parse(localStorage.getItem(key));\n\n    if (storedValue) {\n      setValueInLocalStorage(storedValue);\n    } else {\n      setValueInLocalStorage(value);\n    }\n  }, []);\n  return [value, setValueInLocalStorage];\n}\n\nexport default useLocalState;","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/custom-hooks/useLocalState.ts"],"names":["useState","useEffect","Cookies","useLocalState","key","defaultValue","value","setValue","result","storedValue","JSON","parse","localStorage","getItem","getCookie","listener","e","storageArea","newValue","window","addEventListener","removeEventListener","setValueInLocalStorage","setCookie","currentValue","setItem","stringify","ivalue","set","get"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport Cookies from \"js-cookie\";\n\nfunction useLocalState<T>(key: string, defaultValue: T) {\n  const [value, setValue] = useState(() => {\n    let result = null;\n    if (process.browser) {\n      const storedValue = JSON.parse(localStorage.getItem(key));\n      if (!storedValue) {\n        result = defaultValue;\n      }\n      result = storedValue === null ? defaultValue : storedValue;\n    } else {\n      result = defaultValue;\n    }\n\n    if (!result) {\n      result = getCookie();\n    }\n\n    return result;\n  });\n\n  useEffect(() => {\n    const listener = (e) => {\n      if (e.storageArea === localStorage && e.key === key) {\n        setValue(JSON.parse(e.newValue));\n      }\n    };\n    window.addEventListener(\"storage\", listener);\n\n    return () => {\n      window.removeEventListener(\"storage\", listener);\n    };\n  }, [key]);\n\n  const setValueInLocalStorage = (newValue) => {\n    if (typeof newValue === \"function\") {\n      setCookie(value);\n    } else {\n      setCookie(newValue);\n    }\n\n    setValue((currentValue) => {\n      const result =\n        typeof newValue === \"function\" ? newValue(currentValue) : newValue;\n      localStorage.setItem(key, JSON.stringify(result));\n      return result;\n    });\n  };\n\n  const setCookie = (key, ivalue) => {\n    Cookies.set(JSON.stringify(key), JSON.stringify(value));\n  };\n\n  const getCookie = (key) => {\n    return JSON.parse(Cookies.get(JSON.stringify(key)));\n  };\n\n  useEffect(() => {\n    const storedValue = JSON.parse(localStorage.getItem(key));\n    if (storedValue) {\n      setValueInLocalStorage(storedValue);\n    } else {\n      setValueInLocalStorage(value);\n    }\n  }, []);\n\n  return [value, setValueInLocalStorage];\n}\n\nexport default useLocalState;\n"]},"metadata":{},"sourceType":"module"}