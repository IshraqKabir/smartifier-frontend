{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ishraqkabir/workspace/smartifier-frontend/Components/Post/SinglePost/PostBody/PostBody.tsx\";\nimport React from \"react\";\nimport parse from \"html-react-parser\";\nimport PostBodyImage from \"./PostBodyImage/PostBodyImage\";\nimport { Box, withStyles } from \"@material-ui/core\";\nconst options = {\n  replace: ({\n    attribs,\n    children\n  }) => {\n    let image;\n\n    if (children) {\n      children.forEach(child => {\n        if (child.name == \"img\") {\n          var _child$attribs;\n\n          image = /*#__PURE__*/_jsxDEV(PostBodyImage, {\n            src: child.attribs.src,\n            caption: (_child$attribs = child.attribs) === null || _child$attribs === void 0 ? void 0 : _child$attribs.alt,\n            isWide: attribs[\"data-layout\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 13\n          }, this);\n        }\n      });\n      if (image) return image;\n\n      if (children && children[0] && children[0][\"data\"]) {\n        if (children[0][\"data\"].includes(\"youtube.com\")) {\n          return /*#__PURE__*/_jsxDEV(\"iframe\", {\n            width: \"100%\",\n            height: \"400\",\n            src: `${children[0][\"data\"]}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this);\n        }\n      }\n    }\n  }\n};\n\nconst PostBody = ({\n  body\n}) => {\n  const el = parse(`${body}`, options);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: el\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 10\n  }, this);\n};\n\nexport default PostBody;\nconst Container = withStyles({\n  root: {\n    lineHeight: 1.6,\n    fontSize: 13,\n    color: \"#686868\",\n    marginBlock: 5\n  }\n})(Box);","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/Post/SinglePost/PostBody/PostBody.tsx"],"names":["React","parse","PostBodyImage","Box","withStyles","options","replace","attribs","children","image","forEach","child","name","src","alt","includes","PostBody","body","el","Container","root","lineHeight","fontSize","color","marginBlock"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,KAAP,MAA8C,mBAA9C;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,SAASC,GAAT,EAAcC,UAAd,QAAgC,mBAAhC;AAEA,MAAMC,OAA+B,GAAG;AACtCC,EAAAA,OAAO,EAAE,CAAC;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAD,KAAgC;AACvC,QAAIC,KAAJ;;AACA,QAAID,QAAJ,EAAc;AACZA,MAAAA,QAAQ,CAACE,OAAT,CAAkBC,KAAD,IAAW;AAC1B,YAAIA,KAAK,CAACC,IAAN,IAAc,KAAlB,EAAyB;AAAA;;AACvBH,UAAAA,KAAK,gBACH,QAAC,aAAD;AACE,YAAA,GAAG,EAAEE,KAAK,CAACJ,OAAN,CAAcM,GADrB;AAEE,YAAA,OAAO,oBAAEF,KAAK,CAACJ,OAAR,mDAAE,eAAeO,GAF1B;AAGE,YAAA,MAAM,EAAEP,OAAO,CAAC,aAAD;AAHjB;AAAA;AAAA;AAAA;AAAA,kBADF;AAOD;AACF,OAVD;AAYA,UAAIE,KAAJ,EAAW,OAAOA,KAAP;;AAEX,UAAID,QAAQ,IAAIA,QAAQ,CAAC,CAAD,CAApB,IAA2BA,QAAQ,CAAC,CAAD,CAAR,CAAY,MAAZ,CAA/B,EAAoD;AAClD,YAAIA,QAAQ,CAAC,CAAD,CAAR,CAAY,MAAZ,EAAoBO,QAApB,CAA6B,aAA7B,CAAJ,EAAiD;AAC/C,8BACE;AACE,YAAA,KAAK,EAAC,MADR;AAEE,YAAA,MAAM,EAAC,KAFT;AAGE,YAAA,GAAG,EAAG,GAAEP,QAAQ,CAAC,CAAD,CAAR,CAAY,MAAZ,CAAoB;AAH9B;AAAA;AAAA;AAAA;AAAA,kBADF;AAOD;AACF;AACF;AACF;AA9BqC,CAAxC;;AAqCA,MAAMQ,QAA0B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC/C,QAAMC,EAAE,GAAGjB,KAAK,CAAE,GAAEgB,IAAK,EAAT,EAAYZ,OAAZ,CAAhB;AAEA,sBAAO,QAAC,SAAD;AAAA,cAAYa;AAAZ;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAJD;;AAMA,eAAeF,QAAf;AAEA,MAAMG,SAAS,GAAGf,UAAU,CAAC;AAC3BgB,EAAAA,IAAI,EAAE;AACJC,IAAAA,UAAU,EAAE,GADR;AAEJC,IAAAA,QAAQ,EAAE,EAFN;AAGJC,IAAAA,KAAK,EAAE,SAHH;AAIJC,IAAAA,WAAW,EAAE;AAJT;AADqB,CAAD,CAAV,CAOfrB,GAPe,CAAlB","sourcesContent":["import React from \"react\";\n\nimport parse, { HTMLReactParserOptions } from \"html-react-parser\";\nimport PostBodyImage from \"./PostBodyImage/PostBodyImage\";\nimport { Box, withStyles } from \"@material-ui/core\";\n\nconst options: HTMLReactParserOptions = {\n  replace: ({ attribs, children }: any) => {\n    let image: any;\n    if (children) {\n      children.forEach((child) => {\n        if (child.name == \"img\") {\n          image = (\n            <PostBodyImage\n              src={child.attribs.src}\n              caption={child.attribs?.alt}\n              isWide={attribs[\"data-layout\"]}\n            />\n          );\n        }\n      });\n\n      if (image) return image;\n\n      if (children && children[0] && children[0][\"data\"]) {\n        if (children[0][\"data\"].includes(\"youtube.com\")) {\n          return (\n            <iframe\n              width=\"100%\"\n              height=\"400\"\n              src={`${children[0][\"data\"]}`}\n            ></iframe>\n          );\n        }\n      }\n    }\n  },\n};\n\ninterface IProps {\n  body: string;\n}\n\nconst PostBody: React.FC<IProps> = ({ body }) => {\n  const el = parse(`${body}`, options);\n\n  return <Container>{el}</Container>;\n};\n\nexport default PostBody;\n\nconst Container = withStyles({\n  root: {\n    lineHeight: 1.6,\n    fontSize: 13,\n    color: \"#686868\",\n    marginBlock: 5,\n  },\n})(Box);\n"]},"metadata":{},"sourceType":"module"}