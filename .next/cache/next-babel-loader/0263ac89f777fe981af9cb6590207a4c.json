{"ast":null,"code":"import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { local_backend_url } from \"../url\";\nexport default function useSearch(url, query) {\n  const {\n    0: data,\n    1: setData\n  } = useState({\n    posts: [],\n    topics: {},\n    tags: {}\n  });\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: error,\n    1: setError\n  } = useState(false);\n  useEffect(() => {\n    setData([]);\n  }, [query]);\n  useEffect(() => {\n    if (!query) return () => {};\n    setLoading(true);\n    setError(false);\n    let cancel;\n    axios({\n      method: \"GET\",\n      url: `${local_backend_url}${url}`,\n      params: {\n        query: query\n      },\n      cancelToken: new axios.CancelToken(c => cancel = c),\n      headers: {\n        Accept: \"application/json\"\n      }\n    }).then(res => {\n      setData(res.data);\n      console.log(res.data);\n      setLoading(false);\n    }).catch(error => {\n      if (axios.isCancel(error)) return;\n      setError(true);\n    });\n    return () => {\n      cancel();\n    };\n  }, [query]);\n  return {\n    data,\n    loading,\n    error\n  };\n}","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/custom-hooks/useSearch.ts"],"names":["axios","useEffect","useState","local_backend_url","useSearch","url","query","data","setData","posts","topics","tags","loading","setLoading","error","setError","cancel","method","params","cancelToken","CancelToken","c","headers","Accept","then","res","console","log","catch","isCancel"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,iBAAT,QAAkC,QAAlC;AAEA,eAAe,SAASC,SAAT,CAAmBC,GAAnB,EAAgCC,KAAhC,EAA+C;AAC5D,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBN,QAAQ,CAAC;AAAEO,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,MAAM,EAAE,EAArB;AAAyBC,IAAAA,IAAI,EAAE;AAA/B,GAAD,CAAhC;AACA,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBX,QAAQ,CAAU,KAAV,CAAtC;AACA,QAAM;AAAA,OAACY,KAAD;AAAA,OAAQC;AAAR,MAAoBb,QAAQ,CAAU,KAAV,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD,GAFQ,EAEN,CAACF,KAAD,CAFM,CAAT;AAIAL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACK,KAAL,EAAY,OAAO,MAAM,CAAE,CAAf;AAEZO,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,IAAAA,QAAQ,CAAC,KAAD,CAAR;AAEA,QAAIC,MAAJ;AAEAhB,IAAAA,KAAK,CAAC;AACJiB,MAAAA,MAAM,EAAE,KADJ;AAEJZ,MAAAA,GAAG,EAAG,GAAEF,iBAAkB,GAAEE,GAAI,EAF5B;AAGJa,MAAAA,MAAM,EAAE;AAAEZ,QAAAA,KAAK,EAAEA;AAAT,OAHJ;AAIJa,MAAAA,WAAW,EAAE,IAAInB,KAAK,CAACoB,WAAV,CAAuBC,CAAD,IAAQL,MAAM,GAAGK,CAAvC,CAJT;AAKJC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE;AADD;AALL,KAAD,CAAL,CASGC,IATH,CASSC,GAAD,IAAS;AACbjB,MAAAA,OAAO,CAACiB,GAAG,CAAClB,IAAL,CAAP;AACAmB,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAAClB,IAAhB;AAEAM,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAdH,EAeGe,KAfH,CAeUd,KAAD,IAAW;AAChB,UAAId,KAAK,CAAC6B,QAAN,CAAef,KAAf,CAAJ,EAA2B;AAC3BC,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KAlBH;AAoBA,WAAO,MAAM;AACXC,MAAAA,MAAM;AACP,KAFD;AAGD,GA/BQ,EA+BN,CAACV,KAAD,CA/BM,CAAT;AAiCA,SAAO;AAAEC,IAAAA,IAAF;AAAQK,IAAAA,OAAR;AAAiBE,IAAAA;AAAjB,GAAP;AACD","sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { local_backend_url } from \"../url\";\n\nexport default function useSearch(url: String, query: String) {\n  const [data, setData] = useState({ posts: [], topics: {}, tags: {} });\n  const [loading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState<boolean>(false);\n\n  useEffect(() => {\n    setData([]);\n  }, [query]);\n\n  useEffect(() => {\n    if (!query) return () => {};\n\n    setLoading(true);\n    setError(false);\n\n    let cancel: Function;\n\n    axios({\n      method: \"GET\",\n      url: `${local_backend_url}${url}`,\n      params: { query: query },\n      cancelToken: new axios.CancelToken((c) => (cancel = c)),\n      headers: {\n        Accept: \"application/json\",\n      },\n    })\n      .then((res) => {\n        setData(res.data);\n        console.log(res.data);\n\n        setLoading(false);\n      })\n      .catch((error) => {\n        if (axios.isCancel(error)) return;\n        setError(true);\n      });\n\n    return () => {\n      cancel();\n    };\n  }, [query]);\n\n  return { data, loading, error };\n}\n"]},"metadata":{},"sourceType":"module"}