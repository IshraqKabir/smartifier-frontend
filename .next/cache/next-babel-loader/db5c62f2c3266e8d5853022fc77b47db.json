{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ishraqkabir/workspace/smartifier-frontend/Components/Layout/Topbar/NavItems/NavItem/Login/Login.tsx\";\nimport React, { useEffect } from \"react\";\nimport useLocalState from \"../../../../../../custom-hooks/useLocalState\";\nimport { backend_url } from \"../../../../../../url\";\nimport post from \"../../../../../../UtilFunctions/post\";\nimport User from \"./User/User\";\n\nconst Login = () => {\n  const [user, setUser] = useLocalState(\"user\", \"\");\n\n  const onSignIn = async googleUser => {\n    if (!googleUser.error) {\n      const profile = googleUser.getBasicProfile();\n      const id_token = googleUser.tokenId; // const google_id = parseInt(googleUser.profileObj.googleId);\n\n      post(`${backend_url}/api/auth/google/verify`, {\n        id_token: id_token,\n        google_id: google_id\n      }, response => {\n        setUser(response.data);\n      }, () => {});\n    }\n  };\n\n  const onFail = ({\n    error\n  }) => {\n    console.log(error);\n  };\n\n  useEffect(() => {\n    const w = window;\n    const {\n      gapi\n    } = w;\n    gapi.load(\"auth2\", () => {\n      const auth2 = gapi.auth2.init({\n        client_id: \"540083931812-7bt05mqtrriog1f1kdpvotbvnr01iien\"\n      });\n      gapi.signin2.render(\"signin-button\", {\n        width: \"100%\",\n        height: 40,\n        longtitle: false,\n        onsuccess: onSignIn,\n        onfailure: onFail\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !user ? /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"signin-button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(User, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 54\n    }, this)\n  }, void 0, false);\n};\n\nexport default Login;","map":{"version":3,"sources":["/home/ishraqkabir/workspace/smartifier-frontend/Components/Layout/Topbar/NavItems/NavItem/Login/Login.tsx"],"names":["React","useEffect","useLocalState","backend_url","post","User","Login","user","setUser","onSignIn","googleUser","error","profile","getBasicProfile","id_token","tokenId","google_id","response","data","onFail","console","log","w","window","gapi","load","auth2","init","client_id","signin2","render","width","height","longtitle","onsuccess","onfailure"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,8CAA1B;AAEA,SAASC,WAAT,QAA4B,uBAA5B;AAEA,OAAOC,IAAP,MAAiB,sCAAjB;AAEA,OAAOC,IAAP,MAAiB,aAAjB;;AAIA,MAAMC,KAAuB,GAAG,MAAM;AACpC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,aAAa,CAAM,MAAN,EAAc,EAAd,CAArC;;AAEA,QAAMO,QAAQ,GAAG,MAAOC,UAAP,IAA2B;AAC1C,QAAI,CAACA,UAAU,CAACC,KAAhB,EAAuB;AACrB,YAAMC,OAAO,GAAGF,UAAU,CAACG,eAAX,EAAhB;AAEA,YAAMC,QAAQ,GAAGJ,UAAU,CAACK,OAA5B,CAHqB,CAIrB;;AAEAX,MAAAA,IAAI,CACD,GAAED,WAAY,yBADb,EAEF;AAAEW,QAAAA,QAAQ,EAAEA,QAAZ;AAAsBE,QAAAA,SAAS,EAAEA;AAAjC,OAFE,EAGDC,QAAD,IAAmB;AACjBT,QAAAA,OAAO,CAACS,QAAQ,CAACC,IAAV,CAAP;AACD,OALC,EAMF,MAAM,CAAE,CANN,CAAJ;AAQD;AACF,GAhBD;;AAkBA,QAAMC,MAAM,GAAG,CAAC;AAAER,IAAAA;AAAF,GAAD,KAAe;AAC5BS,IAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ;AACD,GAFD;;AAIAV,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMqB,CAAM,GAAGC,MAAf;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAWF,CAAjB;AAEAE,IAAAA,IAAI,CAACC,IAAL,CAAU,OAAV,EAAmB,MAAM;AACvB,YAAMC,KAAK,GAAGF,IAAI,CAACE,KAAL,CAAWC,IAAX,CAAgB;AAC5BC,QAAAA,SAAS,EAAE;AADiB,OAAhB,CAAd;AAIAJ,MAAAA,IAAI,CAACK,OAAL,CAAaC,MAAb,CAAoB,eAApB,EAAqC;AACnCC,QAAAA,KAAK,EAAE,MAD4B;AAEnCC,QAAAA,MAAM,EAAE,EAF2B;AAGnCC,QAAAA,SAAS,EAAE,KAHwB;AAInCC,QAAAA,SAAS,EAAEzB,QAJwB;AAKnC0B,QAAAA,SAAS,EAAEhB;AALwB,OAArC;AAOD,KAZD;AAaD,GAjBQ,EAiBN,EAjBM,CAAT;AAmBA,sBAAO;AAAA,cAAG,CAACZ,IAAD,gBAAQ;AAAK,MAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,YAAR,gBAAyC,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAA5C,mBAAP;AACD,CA7CD;;AA+CA,eAAeD,KAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport useLocalState from \"../../../../../../custom-hooks/useLocalState\";\n\nimport { backend_url } from \"../../../../../../url\";\n\nimport post from \"../../../../../../UtilFunctions/post\";\n\nimport User from \"./User/User\";\n\ninterface IProps {}\n\nconst Login: React.FC<IProps> = () => {\n  const [user, setUser] = useLocalState<any>(\"user\", \"\");\n\n  const onSignIn = async (googleUser: any) => {\n    if (!googleUser.error) {\n      const profile = googleUser.getBasicProfile();\n\n      const id_token = googleUser.tokenId;\n      // const google_id = parseInt(googleUser.profileObj.googleId);\n\n      post(\n        `${backend_url}/api/auth/google/verify`,\n        { id_token: id_token, google_id: google_id },\n        (response: any) => {\n          setUser(response.data);\n        },\n        () => {}\n      );\n    }\n  };\n\n  const onFail = ({ error }) => {\n    console.log(error);\n  };\n\n  useEffect(() => {\n    const w: any = window;\n    const { gapi } = w;\n\n    gapi.load(\"auth2\", () => {\n      const auth2 = gapi.auth2.init({\n        client_id: \"540083931812-7bt05mqtrriog1f1kdpvotbvnr01iien\",\n      });\n\n      gapi.signin2.render(\"signin-button\", {\n        width: \"100%\",\n        height: 40,\n        longtitle: false,\n        onsuccess: onSignIn,\n        onfailure: onFail,\n      });\n    });\n  }, []);\n\n  return <>{!user ? <div id=\"signin-button\"></div> : <User />}</>;\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}